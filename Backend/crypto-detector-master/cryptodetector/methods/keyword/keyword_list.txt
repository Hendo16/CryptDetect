# Copyright (c) 2017 Wind River Systems, Inc.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at:

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software  distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
# OR CONDITIONS OF ANY KIND, either express or implied.

#
# List of keywords
#
# \b is a special symbol that matches beginning or end of a token (word)
#
# Use \bword\b to search for whole-words
#
# "language" can be one of:
# 	"all" \(any text file),
# 	"source" \(any source code file),
# 	"c" \(C or C++),
# 	"python",
# 	"java",
# 	"shell",
# 	"perl",
# 	"javascript",
# 	"scala",
# 	"haskell",
# 	"pascal"

[keyword_list_version]
	6

[{"evidence_type": "algorithm/asymmetric/DiffieHellman", "language": "all"}]
	"Diffie Hellman"
	"Diffie-Hellman"
	"Diffie_Hellman"
	"Diffie.Hellman"
	"DiffieHellman"
	"DHParameterSpec"
	"0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1"
	"DHPublicKey"
	"DHPubKey"
	"DHPrivateKey"
	"DHPrivKey"
	"DH_generate_key"
	"DH_compute_key"

[{"evidence_type": "algorithm/asymmetric/DSA", "language": "all"}]
	"Digital Signature Algorithm"
	"\bDSA_"
	"_DSA\b"
	"_DSA_"
	"\bdsa\b"
	"\bDSAPrivateKey"
	"\bDSAPublicKey"
	"\bDSA_new"

[{"evidence_type": "algorithm/asymmetric/ECC", "language": "all"}]
	"Elliptic Curve"
	"Elliptic_Curve"
	"Elliptic-Curve"
	"Elliptic.Curve"
	"EllipticCurve"
	"ECDSA"
	"ECDH"
	"\bECIES"
	"ECMQV"
	"\bECNR"
	"\bCkDh\b"
	"CkCrypt2"
	"\becc_make_key"
	"1.2.840.10045.3.1.1"
	"secp192r1"
	"secp256r1"
	"secp521r1"
	"\bEC2NP"
	"_EC2NP_"
	"_EC2NP\b"

[{"evidence_type": "algorithm/asymmetric/ElGamal", "language": "all"}]
	"El Gamal"
	"El_Gamal"
	"El-Gamal"
	"El.Gamal"
	"ElGamal"
	"\bELG_secret_key"
	"\bELG_public_key"
	"\belg_generate"
	"\belg_encrypt"
	"\belg_decrypt"
	"\belg_sign"
	"\belg_verify"

[{"evidence_type": "algorithm/symmetric/block-cipher/GOST", "language": "all"}]
	"\bGOST 28147"
	"\bGOST_28147"
	"\bGOST-28147"
	"\bGOST28147"
	"1.2.643.2.2.30."
	"1.2.643.2.2.31."

[{"evidence_type": "algorithm/asymmetric/RSA", "language": "all"}]
	"\bRSA_"
	"_RSA\b"
	"_RSA_"
	"\brsa\b"
	"RSASignature"
	"\bX931"
	"\bX9_31"
	"\bX9-31"
	"\bX9.31"
	"\bOAEP"
	"\bSecurID\b"
	"RSAPrivateKey"
	"RSAPublicKey"
	"RSAPrivKey"
	"RSAPubKey"
	"RSAKey"

[{"evidence_type": "algorithm/hash/Hash", "language": "all"}]
	"\blhash"
	"\brhash"
	"\bhexdigest"

[{"evidence_type": "algorithm/hash/BLAKE", "language": "all"}]
	"\bBLAKE256"
	"\bBLAKE_256"
	"\bBLAKE 256"
	"\bBLAKE-256"
	"\bBLAKE2b"

[{"evidence_type": "algorithm/hash/HMAC", "language": "all"}]
	"\bHMAC"
	"\bHKDF"
	"HMAX_MD5_Context"
	"HMAC_SHA"
	"HMAC_MD5"
	"HMAC_MD4"
	"HMAC_CTX"


[{"evidence_type": "protocol/MAC", "language": "all"}]
	"\bCMAC\b"
	"\bCMAC_"
	"\bTTMAC\b"
	"\bVMAC"

[{"evidence_type": "algorithm/hash/MD2", "language": "all"}]
	"_MD2_"
	"_MD2\b"
	"\bMD2\b"
	"\bMD2_"
	"\bmd2sum\b"

[{"evidence_type": "algorithm/hash/MD4", "language": "all"}]
	"\bmd4sum\b"
	"\bMD4\b"
	"_MD4\b"
	"\bMD4_"
	"_MD4_"

[{"evidence_type": "algorithm/hash/MD5", "language": "all"}]
	"\bmd5sum\b"
	"\bMD5\b"
	"_MD5\b"
	"\bMD5_"
	"_MD5_"
	"\bdgstsum\b"
	"\bmdString"
	"0xd76aa478"
	"0xe8c7b756"
	"0x5A827999"

[{"evidence_type": "algorithm/hash/MDC-2", "language": "all"}]
	"\bmdc2sum\b"
	"\bMDC2\b"

[{"evidence_type": "algorithm/hash/RIPEMD", "language": "all"}]
	"\bripemd160sum\b"
	"\bRIPEMD"
	"RIPEMD128"
	"RIPEMD160"
	"RIPEMD256"
	"RIPEMD320"
	"50A28BE6"

[{"evidence_type": "algorithm/hash/SHA1", "language": "all"}]
	"\bsha1sum\b"
	"\bshasum\b"
	"\bSHA1"
	"\bSHA-1"
	"\bSHA_Init"
	"\bSHA_Update"
	"\bSHA_End"
	"_SHA1"
	"_SHA-1"
	"0x67452301"

[{"evidence_type": "algorithm/hash/SHA2", "language": "all"}]
	"\bSHA224"
	"\bSHA-224"
	"\bSHA_224"
	"\bSHA256"
	"\bSHA-256"
	"\bSHA_256"
	"\bSHA384"
	"\bSHA-384"
	"\bSHA_384"
	"\bSHA512"
	"\bSHA-512"
	"\bSHA_512"
	"\bSHA2"
	"\bSHA-2"
	"_SHA224"
	"_SHA-224"
	"_SHA_224"
	"_SHA256"
	"_SHA-256"
	"_SHA_256"
	"_SHA384"
	"_SHA-384"
	"_SHA_384"
	"_SHA512"
	"_SHA-512"
	"_SHA_512"
	"_SHA2"
	"_SHA-2"
	"0x428a2f98"

[{"evidence_type": "algorithm/hash/SHA3", "language": "all"}]
	"\bSHA3"
	"\bSHA-3"
	"\bkeccak"
	"_keccak"
	"\bkeccak256"
	"_keccak256"
	"8000000000008089"

[{"evidence_type": "algorithm/hash/Tiger", "language": "all"}]
	"0x02aab17cf7e90c5e"
	"\btiger_init"
	"\btiger_final"
	"\btiger_context"

[{"evidence_type": "algorithm/hash/Whirlpool", "language": "all"}]
	"0x1823c6e887b8014f"
	"\bwhirlpool"

[{"evidence_type": "algorithm/hybrid/PGP", "language": "all"}]
	"\bGnuPG\b"
	"\bPGP\b"
	"\bPGP_"
	"_PGP_"
	"_PGP\b"
	"\bGPG\b"
	"\bGPG_"
	"_GPG_"
	"_GPG\b"
	"libpgp"

[{"evidence_type": "algorithm/symmetric/block-cipher/AES", "language": "all"}]
	"Advanced Encryption Standard"
	"\bAES_"
	"_AES\b"
	"_AES_"
	"\baes\b"
	"AES128"
	"AES256"
	"\brijndael"
	"\bBMGL"
	"\baesKey\b"
	"99, 124, 119, 123, 242, 107, 111, 197"

[{"evidence_type": "algorithm/symmetric/block-cipher/Blowfish", "language": "all"}]
	"blowfish"
	"0xD1310BA6"
	"0x8979FB1B"

[{"evidence_type": "algorithm/symmetric/block-cipher/Camellia", "language": "all"}]
	"Camellia"
	"0xA09E667F"

[{"evidence_type": "algorithm/symmetric/block-cipher/IntelCascade", "language": "all"}]
	"cascade_cipher"

[{"evidence_type": "algorithm/symmetric/block-cipher/CAST5", "language": "all"}]
	"\bCAST5"
	"\bCAST128"
	"\bCAST-128"
	"\bCAST_128"
	"0x30fb40d4"
	"0x7EC90C04"

[{"evidence_type": "algorithm/symmetric/block-cipher/CAST6", "language": "all"}]
	"\bCAST6"
	"\bCAST256"
	"\bCAST-256"
	"\bCAST_256"
	"0x0F1946B8"

[{"evidence_type": "algorithm/symmetric/block-cipher/DES", "language": "all"}]
	"Data Encryption Standard"
	"DES algorithm"
	"\bDES_key"
	"\bDES_"
	"_DES\b"
	"_DES_"
	"tripledes"
	"triple_des"
	"\b3DES"
	"_3DES"
	"DES-EDE"
	"DES-XEX"
	"DES3-KD"
	"\bDESX"
	"0x01010400"
	"58, 50, 42, 34, 26, 18, 10"
	"\bRawDES"

[{"evidence_type": "algorithm/symmetric/block-cipher/Feistel", "language": "all"}]
	"\bfeistel"
	"Luby Rackoff"
	"LubyRackoff"
	"Luby-Rackoff"

[{"evidence_type": "algorithm/symmetric/block-cipher/KASUMI", "language": "all"}]
	"\bKASUMI"

[{"evidence_type": "algorithm/symmetric/block-cipher/BEARLION", "language": "all"}]
	"\bbearlion"
	"\bbear-lion"
	"\bbear_lion"
	"\bbear lion"

[{"evidence_type": "algorithm/symmetric/block-cipher/IDEA", "language": "all"}]
	"\bideainit"
	"\bidea_encrypt"
	"\bidea_decrypt"
	"\bideaEncrypt"
	"\bideaDecrypt"

[{"evidence_type": "algorithm/symmetric/block-cipher/SAFER", "language": "all"}]
	"\bSAFERSK\b"
	"\bSAFERSK_"
	"\bSAFER_SK\b"
	"\bSAFER-SK\b"
	"\bSAFERK"
	"\bSAFER-K\b"
	"\bSAFER_K\b"

[{"evidence_type": "algorithm/symmetric/block-cipher/SHACAL", "language": "all"}]
	"\bSHACAL"

[{"evidence_type": "algorithm/symmetric/block-cipher/CSCipher", "language": "all"}]
	"\bCS_Cipher"
	"\bCS Cipher"
	"\bCS-Cipher"
	"\bCSCipher"

[{"evidence_type": "algorithm/symmetric/block-cipher/DFC", "language": "all"}]
	"\bDFCv2"

[{"evidence_type": "algorithm/symmetric/block-cipher/Serpent", "language": "all"}]
	"\bSerpent\b"
	"\bserpent_"
	"_serpent"

[{"evidence_type": "algorithm/symmetric/block-cipher/Twofish", "language": "all"}]
	"twofish"
	"0xA9, 0x67, 0xB3, 0xE8"
	"0xBCBC3275"

[{"evidence_type": "algorithm/symmetric/block-cipher/Threefish", "language": "all"}]
	"ThreeFish"

[{"evidence_type": "algorithm/symmetric/block-cipher/XTEA", "language": "all"}]
	"\bXTEA"

[{"evidence_type": "algorithm/symmetric/stream-cipher/ChaCha20", "language": "all"}]
	"\bChaCha20"

[{"evidence_type": "algorithm/symmetric/stream-cipher/Salsa20", "language": "all"}]
	"Salsa20"
	"Salsa_20"
	"Salsa-20"

[{"evidence_type": "algorithm/symmetric/stream-cipher/XSalsa20", "language": "all"}]
	"\bXSalsa20"

[{"evidence_type": "algorithm/symmetric/stream-cipher/SOSEMANUK", "language": "all"}]
	"\bSosemanuk"

[{"evidence_type": "algorithm/symmetric/block-cipher/MISTY1", "language": "all"}]
	"\bMISTY1"
	"0x1B, 0x32, 0x33, 0x5A"

[{"evidence_type": "algorithm/symmetric/block-cipher/NOEKEON", "language": "all"}]
	"\bnoekeon"

[{"evidence_type": "algorithm/symmetric/block-cipher/RC2", "language": "all"}]
	"\bRC2_128"
	"RC2_encrypt"
	"RC2_decrypt"
	"\bRC2Context"
	"RC2_set_key"
	"\brc2_cbc"
	"\brc2_cfb"
	"\brc2_ecb"
	"\brc2_ofb"
	"\brc2-cbc"
	"\brc2-cfb"
	"\brc2-ecb"
	"\brc2-ofb"
	"\bRC2_BLOCK_SIZE"
	"\bRC2_KEY"
	"RC2 algorithm"

[{"evidence_type": "algorithm/symmetric/stream-cipher/RC4", "language": "all"}]
	"\bArcfour"
	"\barcfour_"
	"\bRC4_128"
	"RC4_encrypt"
	"RC4_decrypt"
	"\bRC4Context"
	"\brc4_cbc"
	"\brc4_cfb"
	"\brc4_ecb"
	"\brc4_ofb"
	"\brc4-cbc"
	"\brc4-cfb"
	"\brc4-ecb"
	"\brc4-ofb"
	"_rc4_cbc"
	"_rc4_cfb"
	"_rc4_ecb"
	"_rc4_ofb"
	"_rc4-cbc"
	"_rc4-cfb"
	"_rc4-ecb"
	"_rc4-ofb"
	"\bRC4_KEY"
	"RC4 algorithm"
	"\bRC4_HMAC"

[{"evidence_type": "algorithm/symmetric/block-cipher/RC5", "language": "all"}]
	"0xb7e15163"
	"RC5_encrypt"
	"RC5_decrypt"
	"\bRC5Context"
	"\brc5_cbc"
	"\brc5_cfb"
	"\brc5_ecb"
	"\brc5_ofb"
	"\brc5-cbc"
	"\brc5-cfb"
	"\brc5-ecb"
	"\brc5-ofb"
	"\bRC5_KEY"
	"RC5 algorithm"

[{"evidence_type": "algorithm/symmetric/block-cipher/RC6", "language": "all"}]
	"RC6_encrypt"
	"RC6_decrypt"
	"\brc6_cbc"
	"\brc6_cfb"
	"\brc6_ecb"
	"\brc6_ofb"
	"\brc6-cbc"
	"\brc6-cfb"
	"\brc6-ecb"
	"\brc6-ofb"
	"\bRC6_KEY"
	"RC6 algorithm"

[{"evidence_type": "algorithm/symmetric/block-cipher/SEED", "language": "all"}]
	"0x16c6d2d4"
	"0x3c6ef373"
	"\bseed_encrypt"
	"\bseed_decrypt"
	"\bseed_setkey"

[{"evidence_type": "library/BeeCrypt", "language": "all"}]
	"\bBeeCrypt"

[{"evidence_type": "library/BouncyCastle", "language": "source"}]
	"bouncycastle"
	"spongycastle"

[{"evidence_type": "library/Botan", "language": "all"}]
	"\bbotan\b"
	"\bBOTAN_"

[{"evidence_type": "library/libgcrypt", "language": "all"}]
	"\bLibgcrypt"
	"\bGCRY_"

[{"evidence_type": "library/Crypto++", "language": "all"}]
	"\bCRYPTOPP"
	"ProcessAndXorBlock"
	"BlockCipherFinal"

[{"evidence_type": "library/cryptlib", "language": "all"}]
	"\bcryptlib"
	"\bcryptCreate"
	"\bcryptEncrypt"
	"\bcryptDecrypt"

[{"evidence_type": "library/OpenSSH", "language": "all"}]
	"\blibssh"
	"\bOpenSSH"

[{"evidence_type": "library/OpenSSL", "language": "all"}]
	"\blibssl"
	"\bOpenSSL"
	"_OpenSSL"

[{"evidence_type": "protocol/kerberos", "language": "all"}]
	"kerberos"
	"\bKRB5_"
	"\bkrb5\b"

[{"evidence_type": "protocol/PKCS", "language": "all"}]
	"pkcs"
	"\bx509"
	"\bx.509"
	"\bx-509"
	"\bpkcs12.h\b"
	"_X509_"
	"_X509\b"
	"\bX509_digest"

[{"evidence_type":"protocol/ASN1", "language":"all"}]
	"\bpkcs8_asn1.h\b"
	"\bpkcs9_asn1.h\b"
	"\bpkcs12_asn1.h\b"
	"\bocsp_asn1.h\b"
	"\basn1_err"
	"\bpkinit_asn1.h\b"

[{"evidence_type": "protocol/SSH", "language": "all"}]
	"\bssh2"
	"\bssh_"
	"_ssh\b"
	"\bssh\b"
	"_ssh_"

[{"evidence_type": "protocol/SSL", "language": "all"}]
	"\bSSL_"
	"_SSL_"
	"_SSL\b"
	"\bssl\b"
	"\bossl_"
	"SSLSocket"
	"\bssl.h\b"

[{"evidence_type": "protocol/TLS", "language": "all"}]
	"TLSv1"
	"mbedtls"
	"\bgnutls"
	"\btls_cipher"
	"\btls_server"
	"\btls_client"
	"Transport Layer Security"
	"SSL/TLS"

[{"evidence_type": "protocol/MQV", "language": "all"}]
	"\bMQV\b"
	"_MQV_"
	"\bMQV_Domain"

[{"evidence_type":"algorithm/symmetric/substitution-cipher/ROT13", "language": "all"}]
	"\bROT13\b"
	"\bROT13_"

[{"evidence_type": "library/glibC", "language": "all"}]
	"glibc/crypt"

[{"evidence_type": "protocol/MSCHAP", "language": "all"}]
	"\bMS-CHAP"
	"\bMSCHAP"

[{"evidence_type": "algorithm/hash/Adler32", "language": "all"}]
	"\bAdler-32"
	"\bAdler32"

[{"evidence_type": "Bitcoin", "language": "all"}]
	"\bnode/blockstorage.h\b"
	"\bnode/coin.h\b"
	"\bnode/transaction.h\b"
	"\bnode/psbt.h\b"
	"\bbip32"
	"\bbip32_"
	"_bip32\b"
	"\bip32\b"
	"_bip32_"
	"\bbip38"
	"\bbip38_"
	"_bip38\b"
	"\bip38\b"
	"_bip38_"
	"\brpc/server_util.h\b"
	"\butil/moneystr.h\b"
	"\bbech32"
	"\bbech32_"
	"_bech32\b"
	"\bech32\b"
	"_bech32_"
	"_bn256_"
	"\bbip"
	"\bbip_"
	"_bip\b"
	"\bip\b"
	"_bip_"
	"\bgetbestblockhash"
	"\bgetbestblockhash_"
	"_getbestblockhash\b"
	"\getbestblockhash\b"
	"_getbestblockhash_"
	"\bgetblockchaininfo"
	"\bgetblockchaininfo_"
	"_getblockchaininfo\b"
	"\getblockchaininfo\b"
	"_getblockchaininfo_"
	"\bgetblockcount"
	"\bgetblockcount_"
	"_getblockcount\b"
	"\getblockcount\b"
	"_getblockcount_"
	"\bgetblockfilter"
	"\bgetblockfilter_"
	"_getblockfilter\b"
	"\getblockfilter\b"
	"_getblockfilter_"
	"\bgetblockhash"
	"\bgetblockhash_"
	"_getblockhash\b"
	"\getblockhash\b"
	"_getblockhash_"
	"\bgetblockheader"
	"\bgetblockheader_"
	"_getblockheader\b"
	"\getblockheader\b"
	"_getblockheader_"
	"\bgetblockstats"
	"\bgetblockstats_"
	"_getblockstats\b"
	"\getblockstats\b"
	"_getblockstats_"
	"\bgetchaintips"
	"\bgetchaintips_"
	"_getchaintips\b"
	"\getchaintips\b"
	"_getchaintips_"
	"\bgetchaintxstats"
	"\bgetchaintxstats_"
	"_getchaintxstats\b"
	"\getchaintxstats\b"
	"_getchaintxstats_"
	"\bgetdifficulty"
	"\bgetdifficulty_"
	"_getdifficulty\b"
	"\getdifficulty\b"
	"_getdifficulty_"
	"\bgetmempoolancestors"
	"\bgetmempoolancestors_"
	"_getmempoolancestors\b"
	"\getmempoolancestors\b"
	"_getmempoolancestors_"
	"\bgetmempooldescendants"
	"\bgetmempooldescendants_"
	"_getmempooldescendants\b"
	"\getmempooldescendants\b"
	"_getmempooldescendants_"
	"\bgetmempoolentry"
	"\bgetmempoolentry_"
	"_getmempoolentry\b"
	"\getmempoolentry\b"
	"_getmempoolentry_"
	"\bgetmempoolinfo"
	"\bgetmempoolinfo_"
	"_getmempoolinfo\b"
	"\getmempoolinfo\b"
	"_getmempoolinfo_"
	"\bgetrawmempool"
	"\bgetrawmempool_"
	"_getrawmempool\b"
	"\getrawmempool\b"
	"_getrawmempool_"
	"\bgettxout"
	"\bgettxout_"
	"_gettxout\b"
	"\gettxout\b"
	"_gettxout_"
	"\bgettxoutproof"
	"\bgettxoutproof_"
	"_gettxoutproof\b"
	"\gettxoutproof\b"
	"_gettxoutproof_"
	"\bgettxoutsetinfo"
	"\bgettxoutsetinfo_"
	"_gettxoutsetinfo\b"
	"\gettxoutsetinfo\b"
	"_gettxoutsetinfo_"
	"\bpreciousblock"
	"\bpreciousblock_"
	"_preciousblock\b"
	"\preciousblock\b"
	"_preciousblock_"
	"\bpruneblockchain"
	"\bpruneblockchain_"
	"_pruneblockchain\b"
	"\pruneblockchain\b"
	"_pruneblockchain_"
	"\bsavemempool"
	"\bsavemempool_"
	"_savemempool\b"
	"\savemempool\b"
	"_savemempool_"
	"\bscantxoutset"
	"\bscantxoutset_"
	"_scantxoutset\b"
	"\scantxoutset\b"
	"_scantxoutset_"
	"\bverifychain"
	"\bverifychain_"
	"_verifychain\b"
	"\verifychain\b"
	"_verifychain_"
	"\bverifytxoutproof"
	"\bverifytxoutproof_"
	"_verifytxoutproof\b"
	"\verifytxoutproof\b"
	"_verifytxoutproof_"
	"\bgetmemoryinfo"
	"\bgetmemoryinfo_"
	"_getmemoryinfo\b"
	"\getmemoryinfo\b"
	"_getmemoryinfo_"
	"\bgetrpcinfo"
	"\bgetrpcinfo_"
	"_getrpcinfo\b"
	"\getrpcinfo\b"
	"_getrpcinfo_"
	"\bgenerateblock"
	"\bgenerateblock_"
	"_generateblock\b"
	"\generateblock\b"
	"_generateblock_"
	"\bgeneratetoaddress"
	"\bgeneratetoaddress_"
	"_generatetoaddress\b"
	"\generatetoaddress\b"
	"_generatetoaddress_"
	"\bgeneratetodescriptor"
	"\bgeneratetodescriptor_"
	"_generatetodescriptor\b"
	"\generatetodescriptor\b"
	"_generatetodescriptor_"
	"\bgetblocktemplate"
	"\bgetblocktemplate_"
	"_getblocktemplate\b"
	"\getblocktemplate\b"
	"_getblocktemplate_"
	"\bgetmininginfo"
	"\bgetmininginfo_"
	"_getmininginfo\b"
	"\getmininginfo\b"
	"_getmininginfo_"
	"\bgetnetworkhashps"
	"\bgetnetworkhashps_"
	"_getnetworkhashps\b"
	"\getnetworkhashps\b"
	"_getnetworkhashps_"
	"\bprioritisetransaction"
	"\bprioritisetransaction_"
	"_prioritisetransaction\b"
	"\prioritisetransaction\b"
	"_prioritisetransaction_"
	"\bsubmitblock"
	"\bsubmitblock_"
	"_submitblock\b"
	"\submitblock\b"
	"_submitblock_"
	"\bsubmitheader"
	"\bsubmitheader_"
	"_submitheader\b"
	"\submitheader\b"
	"_submitheader_"
	"\bclearbanned"
	"\bclearbanned_"
	"_clearbanned\b"
	"\clearbanned\b"
	"_clearbanned_"
	"\bdisconnectnode"
	"\bdisconnectnode_"
	"_disconnectnode\b"
	"\disconnectnode\b"
	"_disconnectnode_"
	"\bgetaddednodeinfo"
	"\bgetaddednodeinfo_"
	"_getaddednodeinfo\b"
	"\getaddednodeinfo\b"
	"_getaddednodeinfo_"
	"\bgetconnectioncount"
	"\bgetconnectioncount_"
	"_getconnectioncount\b"
	"\getconnectioncount\b"
	"_getconnectioncount_"
	"\bgetnettotals"
	"\bgetnettotals_"
	"_getnettotals\b"
	"\getnettotals\b"
	"_getnettotals_"
	"\bgetnetworkinfo"
	"\bgetnetworkinfo_"
	"_getnetworkinfo\b"
	"\getnetworkinfo\b"
	"_getnetworkinfo_"
	"\bgetnodeaddresses"
	"\bgetnodeaddresses_"
	"_getnodeaddresses\b"
	"\getnodeaddresses\b"
	"_getnodeaddresses_"
	"\bgetpeerinfo"
	"\bgetpeerinfo_"
	"_getpeerinfo\b"
	"\getpeerinfo\b"
	"_getpeerinfo_"
	"\blistbanned"
	"\blistbanned_"
	"_listbanned\b"
	"\listbanned\b"
	"_listbanned_"
	"\bsetban"
	"\bsetban_"
	"_setban\b"
	"\setban\b"
	"_setban_"
	"\bsetnetworkactive"
	"\bsetnetworkactive_"
	"_setnetworkactive\b"
	"\setnetworkactive\b"
	"_setnetworkactive_"
	"\banalyzepsbt"
	"\banalyzepsbt_"
	"_analyzepsbt\b"
	"\analyzepsbt\b"
	"_analyzepsbt_"
	"\bcombinepsbt"
	"\bcombinepsbt_"
	"_combinepsbt\b"
	"\combinepsbt\b"
	"_combinepsbt_"
	"\bcombinerawtransaction"
	"\bcombinerawtransaction_"
	"_combinerawtransaction\b"
	"\combinerawtransaction\b"
	"_combinerawtransaction_"
	"\bconverttopsbt"
	"\bconverttopsbt_"
	"_converttopsbt\b"
	"\converttopsbt\b"
	"_converttopsbt_"
	"\bcreatepsbt"
	"\bcreatepsbt_"
	"_createpsbt\b"
	"\createpsbt\b"
	"_createpsbt_"
	"\bcreaterawtransaction"
	"\bcreaterawtransaction_"
	"_createrawtransaction\b"
	"\createrawtransaction\b"
	"_createrawtransaction_"
	"\bdecodepsbt"
	"\bdecodepsbt_"
	"_decodepsbt\b"
	"\decodepsbt\b"
	"_decodepsbt_"
	"\bdecoderawtransaction"
	"\bdecoderawtransaction_"
	"_decoderawtransaction\b"
	"\decoderawtransaction\b"
	"_decoderawtransaction_"
	"\bdecodescript"
	"\bdecodescript_"
	"_decodescript\b"
	"\decodescript\b"
	"_decodescript_"
	"\bfinalizepsbt"
	"\bfinalizepsbt_"
	"_finalizepsbt\b"
	"\finalizepsbt\b"
	"_finalizepsbt_"
	"\bfundrawtransaction"
	"\bfundrawtransaction_"
	"_fundrawtransaction\b"
	"\fundrawtransaction\b"
	"_fundrawtransaction_"
	"\bgetrawtransaction"
	"\bgetrawtransaction_"
	"_getrawtransaction\b"
	"\getrawtransaction\b"
	"_getrawtransaction_"
	"\bjoinpsbts"
	"\bjoinpsbts_"
	"_joinpsbts\b"
	"\joinpsbts\b"
	"_joinpsbts_"
	"\bsendrawtransaction"
	"\bsendrawtransaction_"
	"_sendrawtransaction\b"
	"\sendrawtransaction\b"
	"_sendrawtransaction_"
	"\bsignrawtransactionwithkey"
	"\bsignrawtransactionwithkey_"
	"_signrawtransactionwithkey\b"
	"\signrawtransactionwithkey\b"
	"_signrawtransactionwithkey_"
	"\btestmempoolaccept"
	"\btestmempoolaccept_"
	"_testmempoolaccept\b"
	"\testmempoolaccept\b"
	"_testmempoolaccept_"
	"\butxoupdatepsbt"
	"\butxoupdatepsbt_"
	"_utxoupdatepsbt\b"
	"\utxoupdatepsbt\b"
	"_utxoupdatepsbt_"
	"\bcreatemultisig"
	"\bcreatemultisig_"
	"_createmultisig\b"
	"\createmultisig\b"
	"_createmultisig_"
	"\bderiveaddresses"
	"\bderiveaddresses_"
	"_deriveaddresses\b"
	"\deriveaddresses\b"
	"_deriveaddresses_"
	"\bestimatesmartfee"
	"\bestimatesmartfee_"
	"_estimatesmartfee\b"
	"\estimatesmartfee\b"
	"_estimatesmartfee_"
	"\bgetdescriptorinfo"
	"\bgetdescriptorinfo_"
	"_getdescriptorinfo\b"
	"\getdescriptorinfo\b"
	"_getdescriptorinfo_"
	"\bgetindexinfo"
	"\bgetindexinfo_"
	"_getindexinfo\b"
	"\getindexinfo\b"
	"_getindexinfo_"
	"\bsignmessagewithprivkey"
	"\bsignmessagewithprivkey_"
	"_signmessagewithprivkey\b"
	"\signmessagewithprivkey\b"
	"_signmessagewithprivkey_"
	"\bvalidateaddress"
	"\bvalidateaddress_"
	"_validateaddress\b"
	"\validateaddress\b"
	"_validateaddress_"
	"\bverifymessage"
	"\bverifymessage_"
	"_verifymessage\b"
	"\verifymessage\b"
	"_verifymessage_"
	"\babandontransaction"
	"\babandontransaction_"
	"_abandontransaction\b"
	"\abandontransaction\b"
	"_abandontransaction_"
	"\babortrescan"
	"\babortrescan_"
	"_abortrescan\b"
	"\abortrescan\b"
	"_abortrescan_"
	"\baddmultisigaddress"
	"\baddmultisigaddress_"
	"_addmultisigaddress\b"
	"\addmultisigaddress\b"
	"_addmultisigaddress_"
	"\bbackupwallet"
	"\bbackupwallet_"
	"_backupwallet\b"
	"\backupwallet\b"
	"_backupwallet_"
	"\bbumpfee"
	"\bbumpfee_"
	"_bumpfee\b"
	"\bumpfee\b"
	"_bumpfee_"
	"\bcreatewallet"
	"\bcreatewallet_"
	"_createwallet\b"
	"\createwallet\b"
	"_createwallet_"
	"\bdumpprivkey"
	"\bdumpprivkey_"
	"_dumpprivkey\b"
	"\dumpprivkey\b"
	"_dumpprivkey_"
	"\bdumpwallet"
	"\bdumpwallet_"
	"_dumpwallet\b"
	"\dumpwallet\b"
	"_dumpwallet_"
	"\bencryptwallet"
	"\bencryptwallet_"
	"_encryptwallet\b"
	"\encryptwallet\b"
	"_encryptwallet_"
	"\bgetaddressesbylabel"
	"\bgetaddressesbylabel_"
	"_getaddressesbylabel\b"
	"\getaddressesbylabel\b"
	"_getaddressesbylabel_"
	"\bgetaddressinfo"
	"\bgetaddressinfo_"
	"_getaddressinfo\b"
	"\getaddressinfo\b"
	"_getaddressinfo_"
	"\bgetnewaddress"
	"\bgetnewaddress_"
	"_getnewaddress\b"
	"\getnewaddress\b"
	"_getnewaddress_"
	"\bgetrawchangeaddress"
	"\bgetrawchangeaddress_"
	"_getrawchangeaddress\b"
	"\getrawchangeaddress\b"
	"_getrawchangeaddress_"
	"\bgetreceivedbyaddress"
	"\bgetreceivedbyaddress_"
	"_getreceivedbyaddress\b"
	"\getreceivedbyaddress\b"
	"_getreceivedbyaddress_"
	"\bgetreceivedbylabel"
	"\bgetreceivedbylabel_"
	"_getreceivedbylabel\b"
	"\getreceivedbylabel\b"
	"_getreceivedbylabel_"
	"\bgettransaction"
	"\bgettransaction_"
	"_gettransaction\b"
	"\gettransaction\b"
	"_gettransaction_"
	"\bgetunconfirmedbalance"
	"\bgetunconfirmedbalance_"
	"_getunconfirmedbalance\b"
	"\getunconfirmedbalance\b"
	"_getunconfirmedbalance_"
	"\bgetwalletinfo"
	"\bgetwalletinfo_"
	"_getwalletinfo\b"
	"\getwalletinfo\b"
	"_getwalletinfo_"
	"\bimportaddress"
	"\bimportaddress_"
	"_importaddress\b"
	"\importaddress\b"
	"_importaddress_"
	"\bimportdescriptors"
	"\bimportdescriptors_"
	"_importdescriptors\b"
	"\importdescriptors\b"
	"_importdescriptors_"
	"\bimportmulti"
	"\bimportmulti_"
	"_importmulti\b"
	"\importmulti\b"
	"_importmulti_"
	"\bimportprivkey"
	"\bimportprivkey_"
	"_importprivkey\b"
	"\importprivkey\b"
	"_importprivkey_"
	"\bimportprunedfunds"
	"\bimportprunedfunds_"
	"_importprunedfunds\b"
	"\importprunedfunds\b"
	"_importprunedfunds_"
	"\bimportpubkey"
	"\bimportpubkey_"
	"_importpubkey\b"
	"\importpubkey\b"
	"_importpubkey_"
	"\bimportwallet"
	"\bimportwallet_"
	"_importwallet\b"
	"\importwallet\b"
	"_importwallet_"
	"\bkeypoolrefill"
	"\bkeypoolrefill_"
	"_keypoolrefill\b"
	"\keypoolrefill\b"
	"_keypoolrefill_"
	"\blistaddressgroupings"
	"\blistaddressgroupings_"
	"_listaddressgroupings\b"
	"\listaddressgroupings\b"
	"_listaddressgroupings_"
	"\blistlabels"
	"\blistlabels_"
	"_listlabels\b"
	"\listlabels\b"
	"_listlabels_"
	"\blistlockunspent"
	"\blistlockunspent_"
	"_listlockunspent\b"
	"\listlockunspent\b"
	"_listlockunspent_"
	"\blistreceivedbyaddress"
	"\blistreceivedbyaddress_"
	"_listreceivedbyaddress\b"
	"\listreceivedbyaddress\b"
	"_listreceivedbyaddress_"
	"\blistreceivedbylabel"
	"\blistreceivedbylabel_"
	"_listreceivedbylabel\b"
	"\listreceivedbylabel\b"
	"_listreceivedbylabel_"
	"\blistsinceblock"
	"\blistsinceblock_"
	"_listsinceblock\b"
	"\listsinceblock\b"
	"_listsinceblock_"
	"\blisttransactions"
	"\blisttransactions_"
	"_listtransactions\b"
	"\listtransactions\b"
	"_listtransactions_"
	"\blistunspent"
	"\blistunspent_"
	"_listunspent\b"
	"\listunspent\b"
	"_listunspent_"
	"\blistwalletdir"
	"\blistwalletdir_"
	"_listwalletdir\b"
	"\listwalletdir\b"
	"_listwalletdir_"
	"\blistwallets"
	"\blistwallets_"
	"_listwallets\b"
	"\listwallets\b"
	"_listwallets_"
	"\bloadwallet"
	"\bloadwallet_"
	"_loadwallet\b"
	"\loadwallet\b"
	"_loadwallet_"
	"\blockunspent"
	"\blockunspent_"
	"_lockunspent\b"
	"\lockunspent\b"
	"_lockunspent_"
	"\bpsbtbumpfee"
	"\bpsbtbumpfee_"
	"_psbtbumpfee\b"
	"\psbtbumpfee\b"
	"_psbtbumpfee_"
	"\bremoveprunedfunds"
	"\bremoveprunedfunds_"
	"_removeprunedfunds\b"
	"\removeprunedfunds\b"
	"_removeprunedfunds_"
	"\brescanblockchain"
	"\brescanblockchain_"
	"_rescanblockchain\b"
	"\rescanblockchain\b"
	"_rescanblockchain_"
	"\bsendtoaddress"
	"\bsendtoaddress_"
	"_sendtoaddress\b"
	"\sendtoaddress\b"
	"_sendtoaddress_"
	"\bsethdseed"
	"\bsethdseed_"
	"_sethdseed\b"
	"\sethdseed\b"
	"_sethdseed_"
	"\bsetlabel"
	"\bsetlabel_"
	"_setlabel\b"
	"\setlabel\b"
	"_setlabel_"
	"\bsettxfee"
	"\bsettxfee_"
	"_settxfee\b"
	"\settxfee\b"
	"_settxfee_"
	"\bsetwalletflag"
	"\bsetwalletflag_"
	"_setwalletflag\b"
	"\setwalletflag\b"
	"_setwalletflag_"
	"\bsignmessage"
	"\bsignmessage_"
	"_signmessage\b"
	"\signmessage\b"
	"_signmessage_"
	"\bsignrawtransactionwithwallet"
	"\bsignrawtransactionwithwallet_"
	"_signrawtransactionwithwallet\b"
	"\signrawtransactionwithwallet\b"
	"_signrawtransactionwithwallet_"
	"\bunloadwallet"
	"\bunloadwallet_"
	"_unloadwallet\b"
	"\unloadwallet\b"
	"_unloadwallet_"
	"\bupgradewallet"
	"\bupgradewallet_"
	"_upgradewallet\b"
	"\upgradewallet\b"
	"_upgradewallet_"
	"\bwalletcreatefundedpsbt"
	"\bwalletcreatefundedpsbt_"
	"_walletcreatefundedpsbt\b"
	"\walletcreatefundedpsbt\b"
	"_walletcreatefundedpsbt_"
	"\bwalletlock"
	"\bwalletlock_"
	"_walletlock\b"
	"\walletlock\b"
	"_walletlock_"
	"\bwalletpassphrase"
	"\bwalletpassphrase_"
	"_walletpassphrase\b"
	"\walletpassphrase\b"
	"_walletpassphrase_"
	"\bwalletpassphrasechange"
	"\bwalletpassphrasechange_"
	"_walletpassphrasechange\b"
	"\walletpassphrasechange\b"
	"_walletpassphrasechange_"
	"\bwalletprocesspsbt"
	"\bwalletprocesspsbt_"
	"_walletprocesspsbt\b"
	"\walletprocesspsbt\b"
	"_walletprocesspsbt_"

[{"evidence_type": "ethereum", "language": "all"}]
	"\beth_utills"
	"\beth_utills_"
	"_eth_utills\b"
	"\eth_utills\b"
	"_eth_utills_"
	"\bethereum-node"
	"\bethereum-node_"
	"_ethereum-node\b"
	"\ethereum-node\b"
	"_ethereum-node_"
	"\bgoerli"
	"\bgoerli_"
	"_goerli\b"
	"\goerli\b"
	"_goerli_"
	"\bgeth"
	"\bgeth_"
	"_geth\b"
	"\geth\b"
	"_geth_"
	"\bevm"
	"\bevm_"
	"_evm\b"
	"\evm\b"
	"_evm_"
	"\bpuppeth"
	"\bpuppeth_"
	"_puppeth\b"
	"\puppeth\b"
	"_puppeth_"
	"\beth_abi"
	"\beth_abi_"
	"_eth_abi\b"
	"\eth_abi\b"
	"_eth_abi_"
	"\bethservice"
	"\bethservice_"
	"_ethservice\b"
	"\ethservice\b"
	"_ethservice_"
	"\bethereum-dasm"
	"\bethereum-dasm_"
	"_ethereum-dasm\b"
	"\ethereum-dasm\b"
	"_ethereum-dasm_"
	"\beth_getBlockByHash"
	"\beth_getBlockByHash_"
	"_eth_getBlockByHash\b"
	"\eth_getBlockByHash\b"
	"_eth_getBlockByHash_"
	"\beth_getBlockByNumber"
	"\beth_getBlockByNumber_"
	"_eth_getBlockByNumber\b"
	"\eth_getBlockByNumber\b"
	"_eth_getBlockByNumber_"
	"\beth_getBlockTransactionCountByHash"
	"\beth_getBlockTransactionCountByHash_"
	"_eth_getBlockTransactionCountByHash\b"
	"\eth_getBlockTransactionCountByHash\b"
	"_eth_getBlockTransactionCountByHash_"
	"\beth_getBlockTransactionCountByNumber"
	"\beth_getBlockTransactionCountByNumber_"
	"_eth_getBlockTransactionCountByNumber\b"
	"\eth_getBlockTransactionCountByNumber\b"
	"_eth_getBlockTransactionCountByNumber_"
	"\beth_getUncleCountByBlockHash"
	"\beth_getUncleCountByBlockHash_"
	"_eth_getUncleCountByBlockHash\b"
	"\eth_getUncleCountByBlockHash\b"
	"_eth_getUncleCountByBlockHash_"
	"\beth_getUncleCountByBlockNumber"
	"\beth_getUncleCountByBlockNumber_"
	"_eth_getUncleCountByBlockNumber\b"
	"\eth_getUncleCountByBlockNumber\b"
	"_eth_getUncleCountByBlockNumber_"
	"\beth_protocolVersion"
	"\beth_protocolVersion_"
	"_eth_protocolVersion\b"
	"\eth_protocolVersion\b"
	"_eth_protocolVersion_"
	"\beth_chainId"
	"\beth_chainId_"
	"_eth_chainId\b"
	"\eth_chainId\b"
	"_eth_chainId_"
	"\beth_syncing"
	"\beth_syncing_"
	"_eth_syncing\b"
	"\eth_syncing\b"
	"_eth_syncing_"
	"\beth_coinbase"
	"\beth_coinbase_"
	"_eth_coinbase\b"
	"\eth_coinbase\b"
	"_eth_coinbase_"
	"\beth_accounts"
	"\beth_accounts_"
	"_eth_accounts\b"
	"\eth_accounts\b"
	"_eth_accounts_"
	"\beth_blockNumber"
	"\beth_blockNumber_"
	"_eth_blockNumber\b"
	"\eth_blockNumber\b"
	"_eth_blockNumber_"
	"\beth_call"
	"\beth_call_"
	"_eth_call\b"
	"\eth_call\b"
	"_eth_call_"
	"\beth_estimateGas"
	"\beth_estimateGas_"
	"_eth_estimateGas\b"
	"\eth_estimateGas\b"
	"_eth_estimateGas_"
	"\beth_gasPrice"
	"\beth_gasPrice_"
	"_eth_gasPrice\b"
	"\eth_gasPrice\b"
	"_eth_gasPrice_"
	"\beth_feeHistory"
	"\beth_feeHistory_"
	"_eth_feeHistory\b"
	"\eth_feeHistory\b"
	"_eth_feeHistory_"
	"\beth_newFilter"
	"\beth_newFilter_"
	"_eth_newFilter\b"
	"\eth_newFilter\b"
	"_eth_newFilter_"
	"\beth_newBlockFilter"
	"\beth_newBlockFilter_"
	"_eth_newBlockFilter\b"
	"\eth_newBlockFilter\b"
	"_eth_newBlockFilter_"

[{"evidence_type": "eos", "language": "all"}]
	"\beos-vm"    
	"\beos-vm_"
	"_eos-vm\b"
	"\eos-vm\b"
	"_eos-vm_"
	"\babieos"
	"\babieos_"
	"_abieos\b"
	"\abieos\b"
	"_abieos_"
	"\bAMQP-CPP"
	"\bAMQP-CPP_"
	"_AMQP-CPP\b"
	"\AMQP-CPP\b"
	"_AMQP-CPP_"
	"\brocksdb"
	"\brocksdb_"
	"_rocksdb\b"
	"\rocksdb\b"
	"_rocksdb_"
	"\beosjs-ecc"
	"\beosjs-ecc_"
	"_eosjs-ecc\b"
	"\eosjs-ecc\b"
	"_eosjs-ecc_"
	"\beosio-explorer"
	"\beosio-explorer_"
	"_eosio-explorer\b"
	"\eosio-explorer\b"
	"_eosio-explorer_"
	"\bdemux-js-eos"
	"\bdemux-js-eos_"
	"_demux-js-eos\b"
	"\demux-js-eos\b"
	"_demux-js-eos_"
	"\beosio-cpp"  
	"\beosio-cpp_" 
	"_eosio-cpp\b" 
	"\eosio-cpp\b" 
	"_eosio-cpp_"  
	"\beosio-cc"   
	"\beosio-cc_"  
	"_eosio-cc\b"  
	"\eosio-cc\b"  
	"_eosio-cc_"   
	"\beosio-ld"   
	"\beosio-ld_"  
	"_eosio-ld\b"  
	"\eosio-ld\b"  
	"_eosio-ld_"   
	"\beosio-init" 
	"\beosio-init_"
	"_eosio-init\b"
	"\eosio-init\b"
	"_eosio-init_" 
	"\beosio-abidiff"
	"\beosio-abidiff_"
	"_eosio-abidiff\b"
	"\eosio-abidiff\b"
	"_eosio-abidiff_"
	"\beosio-wasm2wast"
	"\beosio-wasm2wast_"
	"_eosio-wasm2wast\b"
	"\eosio-wasm2wast\b"
	"_eosio-wasm2wast_"
	"\beosio-wast2wasm"
	"\beosio-wast2wasm_"
	"_eosio-wast2wasm\b"
	"\eosio-wast2wasm\b"
	"_eosio-wast2wasm_"
	"\beosio-ranlib"
	"\beosio-ranlib_"
	"_eosio-ranlib\b"
	"\eosio-ranlib\b"
	"_eosio-ranlib_"
	"\beosio-ar"
	"\beosio-ar_"
	"_eosio-ar\b"
	"\eosio-ar\b"
	"_eosio-ar_"
	"\beosio-objdump"
	"\beosio-objdump_"
	"_eosio-objdump\b"
	"\eosio-objdump\b"
	"_eosio-objdump_"
	"\beosio-readelf"
	"\beosio-readelf_"
	"_eosio-readelf\b"
	"\eosio-readelf\b"
	"_eosio-readelf_"
	"\beosio-nm"
	"\beosio-nm_"
	"_eosio-nm\b"
	"\eosio-nm\b"
	"_eosio-nm_"
	"\beosio-objcopy"
	"\beosio-objcopy_"
	"_eosio-objcopy\b"
	"\eosio-objcopy\b"
	"_eosio-objcopy_"
	"\beosio-strip"
	"\beosio-strip_"
	"_eosio-strip\b"
	"\eosio-strip\b"
	"_eosio-strip_"
	"\beos-go"
	"\beos-go_"
	"_eos-go\b"
	"\eos-go\b"
	"_eos-go_"

[{"evidence_type": "corda", "language": "all"}]
	"\bnet.corda.client.jackson.internal"
	"\bnet.corda.client.jackson.internal_"
	"_net.corda.client.jackson.internal\b"
	"\net.corda.client.jackson.internal\b"
	"_net.corda.client.jackson.internal_"
	"\bnet.corda.core.CordaInternal"
	"\bnet.corda.core.CordaInternal_"
	"_net.corda.core.CordaInternal\b"
	"\net.corda.core.CordaInternal\b"
	"_net.corda.core.CordaInternal_"
	"\bnet.corda.core.CordaOID"
	"\bnet.corda.core.CordaOID_"
	"_net.corda.core.CordaOID\b"
	"\net.corda.core.CordaOID\b"
	"_net.corda.core.CordaOID_"
	"\bnet.corda.core.DoNotImplement"
	"\bnet.corda.core.DoNotImplement_"
	"_net.corda.core.DoNotImplement\b"
	"\net.corda.core.DoNotImplement\b"
	"_net.corda.core.DoNotImplement_"
	"\bnet.corda.core.contracts"
	"\bnet.corda.core.contracts_"
	"_net.corda.core.contracts\b"
	"\net.corda.core.contracts\b"
	"_net.corda.core.contracts_"
	"\bnet.corda.core.crypto"
	"\bnet.corda.core.crypto_"
	"_net.corda.core.crypto\b"
	"\net.corda.core.crypto\b"
	"_net.corda.core.crypto_"
	"\bnet.corda.core.identity"
	"\bnet.corda.core.identity_"
	"_net.corda.core.identity\b"
	"\net.corda.core.identity\b"
	"_net.corda.core.identity_"
	"\bnet.corda.core.internal"
	"\bnet.corda.core.internal_"
	"_net.corda.core.internal\b"
	"\net.corda.core.internal\b"
	"_net.corda.core.internal_"
	"\bnet.corda.core.messaging"
	"\bnet.corda.core.messaging_"
	"_net.corda.core.messaging\b"
	"\net.corda.core.messaging\b"
	"_net.corda.core.messaging_"
	"\bnet.corda.core.node"
	"\bnet.corda.core.node_"
	"_net.corda.core.node\b"
	"\net.corda.core.node\b"
	"_net.corda.core.node_"
	"\bnet.corda.core.node.services"
	"\bnet.corda.core.node.services_"
	"_net.corda.core.node.services\b"
	"\net.corda.core.node.services\b"
	"_net.corda.core.node.services_"
	"\bnet.corda.core.serialization"
	"\bnet.corda.core.serialization_"
	"_net.corda.core.serialization\b"
	"\net.corda.core.serialization\b"
	"_net.corda.core.serialization_"
	"\bnet.corda.core.transactions"
	"\bnet.corda.core.transactions_"
	"_net.corda.core.transactions\b"
	"\net.corda.core.transactions\b"
	"_net.corda.core.transactions_"
	"\bnet.corda.core.utilities"
	"\bnet.corda.core.utilities_"
	"_net.corda.core.utilities\b"
	"\net.corda.core.utilities\b"
	"_net.corda.core.utilities_"
	"\bnet.corda.core.internal.concurrent"
	"\bnet.corda.core.internal.concurrent_"
	"_net.corda.core.internal.concurrent\b"
	"\net.corda.core.internal.concurrent\b"
	"_net.corda.core.internal.concurrent_"
	"\bnet.corda.core.DeleteForDJVM"
	"\bnet.corda.core.DeleteForDJVM_"
	"_net.corda.core.DeleteForDJVM\b"
	"\net.corda.core.DeleteForDJVM\b"
	"_net.corda.core.DeleteForDJVM_"
	"\bnet.corda.core.KeepForDJVM"
	"\bnet.corda.core.KeepForDJVM_"
	"_net.corda.core.KeepForDJVM\b"
	"\net.corda.core.KeepForDJVM\b"
	"_net.corda.core.KeepForDJVM_"
	"\bnet.corda.core.serialization.CordaSerializable"
	"\bnet.corda.core.serialization.CordaSerializable_"
	"_net.corda.core.serialization.CordaSerializable\b"
	"\net.corda.core.serialization.CordaSerializable\b"
	"_net.corda.core.serialization.CordaSerializable_"
	"\bnet.corda.plugins.quasar-utils"
	"\bnet.corda.plugins.quasar-utils_"
	"_net.corda.plugins.quasar-utils\b"
	"\net.corda.plugins.quasar-utils\b"
	"_net.corda.plugins.quasar-utils_"
	"\bnet.corda.core.flows"
	"\bnet.corda.core.flows_"
	"_net.corda.core.flows\b"
	"\net.corda.core.flows\b"
	"_net.corda.core.flows_"
	"\bnet.corda.plugins"
	"\bnet.corda.plugins_"
	"_net.corda.plugins\b"
	"\net.corda.plugins\b"
	"_net.corda.plugins_"
	"\bnet.corda.core.schemas"
	"\bnet.corda.core.schemas_"
	"_net.corda.core.schemas\b"
	"\net.corda.core.schemas\b"
	"_net.corda.core.schemas_"
	"\bnet.corda.core.observable"
	"\bnet.corda.core.observable_"
	"_net.corda.core.observable\b"
	"\net.corda.core.observable\b"
	"_net.corda.core.observable_"
	"\bcom.r3.corda.lib"
	"\bcom.r3.corda.lib_"
	"_com.r3.corda.lib\b"
	"\com.r3.corda.lib\b"
	"_com.r3.corda.lib_"
	"\bcom.r3.corda.lib.tokens.workflows.internal.schemas"
	"\bcom.r3.corda.lib.tokens.workflows.internal.schemas_"
	"_com.r3.corda.lib.tokens.workflows.internal.schemas\b"
	"\com.r3.corda.lib.tokens.workflows.internal.schemas\b"
	"_com.r3.corda.lib.tokens.workflows.internal.schemas_"
	"\bcom.r3.corda.lib.tokens.workflows"
	"\bcom.r3.corda.lib.tokens.workflows_"
	"_com.r3.corda.lib.tokens.workflows\b"
	"\com.r3.corda.lib.tokens.workflows\b"
	"_com.r3.corda.lib.tokens.workflows_"
	"\bcom.r3.corda.lib.tokens.workflows.utilities"
	"\bcom.r3.corda.lib.tokens.workflows.utilities_"
	"_com.r3.corda.lib.tokens.workflows.utilities\b"
	"\com.r3.corda.lib.tokens.workflows.utilities\b"
	"_com.r3.corda.lib.tokens.workflows.utilities_"

[{"evidence_type": "iota", "language": "all"}]
	"\bcom.iota.iri"
	"\bcom.iota.iri_"
	"_com.iota.iri\b"
	"\com.iota.iri\b"
	"_com.iota.iri_"
	"\b@iota/client"
	"\b@iota/client_"
	"_@iota/client\b"
	"\@iota/client\b"
	"_@iota/client_"
	"\borg.iota"
	"\borg.iota_"
	"_org.iota\b"
	"\org.iota\b"
	"_org.iota_"
	"\borg.iota.client"
	"\borg.iota.client_"
	"_org.iota.client\b"
	"\org.iota.client\b"
	"_org.iota.client_"
	"\biota_client"
	"\biota_client_"
	"_iota_client\b"
	"\iota_client\b"
	"_iota_client_"
	"\bcom.iota.iri.controllers"
	"\bcom.iota.iri.controllers_"
	"_com.iota.iri.controllers\b"
	"\com.iota.iri.controllers\b"
	"_com.iota.iri.controllers_"
	"\bcom.iota.iri.controllers.TransactionViewModel"
	"\bcom.iota.iri.controllers.TransactionViewModel_"
	"_com.iota.iri.controllers.TransactionViewModel\b"
	"\com.iota.iri.controllers.TransactionViewModel\b"
	"_com.iota.iri.controllers.TransactionViewModel_"
	"\bcom.iota.iri.utils"
	"\bcom.iota.iri.utils_"
	"_com.iota.iri.utils\b"
	"\com.iota.iri.utils\b"
	"_com.iota.iri.utils_"
	"\bcom.iota.iri.utils.Converter"
	"\bcom.iota.iri.utils.Converter_"
	"_com.iota.iri.utils.Converter\b"
	"\com.iota.iri.utils.Converter\b"
	"_com.iota.iri.utils.Converter_"
	"\bcom.iota.iri.network"
	"\bcom.iota.iri.network_"
	"_com.iota.iri.network\b"
	"\com.iota.iri.network\b"
	"_com.iota.iri.network_"
	"\biota.rs"
	"\biota.rs_"
	"_iota.rs\b"
	"\iota.rs\b"
	"_iota.rs_"
	"\bhornet"
	"\bhornet_"
	"_hornet\b"
	"\hornet\b"
	"_hornet_"
	"\biotaledger/bee"
	"\biotaledger/bee_"
	"_iotaledger/bee\b"
	"\iotaledger/bee\b"
	"_iotaledger/bee_"
	"\biota_client::Client"
	"\biota_client::Client_"
	"_iota_client::Client\b"
	"\iota_client::Client\b"
	"_iota_client::Client_"

[{"evidence_type": "diem", "language": "all"}]
	"\bcom.diem"
	"\bcom.diem_"
	"_com.diem\b"
	"\com.diem\b"
	"_com.diem_"
	"\bcom.diem.jsonrpc.StaleResponseException"
	"\bcom.diem.jsonrpc.StaleResponseException_"
	"_com.diem.jsonrpc.StaleResponseException\b"
	"\com.diem.jsonrpc.StaleResponseException\b"
	"_com.diem.jsonrpc.StaleResponseException_"
	"\bcom.diem.jsonrpc.JsonRpc"
	"\bcom.diem.jsonrpc.JsonRpc_"
	"_com.diem.jsonrpc.JsonRpc\b"
	"\com.diem.jsonrpc.JsonRpc\b"
	"_com.diem.jsonrpc.JsonRpc_"
	"\bcom.diem.jsonrpc"
	"\bcom.diem.jsonrpc_"
	"_com.diem.jsonrpc\b"
	"\com.diem.jsonrpc\b"
	"_com.diem.jsonrpc_"
	"\bcom.diem.types.RawTransaction"
	"\bcom.diem.types.RawTransaction_"
	"_com.diem.types.RawTransaction\b"
	"\com.diem.types.RawTransaction\b"
	"_com.diem.types.RawTransaction_"
	"\bcom.diem.types"
	"\bcom.diem.types_"
	"_com.diem.types\b"
	"\com.diem.types\b"
	"_com.diem.types_"
	"\bcom.diem.stdlib"
	"\bcom.diem.stdlib_"
	"_com.diem.stdlib\b"
	"\com.diem.stdlib\b"
	"_com.diem.stdlib_"
	"\bcom.diem.types.SignedTransaction"
	"\bcom.diem.types.SignedTransaction_"
	"_com.diem.types.SignedTransaction\b"
	"\com.diem.types.SignedTransaction\b"
	"_com.diem.types.SignedTransaction_"
	"\bcom.diem.types.TransactionPayload"
	"\bcom.diem.types.TransactionPayload_"
	"_com.diem.types.TransactionPayload\b"
	"\com.diem.types.TransactionPayload\b"
	"_com.diem.types.TransactionPayload_"
	"\bcom.diem.AccountIdentifier"
	"\bcom.diem.AccountIdentifier_"
	"_com.diem.AccountIdentifier\b"
	"\com.diem.AccountIdentifier\b"
	"_com.diem.AccountIdentifier_"
	"\bcom.diem.IntentIdentifier"
	"\bcom.diem.IntentIdentifier_"
	"_com.diem.IntentIdentifier\b"
	"\com.diem.IntentIdentifier\b"
	"_com.diem.IntentIdentifier_"
	"\bcom.diem.LocalAccount"
	"\bcom.diem.LocalAccount_"
	"_com.diem.LocalAccount\b"
	"\com.diem.LocalAccount\b"
	"_com.diem.LocalAccount_"
	"\bcom.diem.Testnet"
	"\bcom.diem.Testnet_"
	"_com.diem.Testnet\b"
	"\com.diem.Testnet\b"
	"_com.diem.Testnet_"
	"\bcom.diem.utils"
	"\bcom.diem.utils_"
	"_com.diem.utils\b"
	"\com.diem.utils\b"
	"_com.diem.utils_"
	"\bdiem/client-sdk-go"
	"\bdiem/client-sdk-go_"
	"_diem/client-sdk-go\b"
	"\diem/client-sdk-go\b"
	"_diem/client-sdk-go_"
	"\bdiem/client-sdk-go/diemkeys"
	"\bdiem/client-sdk-go/diemkeys_"
	"_diem/client-sdk-go/diemkeys\b"
	"\diem/client-sdk-go/diemkeys\b"
	"_diem/client-sdk-go/diemkeys_"
	"\bdiem/client-sdk-go/stdlib"
	"\bdiem/client-sdk-go/stdlib_"
	"_diem/client-sdk-go/stdlib\b"
	"\diem/client-sdk-go/stdlib\b"
	"_diem/client-sdk-go/stdlib_"
	"\bdiem/client-sdk-go/testnet"
	"\bdiem/client-sdk-go/testnet_"
	"_diem/client-sdk-go/testnet\b"
	"\diem/client-sdk-go/testnet\b"
	"_diem/client-sdk-go/testnet_"
	"\bdiem/client-sdk-go/diemtypes"
	"\bdiem/client-sdk-go/diemtypes_"
	"_diem/client-sdk-go/diemtypes\b"
	"\diem/client-sdk-go/diemtypes\b"
	"_diem/client-sdk-go/diemtypes_"
	"\bdiem import identifier"
	"\bdiem import identifier_"
	"_diem import identifier\b"
	"\diem import identifier\b"
	"_diem import identifier_"
	"\bdiem import utils"
	"\bdiem import utils_"
	"_diem import utils\b"
	"\diem import utils\b"
	"_diem import utils_"
	"\bdiem.testing"
	"\bdiem.testing_"
	"_diem.testing\b"
	"\diem.testing\b"
	"_diem.testing_"

[{"evidence_type": "xrp", "language": "all"}]
	"\bxrpl.client"
	"\bxrpl.client_"
	"_xrpl.client\b"
	"\xrpl.client\b"
	"_xrpl.client_"
	"\bxrpl.core"
	"\bxrpl.core_"
	"_xrpl.core\b"
	"\xrpl.core\b"
	"_xrpl.core_"
	"\bripple"
	"\bripple_"
	"_ripple\b"
	"\ripple\b"
	"_ripple_"
	"\brippled"
	"\brippled_"
	"_rippled\b"
	"\rippled\b"
	"_rippled_"
	"\bxrlp.transaction"
	"\bxrlp.transaction_"
	"_xrlp.transaction\b"
	"\xrlp.transaction\b"
	"_xrlp.transaction_"
	"\bxrlp.ledger"
	"\bxrlp.ledger_"
	"_xrlp.ledger\b"
	"\xrlp.ledger\b"
	"_xrlp.ledger_"
	"\bxrlp.account"
	"\bxrlp.account_"
	"_xrlp.account\b"
	"\xrlp.account\b"
	"_xrlp.account_"
	"\bxrbp"
	"\bxrbp_"
	"_xrbp\b"
	"\xrbp\b"
	"_xrbp_"
	"\bXRBP::NodeStore"
	"\bXRBP::NodeStore_"
	"_XRBP::NodeStore\b"
	"\XRBP::NodeStore\b"
	"_XRBP::NodeStore_"
	"\bXRBP::WebSocket"
	"\bXRBP::WebSocket_"
	"_XRBP::WebSocket\b"
	"\XRBP::WebSocket\b"
	"_XRBP::WebSocket_"
	"\bXRBP::Model"
	"\bXRBP::Model_"
	"_XRBP::Model\b"
	"\XRBP::Model\b"
	"_XRBP::Model_"
	"\bripple/protocol"
	"\bripple/protocol_"
	"_ripple/protocol\b"
	"\ripple/protocol\b"
	"_ripple/protocol_"
	"\bripple/rpc"
	"\bripple/rpc_"
	"_ripple/rpc\b"
	"\ripple/rpc\b"
	"_ripple/rpc_"
	"\bripple/core"
	"\bripple/core_"
	"_ripple/core\b"
	"\ripple/core\b"
	"_ripple/core_"
	"\bripple/basics"
	"\bripple/basics_"
	"_ripple/basics\b"
	"\ripple/basics\b"
	"_ripple/basics_"


[{"evidence_type": "generic", "language": "all"}]
	"base64Cipher"
	"\bgenerateWorkingKey"
	"\bBlockCipher"
	"Block Cipher"
	"\bStreamCipher"
	"Stream Cipher"
	"\bkey_schedule"
	"MERSENNE"
	"unit256"
	"_unit256\b"
	"\unit256\b"
	"_unit256_"
	"\brpc"
	"\brpc_"
	"_rpc\b"
	"\brpc/blockchain.h\b"
	"\brpc/rawtransaction_util.h\b"
	"\bcrc32"
	"\bcrc32_"
	"_crc32\b"
	"\crc32\b"
	"_crc32_"
	"\bunit64"
	"_unit64\b"
	"\unit64\b"
	"_unit64_"
	"\bunit32"
	"_unit32\b"
	"\unit32\b"
	"_unit32_"
	"\bpbkdf2"
	"\bpbkdf2_"
	"_pbkdf2\b"
	"\pbkdf2\b"
	"_pbkdf2_"
	"\bscep256K1"
	"\bscep256K1_"
	"_scep256K1\b"
	"\scep256K1\b"
	"_scep256K1_"
	"\bsiphash"
	"\bsiphash_"
	"_siphash\b"
	"\siphash\b"
	"_siphash_"
	"\bscrypt"
	"\bscrypt_"
	"_scrypt\b"
	"\scrypt\b"
	"_scrypt_"
	"\bbn256"
	"\bbn256_"
	"_bn256\b"
	"\bn256\b"