# Copyright (c) 2017 Wind River Systems, Inc.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at:

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software  distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
# OR CONDITIONS OF ANY KIND, either express or implied.

#
#  Crypto API definitions
#
#  These terms will match exactly, case-sensitive, and whole-word
#
#
#
#
# "language" can be one of:
# 	"all" (any text file),
# 	"source" (any source code file),
# 	"c" (C or C++),
# 	"python",
# 	"java",
# 	"shell",
# 	"perl",
# 	"javascript",
# 	"scala",
# 	"haskell",
# 	"pascal"
#
# You can add any additional information to the match specification,
# such and it will be reported in the crypto output
#
# For example,
#   [{"evidence_type": "mytype", ... , "mycustomfield": "myvalue"}]
#
#

[keyword_list_version]
	7

####################################################################################################
### OpenSSL
###
###     https://www.openssl.org/docs/man1.1.0/crypto/
###     https://www.openssl.org/docs/manmaster/man3/
####################################################################################################

[{"encryption_library":"OpenSSL", "evidence_type":"library/OpenSSL", "encryption_api_usage":"call", "language":"all"}]
	"ACCESS_DESCRIPTION_free"
	"ACCESS_DESCRIPTION_new"
	"ASIdOrRange_free"
	"ASIdOrRange_new"
	"ASIdentifierChoice_free"
	"ASIdentifierChoice_new"
	"ASIdentifiers_free"
	"ASIdentifiers_new"
	"ASRange_free"
	"ASRange_new"
	"ASYNC_WAIT_CTX_clear_fd"
	"ASYNC_WAIT_CTX_free"
	"ASYNC_WAIT_CTX_get_all_fds"
	"ASYNC_WAIT_CTX_get_changed_fds"
	"ASYNC_WAIT_CTX_get_fd"
	"ASYNC_WAIT_CTX_new"
	"ASYNC_WAIT_CTX_set_wait_fd"
	"ASYNC_block_pause"
	"ASYNC_cleanup_thread"
	"ASYNC_get_current_job"
	"ASYNC_get_wait_ctx"
	"ASYNC_init_thread"
	"ASYNC_is_capable"
	"ASYNC_pause_job"
	"ASYNC_start_job"
	"ASYNC_unblock_pause"
	"AUTHORITY_INFO_ACCESS_free"
	"AUTHORITY_INFO_ACCESS_new"
	"AUTHORITY_KEYID_free"
	"AUTHORITY_KEYID_new"
	"BIO_ADDRINFO"
	"BIO_ADDRINFO_address"
	"BIO_ADDRINFO_family"
	"BIO_ADDRINFO_free"
	"BIO_ADDRINFO_next"
	"BIO_ADDRINFO_protocol"
	"BIO_ADDRINFO_socktype"
	"BIO_ADDR_clear"
	"BIO_ADDR_family"
	"BIO_ADDR_free"
	"BIO_ADDR_hostname_string"
	"BIO_ADDR_new"
	"BIO_ADDR_path_string"
	"BIO_ADDR_rawaddress"
	"BIO_ADDR_rawmake"
	"BIO_ADDR_rawport"
	"BIO_ADDR_service_string"
	"BIO_accept_ex"
	"BIO_append_filename"
	"BIO_callback_ctrl"
	"BIO_closesocket"
	"BIO_connect"
	"BIO_ctrl"
	"BIO_ctrl_get_read_request"
	"BIO_ctrl_get_write_guarantee"
	"BIO_ctrl_pending"
	"BIO_ctrl_reset_read_request"
	"BIO_ctrl_wpending"
	"BIO_debug_callback"
	"BIO_destroy_bio_pair"
	"BIO_do_accept"
	"BIO_do_connect"
	"BIO_do_handshake"
	"BIO_eof"
	"BIO_f_base64"
	"BIO_f_buffer"
	"BIO_f_cipher"
	"BIO_f_md"
	"BIO_f_null"
	"BIO_f_ssl"
	"BIO_find_type"
	"BIO_flush"
	"BIO_free"
	"BIO_free_all"
	"BIO_get_accept_name"
	"BIO_get_accept_port"
	"BIO_get_bind_mode"
	"BIO_get_buffer_num_lines"
	"BIO_get_callback"
	"BIO_get_callback_arg"
	"BIO_get_cipher_ctx"
	"BIO_get_cipher_status"
	"BIO_get_close"
	"BIO_get_conn_address"
	"BIO_get_conn_hostname"
	"BIO_get_conn_port"
	"BIO_get_data"
	"BIO_get_ex_data"
	"BIO_get_ex_new_index"
	"BIO_get_fd"
	"BIO_get_fp"
	"BIO_get_info_callback"
	"BIO_get_init"
	"BIO_get_md"
	"BIO_get_md_ctx"
	"BIO_get_mem_data"
	"BIO_get_mem_ptr"
	"BIO_get_new_index"
	"BIO_get_num_renegotiates"
	"BIO_get_read_request"
	"BIO_get_retry_BIO"
	"BIO_get_retry_reason"
	"BIO_get_shutdown"
	"BIO_get_ssl"
	"BIO_get_write_buf_size"
	"BIO_get_write_guarantee"
	"BIO_gets"
	"BIO_int_ctrl"
	"BIO_listen"
	"BIO_lookup"
	"BIO_make_bio_pair"
	"BIO_meth_free"
	"BIO_meth_get_callback_ctrl"
	"BIO_meth_get_create"
	"BIO_meth_get_ctrl"
	"BIO_meth_get_destroy"
	"BIO_meth_get_gets"
	"BIO_meth_get_puts"
	"BIO_meth_get_read"
	"BIO_meth_get_write"
	"BIO_meth_new"
	"BIO_meth_set_callback_ctrl"
	"BIO_meth_set_create"
	"BIO_meth_set_ctrl"
	"BIO_meth_set_destroy"
	"BIO_meth_set_gets"
	"BIO_meth_set_puts"
	"BIO_meth_set_read"
	"BIO_meth_set_write"
	"BIO_method_type"
	"BIO_new"
	"BIO_new_CMS"
	"BIO_new_accept"
	"BIO_new_bio_pair"
	"BIO_new_buffer_ssl_connect"
	"BIO_new_connect"
	"BIO_new_fd"
	"BIO_new_file"
	"BIO_new_fp"
	"BIO_new_mem_buf"
	"BIO_new_socket"
	"BIO_new_ssl"
	"BIO_new_ssl_connect"
	"BIO_next"
	"BIO_parse_hostserv"
	"BIO_pending"
	"BIO_pop"
	"BIO_ptr_ctrl"
	"BIO_push"
	"BIO_puts"
	"BIO_read"
	"BIO_read_filename"
	"BIO_reset"
	"BIO_retry_type"
	"BIO_rw_filename"
	"BIO_s_accept"
	"BIO_s_bio"
	"BIO_s_connect"
	"BIO_s_fd"
	"BIO_s_file"
	"BIO_s_mem"
	"BIO_s_null"
	"BIO_s_secmem"
	"BIO_s_socket"
	"BIO_seek"
	"BIO_set"
	"BIO_set_accept_bios"
	"BIO_set_accept_name"
	"BIO_set_accept_port"
	"BIO_set_bind_mode"
	"BIO_set_buffer_read_data"
	"BIO_set_buffer_size"
	"BIO_set_callback"
	"BIO_set_callback_arg"
	"BIO_set_cipher"
	"BIO_set_close"
	"BIO_set_conn_address"
	"BIO_set_conn_hostname"
	"BIO_set_conn_port"
	"BIO_set_data"
	"BIO_set_ex_data"
	"BIO_set_fd"
	"BIO_set_fp"
	"BIO_set_info_callback"
	"BIO_set_init"
	"BIO_set_md"
	"BIO_set_mem_buf"
	"BIO_set_mem_eof_return"
	"BIO_set_nbio"
	"BIO_set_nbio_accept"
	"BIO_set_next"
	"BIO_set_read_buffer_size"
	"BIO_set_retry_reason"
	"BIO_set_shutdown"
	"BIO_set_ssl"
	"BIO_set_ssl_mode"
	"BIO_set_ssl_renegotiate_bytes"
	"BIO_set_ssl_renegotiate_timeout"
	"BIO_set_write_buf_size"
	"BIO_set_write_buffer_size"
	"BIO_should_io_special"
	"BIO_should_read"
	"BIO_should_retry"
	"BIO_should_write"
	"BIO_shutdown_wr"
	"BIO_socket"
	"BIO_ssl_copy_session_id"
	"BIO_ssl_shutdown"
	"BIO_tell"
	"BIO_up_ref"
	"BIO_vfree"
	"BIO_wpending"
	"BIO_write"
	"BIO_write_filename"
	"BN_BLINDING_convert"
	"BN_BLINDING_convert_ex"
	"BN_BLINDING_create_param"
	"BN_BLINDING_free"
	"BN_BLINDING_get_flags"
	"BN_BLINDING_invert"
	"BN_BLINDING_invert_ex"
	"BN_BLINDING_is_current_thread"
	"BN_BLINDING_lock"
	"BN_BLINDING_new"
	"BN_BLINDING_set_current_thread"
	"BN_BLINDING_set_flags"
	"BN_BLINDING_unlock"
	"BN_BLINDING_update"
	"BN_CTX_end"
	"BN_CTX_free"
	"BN_CTX_get"
	"BN_CTX_new"
	"BN_CTX_secure_new"
	"BN_CTX_start"
	"BN_GENCB_call"
	"BN_GENCB_free"
	"BN_GENCB_get_arg"
	"BN_GENCB_new"
	"BN_GENCB_set"
	"BN_GENCB_set_old"
	"BN_MONT_CTX_copy"
	"BN_MONT_CTX_free"
	"BN_MONT_CTX_new"
	"BN_MONT_CTX_set"
	"BN_RECP_CTX_free"
	"BN_RECP_CTX_new"
	"BN_RECP_CTX_set"
	"BN_add"
	"BN_add_word"
	"BN_bin2bn"
	"BN_bn2bin"
	"BN_bn2binpad"
	"BN_bn2dec"
	"BN_bn2hex"
	"BN_bn2lebinpad"
	"BN_bn2mpi"
	"BN_clear"
	"BN_clear_bit"
	"BN_clear_free"
	"BN_cmp"
	"BN_copy"
	"BN_dec2bn"
	"BN_div"
	"BN_div_recp"
	"BN_div_word"
	"BN_dup"
	"BN_exp"
	"BN_free"
	"BN_from_montgomery"
	"BN_gcd"
	"BN_generate_prime"
	"BN_generate_prime_ex"
	"BN_get0_nist_prime_192"
	"BN_get0_nist_prime_224"
	"BN_get0_nist_prime_256"
	"BN_get0_nist_prime_384"
	"BN_get0_nist_prime_521"
	"BN_get_rfc2409_prime_1024"
	"BN_get_rfc2409_prime_768"
	"BN_get_rfc3526_prime_1536"
	"BN_get_rfc3526_prime_2048"
	"BN_get_rfc3526_prime_3072"
	"BN_get_rfc3526_prime_4096"
	"BN_get_rfc3526_prime_6144"
	"BN_get_rfc3526_prime_8192"
	"BN_get_word"
	"BN_hex2bn"
	"BN_is_bit_set"
	"BN_is_odd"
	"BN_is_one"
	"BN_is_prime"
	"BN_is_prime_ex"
	"BN_is_prime_fasttest"
	"BN_is_prime_fasttest_ex"
	"BN_is_word"
	"BN_is_zero"
	"BN_lebin2bn"
	"BN_lshift"
	"BN_lshift1"
	"BN_mask_bits"
	"BN_mod"
	"BN_mod_add"
	"BN_mod_exp"
	"BN_mod_inverse"
	"BN_mod_mul"
	"BN_mod_mul_montgomery"
	"BN_mod_mul_reciprocal"
	"BN_mod_sqr"
	"BN_mod_sub"
	"BN_mod_word"
	"BN_mpi2bn"
	"BN_mul"
	"BN_mul_word"
	"BN_new"
	"BN_nnmod"
	"BN_num_bits"
	"BN_num_bits_word"
	"BN_num_bytes"
	"BN_one"
	"BN_print"
	"BN_print_fp"
	"BN_pseudo_rand"
	"BN_pseudo_rand_range"
	"BN_rand"
	"BN_rand_range"
	"BN_rshift"
	"BN_rshift1"
	"BN_secure_new"
	"BN_set_bit"
	"BN_set_word"
	"BN_sqr"
	"BN_sub"
	"BN_sub_word"
	"BN_swap"
	"BN_to_ASN1_ENUMERATED"
	"BN_to_ASN1_INTEGER"
	"BN_to_montgomery"
	"BN_ucmp"
	"BN_value_one"
	"BN_with_flags"
	"BN_zero"
	"BUF_MEM_free"
	"BUF_MEM_grow_BUF_MEM_grow_clean"
	"BUF_MEM_new"
	"BUF_MEM_new_ex"
	"BUF_reverse"
	"CERTIFICATEPOLICIES_free"
	"CERTIFICATEPOLICIES_new"
	"CMS_ContentInfo_free"
	"CMS_ContentInfo_new"
	"CMS_ContentInfo_print_ctx"
	"CMS_ReceiptRequest_create0"
	"CMS_ReceiptRequest_free"
	"CMS_ReceiptRequest_get0_values"
	"CMS_ReceiptRequest_new"
	"CMS_RecipientInfo_decrypt"
	"CMS_RecipientInfo_encrypt"
	"CMS_RecipientInfo_kekri_get0_id"
	"CMS_RecipientInfo_kekri_id_cmp"
	"CMS_RecipientInfo_ktri_cert_cmp"
	"CMS_RecipientInfo_ktri_get0_signer_id"
	"CMS_RecipientInfo_set0_key"
	"CMS_RecipientInfo_set0_pkey"
	"CMS_RecipientInfo_type"
	"CMS_SignerInfo_cert_cmp"
	"CMS_SignerInfo_get0_signature"
	"CMS_SignerInfo_get0_signer_id"
	"CMS_SignerInfo_set1_signer_cert"
	"CMS_SignerInfo_sign"
	"CMS_add0_cert"
	"CMS_add0_crl"
	"CMS_add0_recipient_key"
	"CMS_add1_ReceiptRequest"
	"CMS_add1_cert"
	"CMS_add1_crl"
	"CMS_add1_recipient_cert"
	"CMS_add1_signer"
	"CMS_compress"
	"CMS_decrypt"
	"CMS_encrypt"
	"CMS_final"
	"CMS_get0_RecipientInfos"
	"CMS_get0_SignerInfos"
	"CMS_get0_content"
	"CMS_get0_eContentType"
	"CMS_get0_signers"
	"CMS_get0_type"
	"CMS_get1_ReceiptRequest"
	"CMS_get1_certs"
	"CMS_get1_crls"
	"CMS_set1_eContentType"
	"CMS_sign"
	"CMS_sign_receipt"
	"CMS_uncompress"
	"CMS_verify"
	"CMS_verify_receipt"
	"CONF_modules_finish"
	"CONF_modules_free"
	"CONF_modules_load"
	"CONF_modules_load_file"
	"CONF_modules_unload"
	"CRL_DIST_POINTS_free"
	"CRL_DIST_POINTS_new"
	"CRYPTO_EX_dup"
	"CRYPTO_EX_free"
	"CRYPTO_EX_new"
	"CRYPTO_THREAD_lock_free"
	"CRYPTO_THREAD_lock_new"
	"CRYPTO_THREAD_read_lock"
	"CRYPTO_THREAD_run_once"
	"CRYPTO_THREAD_unlock"
	"CRYPTO_THREAD_write_lock"
	"CRYPTO_atomic_add"
	"CRYPTO_clear_free"
	"CRYPTO_clear_realloc"
	"CRYPTO_free"
	"CRYPTO_free_ex_data"
	"CRYPTO_free_ex_index"
	"CRYPTO_get_ex_data"
	"CRYPTO_get_ex_new_index"
	"CRYPTO_get_mem_functions"
	"CRYPTO_malloc"
	"CRYPTO_mem_ctrl"
	"CRYPTO_mem_debug_pop"
	"CRYPTO_mem_debug_push"
	"CRYPTO_mem_leaks"
	"CRYPTO_mem_leaks_fp"
	"CRYPTO_new_ex_data"
	"CRYPTO_realloc"
	"CRYPTO_secure_free"
	"CRYPTO_secure_malloc"
	"CRYPTO_secure_malloc_done"
	"CRYPTO_secure_malloc_init"
	"CRYPTO_secure_malloc_initialized"
	"CRYPTO_secure_zalloc"
	"CRYPTO_set_ex_data"
	"CRYPTO_set_mem_debug"
	"CRYPTO_set_mem_functions"
	"CRYPTO_strdup"
	"CRYPTO_strndup"
	"CRYPTO_zalloc"
	"CTLOG_STORE_free"
	"CTLOG_STORE_get0_log_by_id"
	"CTLOG_STORE_load_default_file"
	"CTLOG_STORE_load_file"
	"CTLOG_STORE_new"
	"CTLOG_free"
	"CTLOG_get0_log_id"
	"CTLOG_get0_name"
	"CTLOG_get0_public_key"
	"CTLOG_new"
	"CTLOG_new_from_base64"
	"CT_POLICY_EVAL_CTX_free"
	"CT_POLICY_EVAL_CTX_get0_cert"
	"CT_POLICY_EVAL_CTX_get0_issuer"
	"CT_POLICY_EVAL_CTX_get0_log_store"
	"CT_POLICY_EVAL_CTX_new"
	"CT_POLICY_EVAL_CTX_set1_cert"
	"CT_POLICY_EVAL_CTX_set1_issuer"
	"CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE"
	"CYRPTO_secure_used"
	"DECLARE_ASN1_FUNCTIONS"
	"DECLARE_LHASH_OF"
	"DECLARE_PEM_rw"
	"DEFINE_SPECIAL_STACK_OF"
	"DEFINE_SPECIAL_STACK_OF_CONST"
	"DEFINE_STACK_OF"
	"DEFINE_STACK_OF_CONST"
	"DIRECTORYSTRING_free"
	"DIRECTORYSTRING_new"
	"DISPLAYTEXT_free"
	"DISPLAYTEXT_new"
	"DIST_POINT_NAME_free"
	"DIST_POINT_NAME_new"
	"DIST_POINT_free"
	"DIST_POINT_new"
	"EDIPARTYNAME_free"
	"EDIPARTYNAME_new"
	"ENGINE_add"
	"ENGINE_add_conf_module"
	"ENGINE_by_id"
	"ENGINE_cleanup"
	"ENGINE_cmd_is_executable"
	"ENGINE_ctrl"
	"ENGINE_ctrl_cmd"
	"ENGINE_ctrl_cmd_string"
	"ENGINE_finish"
	"ENGINE_free"
	"ENGINE_get_RAND"
	"ENGINE_register_RAND"
	"ENGINE_register_all_RAND"
	"ENGINE_set_RAND"
	"ENGINE_set_default_RAND"
	"ENGINE_unregister_RAND"
	"ENGINE_get_cipher"
	"ENGINE_get_cipher_engine"
	"ENGINE_get_ciphers"
	"ENGINE_get_cmd_defns"
	"ENGINE_get_ctrl_function"
	"ENGINE_get_default_RAND"
	"ENGINE_get_destroy_function"
	"ENGINE_get_digest"
	"ENGINE_get_digest_engine"
	"ENGINE_get_digests"
	"ENGINE_get_ex_data"
	"ENGINE_get_ex_new_index"
	"ENGINE_get_finish_function"
	"ENGINE_get_first"
	"ENGINE_get_flags"
	"ENGINE_get_id"
	"ENGINE_get_init_function"
	"ENGINE_get_last"
	"ENGINE_get_load_privkey_function"
	"ENGINE_get_load_pubkey_function"
	"ENGINE_get_name"
	"ENGINE_get_next"
	"ENGINE_get_prev"
	"ENGINE_get_table_flags"
	"ENGINE_load_builtin_engines"
	"ENGINE_load_private_key"
	"ENGINE_load_public_key"
	"ENGINE_register_all_ciphers"
	"ENGINE_register_all_complete"
	"ENGINE_register_all_digests"
	"ENGINE_register_ciphers"
	"ENGINE_register_complete"
	"ENGINE_register_digests"
	"ENGINE_set_ciphers"
	"ENGINE_set_cmd_defns"
	"ENGINE_set_ctrl_function"
	"ENGINE_set_default"
	"ENGINE_set_default_ciphers"
	"ENGINE_set_default_digests"
	"ENGINE_set_default_string"
	"ENGINE_set_destroy_function"
	"ENGINE_set_digests"
	"ENGINE_set_ex_data"
	"ENGINE_set_finish_function"
	"ENGINE_set_flags"
	"ENGINE_set_id"
	"ENGINE_set_init_function"
	"ENGINE_set_load_privkey_function"
	"ENGINE_set_load_pubkey_function"
	"ENGINE_set_name"
	"ENGINE_set_table_flags"
	"ENGINE_unregister_ciphers"
	"ENGINE_unregister_digests"
	"ENGINE_up_ref"
	"ERR_GET_FUNC"
	"ERR_GET_LIB"
	"ERR_GET_REASON"
	"ERR_PACK"
	"ERR_add_error_data"
	"ERR_clear_error"
	"ERR_error_string"
	"ERR_error_string_n"
	"ERR_free_strings"
	"ERR_func_error_string"
	"ERR_get_error"
	"ERR_get_error_line"
	"ERR_get_error_line_data"
	"ERR_get_next_error_library"
	"ERR_lib_error_string"
	"ERR_load_crypto_strings"
	"ERR_load_strings"
	"ERR_peek_error"
	"ERR_peek_error_line"
	"ERR_peek_error_line_data"
	"ERR_peek_last_error"
	"ERR_peek_last_error_line"
	"ERR_peek_last_error_line_data"
	"ERR_pop_to_mark"
	"ERR_print_errors"
	"ERR_print_errors_cb"
	"ERR_print_errors_fp"
	"ERR_put_error"
	"ERR_reason_error_string"
	"ERR_remove_state"
	"ERR_remove_thread_state"
	"ERR_set_mark"
	"ESS_CERT_ID_dup"
	"ESS_CERT_ID_free"
	"ESS_CERT_ID_new"
	"ESS_ISSUER_SERIAL_dup"
	"ESS_ISSUER_SERIAL_free"
	"ESS_ISSUER_SERIAL_new"
	"ESS_SIGNING_CERT_dup"
	"ESS_SIGNING_CERT_free"
	"ESS_SIGNING_CERT_new"
	"EVP_BytesToKey"
	"EVP_CIPHER_CTX_block_size"
	"EVP_CIPHER_CTX_cipher"
	"EVP_CIPHER_CTX_ctrl"
	"EVP_CIPHER_CTX_flags"
	"EVP_CIPHER_CTX_free"
	"EVP_CIPHER_CTX_get_app_data"
	"EVP_CIPHER_CTX_get_cipher_data"
	"EVP_CIPHER_CTX_iv_length"
	"EVP_CIPHER_CTX_key_length"
	"EVP_CIPHER_CTX_mode"
	"EVP_CIPHER_CTX_new"
	"EVP_CIPHER_CTX_nid"
	"EVP_CIPHER_CTX_reset"
	"EVP_CIPHER_CTX_set_app_data"
	"EVP_CIPHER_CTX_set_cipher_data"
	"EVP_CIPHER_CTX_set_key_length"
	"EVP_CIPHER_CTX_set_padding"
	"EVP_CIPHER_CTX_type"
	"EVP_CIPHER_asn1_to_param"
	"EVP_CIPHER_block_size"
	"EVP_CIPHER_flags"
	"EVP_CIPHER_iv_length"
	"EVP_CIPHER_key_length"
	"EVP_CIPHER_meth_dup"
	"EVP_CIPHER_meth_free"
	"EVP_CIPHER_meth_get_cleanup"
	"EVP_CIPHER_meth_get_ctrl"
	"EVP_CIPHER_meth_get_do_cipher"
	"EVP_CIPHER_meth_get_get_asn1_params"
	"EVP_CIPHER_meth_get_init"
	"EVP_CIPHER_meth_get_set_asn1_params"
	"EVP_CIPHER_meth_new"
	"EVP_CIPHER_meth_set_cleanup"
	"EVP_CIPHER_meth_set_ctrl"
	"EVP_CIPHER_meth_set_do_cipher"
	"EVP_CIPHER_meth_set_flags"
	"EVP_CIPHER_meth_set_get_asn1_params"
	"EVP_CIPHER_meth_set_impl_ctx_size"
	"EVP_CIPHER_meth_set_init"
	"EVP_CIPHER_meth_set_iv_length"
	"EVP_CIPHER_meth_set_set_asn1_params"
	"EVP_CIPHER_mode"
	"EVP_CIPHER_nid"
	"EVP_CIPHER_param_to_asn1"
	"EVP_CIPHER_type"
	"EVP_CipherFinal"
	"EVP_CipherFinal_ex"
	"EVP_CipherInit"
	"EVP_CipherInit_ex"
	"EVP_CipherUpdate"
	"EVP_DecodeBlock"
	"EVP_DecodeFinal"
	"EVP_DecodeInit"
	"EVP_DecodeUpdate"
	"EVP_DecryptFinal"
	"EVP_DecryptFinal_ex"
	"EVP_DecryptInit"
	"EVP_DecryptInit_ex"
	"EVP_DecryptUpdate"
	"EVP_DigestFinal"
	"EVP_DigestFinal_ex"
	"EVP_DigestInit"
	"EVP_DigestInit_ex"
	"EVP_DigestSignFinal"
	"EVP_DigestSignInit"
	"EVP_DigestSignUpdate"
	"EVP_DigestUpdate"
	"EVP_DigestVerifyFinal"
	"EVP_DigestVerifyInit"
	"EVP_DigestVerifyUpdate"
	"EVP_ENCODE_CTX_copy"
	"EVP_ENCODE_CTX_free"
	"EVP_ENCODE_CTX_new"
	"EVP_ENCODE_CTX_num"
	"EVP_EncodeBlock"
	"EVP_EncodeFinal"
	"EVP_EncodeInit"
	"EVP_EncodeUpdate"
	"EVP_EncryptFinal"
	"EVP_EncryptFinal_ex"
	"EVP_EncryptInit"
	"EVP_EncryptInit_ex"
	"EVP_EncryptUpdate"
	"EVP_MD_CTX_block_size"
	"EVP_MD_CTX_copy"
	"EVP_MD_CTX_copy_ex"
	"EVP_MD_CTX_free"
	"EVP_MD_CTX_md"
	"EVP_MD_CTX_md_data"
	"EVP_MD_CTX_new"
	"EVP_MD_CTX_reset"
	"EVP_MD_CTX_size"
	"EVP_MD_CTX_type"
	"EVP_MD_block_size"
	"EVP_MD_meth_dup"
	"EVP_MD_meth_free"
	"EVP_MD_meth_get_app_datasize"
	"EVP_MD_meth_get_cleanup"
	"EVP_MD_meth_get_copy"
	"EVP_MD_meth_get_ctrl"
	"EVP_MD_meth_get_final"
	"EVP_MD_meth_get_flags"
	"EVP_MD_meth_get_init"
	"EVP_MD_meth_get_input_blocksize"
	"EVP_MD_meth_get_result_size"
	"EVP_MD_meth_get_update"
	"EVP_MD_meth_new"
	"EVP_MD_meth_set_app_datasize"
	"EVP_MD_meth_set_cleanup"
	"EVP_MD_meth_set_copy"
	"EVP_MD_meth_set_ctrl"
	"EVP_MD_meth_set_final"
	"EVP_MD_meth_set_flags"
	"EVP_MD_meth_set_init"
	"EVP_MD_meth_set_input_blocksize"
	"EVP_MD_meth_set_result_size"
	"EVP_MD_meth_set_update"
	"EVP_MD_pkey_type"
	"EVP_MD_size"
	"EVP_MD_type"
	"EVP_OpenFinal"
	"EVP_OpenInit"
	"EVP_OpenUpdate"
	"EVP_PKEY_CTX_add1_hkdf_info"
	"EVP_PKEY_CTX_ctrl"
	"EVP_PKEY_CTX_ctrl_str"
	"EVP_PKEY_CTX_dup"
	"EVP_PKEY_CTX_free"
	"EVP_PKEY_CTX_get_app_data"
	"EVP_PKEY_CTX_get_cb"
	"EVP_PKEY_CTX_get_keygen_info"
	"EVP_PKEY_CTX_new"
	"EVP_PKEY_CTX_new_id"
	"EVP_PKEY_CTX_set1_hkdf_key"
	"EVP_PKEY_CTX_set1_hkdf_salt"
	"EVP_PKEY_CTX_set_app_data"
	"EVP_PKEY_CTX_set_cb"
	"EVP_PKEY_CTX_set_ec_param_enc"
	"EVP_PKEY_CTX_set_ec_paramgen_curve_nid"
	"EVP_PKEY_CTX_set_hkdf_md"
	"EVP_PKEY_CTX_set_signature_md"
	"EVP_PKEY_base_id"
	"EVP_PKEY_cmp"
	"EVP_PKEY_cmp_parameters"
	"EVP_PKEY_copy_parameters"
	"EVP_PKEY_decrypt"
	"EVP_PKEY_decrypt_init"
	"EVP_PKEY_derive"
	"EVP_PKEY_derive_init"
	"EVP_PKEY_derive_set_peer"
	"EVP_PKEY_encrypt"
	"EVP_PKEY_encrypt_init"
	"EVP_PKEY_free"
	"EVP_PKEY_get_default_digest_nid"
	"EVP_PKEY_id"
	"EVP_PKEY_keygen"
	"EVP_PKEY_keygen_init"
	"EVP_PKEY_missing_parameters"
	"EVP_PKEY_new"
	"EVP_PKEY_paramgen"
	"EVP_PKEY_paramgen_init"
	"EVP_PKEY_print_params"
	"EVP_PKEY_print_private"
	"EVP_PKEY_print_public"
	"EVP_PKEY_sign"
	"EVP_PKEY_sign_init"
	"EVP_PKEY_size"
	"EVP_PKEY_type"
	"EVP_PKEY_up_ref"
	"EVP_PKEY_verify"
	"EVP_PKEY_verify_init"
	"EVP_PKEY_verify_recover"
	"EVP_PKEY_verify_recover_init"
	"EVP_SealFinal"
	"EVP_SealInit"
	"EVP_SealUpdate"
	"EVP_SignFinal"
	"EVP_SignInit"
	"EVP_SignInit_ex"
	"EVP_SignUpdate"
	"EVP_VerifyFinal"
	"EVP_VerifyInit"
	"EVP_VerifyInit_ex"
	"EVP_VerifyUpdate"
	"EVP_cleanup"
	"EVP_enc_null"
	"EVP_get_cipherbyname"
	"EVP_get_cipherbynid"
	"EVP_get_cipherbyobj"
	"EVP_get_digestbyname"
	"EVP_get_digestbynid"
	"EVP_get_digestbyobj"
	"EXTENDED_KEY_USAGE_free"
	"EXTENDED_KEY_USAGE_new"
	"GENERAL_NAMES_free"
	"GENERAL_NAMES_new"
	"GENERAL_NAME_dup"
	"GENERAL_NAME_free"
	"GENERAL_NAME_new"
	"GENERAL_SUBTREE_free"
	"GENERAL_SUBTREE_new"
	"IMPLEMENT_ASN1_FUNCTIONS"
	"IMPLEMENT_LHASH_COMP_FN"
	"IMPLEMENT_LHASH_HASH_FN"
	"IPAddressChoice_free"
	"IPAddressChoice_new"
	"IPAddressFamily_free"
	"IPAddressFamily_new"
	"IPAddressOrRange_free"
	"IPAddressOrRange_new"
	"IPAddressRange_free"
	"IPAddressRange_new"
	"ISSUING_DIST_POINT_free"
	"ISSUING_DIST_POINT_new"
	"LHASH_DOALL_ARG_FN_TYPE"
	"NAME_CONSTRAINTS_free"
	"NAME_CONSTRAINTS_new"
	"NETSCAPE_CERT_SEQUENCE_free"
	"NETSCAPE_CERT_SEQUENCE_new"
	"NETSCAPE_SPKAC_free"
	"NETSCAPE_SPKAC_new"
	"NETSCAPE_SPKI_free"
	"NETSCAPE_SPKI_new"
	"NOTICEREF_free"
	"NOTICEREF_new"
	"OBJ_cleanup"
	"OBJ_cmp"
	"OBJ_create"
	"OBJ_dup"
	"OBJ_get0_data"
	"OBJ_length"
	"OBJ_ln2nid"
	"OBJ_nid2ln"
	"OBJ_nid2obj"
	"OBJ_nid2sn"
	"OBJ_obj2nid"
	"OBJ_obj2txt"
	"OBJ_sn2nid"
	"OBJ_txt2nid"
	"OBJ_txt2obj"
	"OCSP_BASICRESP_free"
	"OCSP_BASICRESP_new"
	"OCSP_CERTID_dup"
	"OCSP_CERTID_free"
	"OCSP_CERTID_new"
	"OCSP_CERTSTATUS_free"
	"OCSP_CERTSTATUS_new"
	"OCSP_CRLID_free"
	"OCSP_CRLID_new"
	"OCSP_ONEREQ_free"
	"OCSP_ONEREQ_new"
	"OCSP_REQINFO_free"
	"OCSP_REQINFO_new"
	"OCSP_REQUEST_free"
	"OCSP_REQUEST_new"
	"OCSP_REQ_CTX_add1_header"
	"OCSP_REQ_CTX_free"
	"OCSP_REQ_CTX_set1_req"
	"OCSP_RESPBYTES_free"
	"OCSP_RESPBYTES_new"
	"OCSP_RESPDATA_free"
	"OCSP_RESPDATA_new"
	"OCSP_RESPID_free"
	"OCSP_RESPID_match"
	"OCSP_RESPID_new"
	"OCSP_RESPID_set_by_key"
	"OCSP_RESPID_set_by_name"
	"OCSP_RESPONSE_free"
	"OCSP_RESPONSE_new"
	"OCSP_REVOKEDINFO_free"
	"OCSP_REVOKEDINFO_new"
	"OCSP_SERVICELOC_free"
	"OCSP_SERVICELOC_new"
	"OCSP_SIGNATURE_free"
	"OCSP_SIGNATURE_new"
	"OCSP_SINGLERESP_free"
	"OCSP_SINGLERESP_new"
	"OCSP_basic_add1_nonce"
	"OCSP_cert_id_new"
	"OCSP_cert_to_id"
	"OCSP_check_nonce"
	"OCSP_check_validity"
	"OCSP_copy_nonce"
	"OCSP_id_cmp"
	"OCSP_id_get0_info"
	"OCSP_id_issuer_cmp"
	"OCSP_request_add0_id"
	"OCSP_request_add1_cert"
	"OCSP_request_add1_nonce"
	"OCSP_request_onereq_count"
	"OCSP_request_onereq_get0"
	"OCSP_request_sign"
	"OCSP_resp_count"
	"OCSP_resp_find"
	"OCSP_resp_find_status"
	"OCSP_resp_get0"
	"OCSP_resp_get0_certs"
	"OCSP_resp_get0_id"
	"OCSP_resp_get0_produced_at"
	"OCSP_response_create"
	"OCSP_response_get1_basic"
	"OCSP_response_status"
	"OCSP_sendreq_bio"
	"OCSP_sendreq_nbio"
	"OCSP_sendreq_new"
	"OCSP_set_max_response_length"
	"OCSP_single_get0_status"
	"OPENSSL_Applink"
	"OPENSSL_INIT_free"
	"OPENSSL_INIT_set_config_appname"
	"OPENSSL_LH_COMPFUNC"
	"OPENSSL_LH_DOALL_FUNC"
	"OPENSSL_LH_HASHFUNC"
	"OPENSSL_LH_node_stats"
	"OPENSSL_LH_node_stats_bio"
	"OPENSSL_LH_node_usage_stats"
	"OPENSSL_LH_node_usage_stats_bio"
	"OPENSSL_LH_stats"
	"OPENSSL_LH_stats_bio"
	"OPENSSL_VERSION_NUMBER"
	"OPENSSL_atexit"
	"OPENSSL_buf2hexstr"
	"OPENSSL_cleanse"
	"OPENSSL_cleanup"
	"OPENSSL_clear_free"
	"OPENSSL_clear_realloc"
	"OPENSSL_config"
	"OPENSSL_free"
	"OPENSSL_hexchar2int"
	"OPENSSL_hexstr2buf"
	"OPENSSL_ia32cap"
	"OPENSSL_init_crypto"
	"OPENSSL_init_new"
	"OPENSSL_instrument_bus"
	"OPENSSL_instrument_bus2"
	"OPENSSL_load_builtin_modules"
	"OPENSSL_malloc"
	"OPENSSL_malloc_init"
	"OPENSSL_mem_debug_pop"
	"OPENSSL_mem_debug_push"
	"OPENSSL_memdup"
	"OPENSSL_no_config"
	"OPENSSL_realloc"
	"OPENSSL_secure_actual_size"
	"OPENSSL_secure_allocated"
	"OPENSSL_secure_free"
	"OPENSSL_secure_malloc"
	"OPENSSL_secure_zalloc"
	"OPENSSL_sk_deep_copy"
	"OPENSSL_sk_delete"
	"OPENSSL_sk_delete_ptr"
	"OPENSSL_sk_dup"
	"OPENSSL_sk_find"
	"OPENSSL_sk_find_ex"
	"OPENSSL_sk_free"
	"OPENSSL_sk_insert"
	"OPENSSL_sk_is_sorted"
	"OPENSSL_sk_new"
	"OPENSSL_sk_new_null"
	"OPENSSL_sk_num"
	"OPENSSL_sk_pop"
	"OPENSSL_sk_pop_free"
	"OPENSSL_sk_push"
	"OPENSSL_sk_set"
	"OPENSSL_sk_set_cmp_func"
	"OPENSSL_sk_shift"
	"OPENSSL_sk_sort"
	"OPENSSL_sk_unshift"
	"OPENSSL_sk_value"
	"OPENSSL_sk_zero"
	"OPENSSL_strdup"
	"OPENSSL_strlcat"
	"OPENSSL_strlcpy"
	"OPENSSL_strndup"
	"OPENSSL_thread_stop"
	"OPENSSL_zalloc"
	"OTHERNAME_free"
	"OTHERNAME_new"
	"OpenSSL_add_all_algorithms"
	"OpenSSL_add_all_ciphers"
	"OpenSSL_add_all_digests"
	"OpenSSL_version"
	"OpenSSL_version_num"
	"PBE2PARAM_free"
	"PBE2PARAM_new"
	"PBEPARAM_free"
	"PBEPARAM_new"
	"PBKDF2PARAM_free"
	"PBKDF2PARAM_new"
	"PEM_do_header"
	"PEM_get_EVP_CIPHER_INFO"
	"PEM_read"
	"PEM_read_CMS"
	"PEM_read_DHparams"
	"PEM_read_DSAPrivateKey"
	"PEM_read_DSA_PUBKEY"
	"PEM_read_DSAparams"
	"PEM_read_ECPKParameters"
	"PEM_read_ECPrivateKey"
	"PEM_read_EC_PUBKEY"
	"PEM_read_NETSCAPE_CERT_SEQUENCE"
	"PEM_read_PKCS7"
	"PEM_read_PKCS8"
	"PEM_read_PKCS8_PRIV_KEY_INFO"
	"PEM_read_PUBKEY"
	"PEM_read_PrivateKey"
	"PEM_read_SSL_SESSION"
	"PEM_read_X509"
	"PEM_read_X509_AUX"
	"PEM_read_X509_CRL"
	"PEM_read_X509_REQ"
	"PEM_read_bio"
	"PEM_read_bio_CMS"
	"PEM_read_bio_NETSCAPE_CERT_SEQUENCE"
	"PEM_read_bio_PKCS7"
	"PEM_read_bio_PKCS8"
	"PEM_read_bio_PKCS8_PRIV_KEY_INFO"
	"PEM_read_bio_PUBKEY"
	"PEM_read_bio_PrivateKey"
	"PEM_read_bio_SSL_SESSION"
	"PEM_read_bio_X509"
	"PEM_read_bio_X509_AUX"
	"PEM_read_bio_X509_CRL"
	"PEM_read_bio_X509_REQ"
	"PEM_write"
	"PEM_write_CMS"
	"PEM_write_NETSCAPE_CERT_SEQUENCE"
	"PEM_write_PKCS7"
	"PEM_write_PKCS8"
	"PEM_write_PKCS8PrivateKey"
	"PEM_write_PKCS8PrivateKey_nid"
	"PEM_write_PKCS8_PRIV_KEY_INFO"
	"PEM_write_PUBKEY"
	"PEM_write_PrivateKey"
	"PEM_write_SSL_SESSION"
	"PEM_write_X509"
	"PEM_write_X509_AUX"
	"PEM_write_X509_CRL"
	"PEM_write_X509_REQ"
	"PEM_write_X509_REQ_NEW"
	"PEM_write_bio"
	"PEM_write_bio_CMS"
	"PEM_write_bio_CMS_stream"
	"PEM_write_bio_NETSCAPE_CERT_SEQUENCE"
	"PEM_write_bio_PKCS7"
	"PEM_write_bio_PKCS7_stream"
	"PEM_write_bio_PKCS8"
	"PEM_write_bio_PKCS8PrivateKey"
	"PEM_write_bio_PKCS8PrivateKey_nid"
	"PEM_write_bio_PKCS8_PRIV_KEY_INFO"
	"PEM_write_bio_PUBKEY"
	"PEM_write_bio_PrivateKey"
	"PEM_write_bio_PrivateKey_traditional"
	"PEM_write_bio_SSL_SESSION"
	"PEM_write_bio_X509"
	"PEM_write_bio_X509_AUX"
	"PEM_write_bio_X509_CRL"
	"PEM_write_bio_X509_REQ"
	"PEM_write_bio_X509_REQ_NEW"
	"POLICYINFO_free"
	"POLICYINFO_new"
	"POLICYQUALINFO_free"
	"POLICYQUALINFO_new"
	"POLICY_CONSTRAINTS_free"
	"POLICY_CONSTRAINTS_new"
	"POLICY_MAPPING_free"
	"POLICY_MAPPING_new"
	"PROXY_CERT_INFO_EXTENSION_free"
	"PROXY_CERT_INFO_EXTENSION_new"
	"PROXY_POLICY_free"
	"PROXY_POLICY_new"
	"SCT_LIST_free"
	"SCT_LIST_print"
	"SCT_LIST_validate"
	"SCT_free"
	"SCT_get0_extensions"
	"SCT_get0_log_id"
	"SCT_get0_signature"
	"SCT_get_log_entry_type"
	"SCT_get_signature_nid"
	"SCT_get_source"
	"SCT_get_timestamp"
	"SCT_get_validation_status"
	"SCT_get_version"
	"SCT_new"
	"SCT_new_from_base64"
	"SCT_print"
	"SCT_set0_extensions"
	"SCT_set0_log_id"
	"SCT_set0_signature"
	"SCT_set1_extensions"
	"SCT_set1_log_id"
	"SCT_set1_signature"
	"SCT_set_log_entry_type"
	"SCT_set_signature_nid"
	"SCT_set_source"
	"SCT_set_timestamp"
	"SCT_set_version"
	"SCT_validate"
	"SCT_validation_status_string"
	"SMIME_read_CMS"
	"SMIME_read_PKCS7"
	"SMIME_write_CMS"
	"SMIME_write_PKCS7"
	"SSL_load_error_strings"
	"SXNETID_free"
	"SXNETID_new"
	"SXNET_free"
	"SXNET_new"
	"TS_ACCURACY_dup"
	"TS_ACCURACY_free"
	"TS_ACCURACY_new"
	"TS_MSG_IMPRINT_dup"
	"TS_MSG_IMPRINT_free"
	"TS_MSG_IMPRINT_new"
	"TS_REQ_dup"
	"TS_REQ_free"
	"TS_REQ_new"
	"TS_RESP_dup"
	"TS_RESP_free"
	"TS_RESP_new"
	"TS_STATUS_INFO_dup"
	"TS_STATUS_INFO_free"
	"TS_STATUS_INFO_new"
	"TS_TST_INFO_dup"
	"TS_TST_INFO_free"
	"TS_TST_INFO_new"
	"UI_OpenSSL"
	"d2i_ACCESS_DESCRIPTION"
	"d2i_ASIdOrRange"
	"d2i_ASIdentifierChoice"
	"d2i_ASIdentifiers"
	"d2i_ASRange"
	"d2i_AUTHORITY_INFO_ACCESS"
	"d2i_AUTHORITY_KEYID"
	"d2i_AutoPrivateKey"
	"d2i_BASIC_CONSTRAINTS"
	"d2i_CERTIFICATEPOLICIES"
	"d2i_CMS_ContentInfo"
	"d2i_CMS_ReceiptRequest"
	"d2i_CMS_bio"
	"d2i_CRL_DIST_POINTS"
	"d2i_DIRECTORYSTRING"
	"d2i_DISPLAYTEXT"
	"d2i_DIST_POINT"
	"d2i_DIST_POINT_NAME"
	"d2i_EDIPARTYNAME"
	"d2i_ESS_CERT_ID"
	"d2i_ESS_ISSUER_SERIAL"
	"d2i_ESS_SIGNING_CERT"
	"d2i_EXTENDED_KEY_USAGE"
	"d2i_GENERAL_NAME"
	"d2i_GENERAL_NAMES"
	"d2i_IPAddressChoice"
	"d2i_IPAddressFamily"
	"d2i_IPAddressOrRange"
	"d2i_IPAddressRange"
	"d2i_ISSUING_DIST_POINT"
	"d2i_NETSCAPE_CERT_SEQUENCE"
	"d2i_NETSCAPE_SPKAC"
	"d2i_NETSCAPE_SPKI"
	"d2i_NOTICEREF"
	"d2i_OCSP_BASICRESP"
	"d2i_OCSP_CERTID"
	"d2i_OCSP_CERTSTATUS"
	"d2i_OCSP_CRLID"
	"d2i_OCSP_ONEREQ"
	"d2i_OCSP_REQINFO"
	"d2i_OCSP_REQUEST"
	"d2i_OCSP_RESPBYTES"
	"d2i_OCSP_RESPDATA"
	"d2i_OCSP_RESPID"
	"d2i_OCSP_RESPONSE"
	"d2i_OCSP_REVOKEDINFO"
	"d2i_OCSP_SERVICELOC"
	"d2i_OCSP_SIGNATURE"
	"d2i_OCSP_SINGLERESP"
	"d2i_OTHERNAME"
	"d2i_PBE2PARAM"
	"d2i_PBEPARAM"
	"d2i_PBKDF2PARAM"
	"d2i_POLICYINFO"
	"d2i_POLICYQUALINFO"
	"d2i_PROXY_CERT_INFO_EXTENSION"
	"d2i_PROXY_POLICY"
	"d2i_SCT_LIST"
	"d2i_SXNET"
	"d2i_SXNETID"
	"d2i_TS_ACCURACY"
	"d2i_TS_MSG_IMPRINT"
	"d2i_TS_MSG_IMPRINT_bio"
	"d2i_TS_MSG_IMPRINT_fp"
	"d2i_TS_REQ"
	"d2i_TS_REQ_bio"
	"d2i_TS_REQ_fp"
	"d2i_TS_RESP"
	"d2i_TS_RESP_bio"
	"d2i_TS_RESP_fp"
	"d2i_TS_STATUS_INFO"
	"d2i_TS_TST_INFO"
	"d2i_TS_TST_INFO_bio"
	"d2i_TS_TST_INFO_fp"
	"d2i_USERNOTICE"
	"i2d_ACCESS_DESCRIPTION"
	"i2d_ASIdOrRange"
	"i2d_ASIdentifierChoice"
	"i2d_ASIdentifiers"
	"i2d_ASRange"
	"i2d_AUTHORITY_INFO_ACCESS"
	"i2d_AUTHORITY_KEYID"
	"i2d_BASIC_CONSTRAINTS"
	"i2d_CERTIFICATEPOLICIES"
	"i2d_CMS_ContentInfo"
	"i2d_CMS_ReceiptRequest"
	"i2d_CMS_bio"
	"i2d_CMS_bio_stream"
	"i2d_CRL_DIST_POINTS"
	"i2d_DIRECTORYSTRING"
	"i2d_DISPLAYTEXT"
	"i2d_DIST_POINT"
	"i2d_DIST_POINT_NAME"
	"i2d_EDIPARTYNAME"
	"i2d_ESS_CERT_ID"
	"i2d_ESS_ISSUER_SERIAL"
	"i2d_ESS_SIGNING_CERT"
	"i2d_EXTENDED_KEY_USAGE"
	"i2d_GENERAL_NAME"
	"i2d_GENERAL_NAMES"
	"i2d_IPAddressChoice"
	"i2d_IPAddressFamily"
	"i2d_IPAddressOrRange"
	"i2d_IPAddressRange"
	"i2d_ISSUING_DIST_POINT"
	"i2d_NETSCAPE_CERT_SEQUENCE"
	"i2d_NETSCAPE_SPKAC"
	"i2d_NETSCAPE_SPKI"
	"i2d_NOTICEREF"
	"i2d_OCSP_BASICRESP"
	"i2d_OCSP_CERTID"
	"i2d_OCSP_CERTSTATUS"
	"i2d_OCSP_CRLID"
	"i2d_OCSP_ONEREQ"
	"i2d_OCSP_REQINFO"
	"i2d_OCSP_REQUEST"
	"i2d_OCSP_RESPBYTES"
	"i2d_OCSP_RESPDATA"
	"i2d_OCSP_RESPID"
	"i2d_OCSP_RESPONSE"
	"i2d_OCSP_REVOKEDINFO"
	"i2d_OCSP_SERVICELOC"
	"i2d_OCSP_SIGNATURE"
	"i2d_OCSP_SINGLERESP"
	"i2d_OTHERNAME"
	"i2d_PBE2PARAM"
	"i2d_PBEPARAM"
	"i2d_PBKDF2PARAM"
	"i2d_POLICYINFO"
	"i2d_POLICYQUALINFO"
	"i2d_PROXY_CERT_INFO_EXTENSION"
	"i2d_PROXY_POLICY"
	"i2d_SCT_LIST"
	"i2d_SXNET"
	"i2d_SXNETID"
	"i2d_TS_ACCURACY"
	"i2d_TS_MSG_IMPRINT"
	"i2d_TS_MSG_IMPRINT_bio"
	"i2d_TS_MSG_IMPRINT_fp"
	"i2d_TS_REQ"
	"i2d_TS_REQ_bio"
	"i2d_TS_REQ_fp"
	"i2d_TS_RESP"
	"i2d_TS_RESP_bio"
	"i2d_TS_RESP_fp"
	"i2d_TS_STATUS_INFO"
	"i2d_TS_TST_INFO"
	"i2d_TS_TST_INFO_bio"
	"i2d_TS_TST_INFO_fp"
	"i2d_USERNOTICE"
	"i2o_SCT"
	"i2o_SCT_LIST"
	"i2t_ASN1_OBJECT"
	"lh_TYPE_delete"
	"lh_TYPE_doall"
	"lh_TYPE_doall_arg"
	"lh_TYPE_error"
	"lh_TYPE_free"
	"lh_TYPE_insert"
	"lh_TYPE_new"
	"lh_TYPE_retrieve"
	"o2i_SCT"
	"o2i_SCT_LIST"
	"pem_password_cb"
	"sk_TYPE_deep_copy"
	"sk_TYPE_delete"
	"sk_TYPE_delete_ptr"
	"sk_TYPE_dup"
	"sk_TYPE_find"
	"sk_TYPE_find_ex"
	"sk_TYPE_free"
	"sk_TYPE_insert"
	"sk_TYPE_is_sorted"
	"sk_TYPE_new"
	"sk_TYPE_new_null"
	"sk_TYPE_num"
	"sk_TYPE_pop"
	"sk_TYPE_pop_free"
	"sk_TYPE_push"
	"sk_TYPE_set"
	"sk_TYPE_set_cmp_func"
	"sk_TYPE_shift"
	"sk_TYPE_sort"
	"sk_TYPE_unshift"
	"sk_TYPE_value"
	"sk_TYPE_zero"
	"BASIC_CONSTRAINTS_free"
	"BASIC_CONSTRAINTS_new"
	"BIO_ADDR"
	"BIO_callback_fn"
	"BIO_callback_fn_ex"
	"BIO_get_callback_ex"
	"BIO_hostserv_priorities"
	"BIO_lookup_ex"
	"BIO_lookup_type"
	"BIO_meth_get_read_ex"
	"BIO_meth_get_write_ex"
	"BIO_meth_set_read_ex"
	"BIO_meth_set_write_ex"
	"BIO_printf"
	"BIO_read_ex"
	"BIO_set_callback_ex"
	"BIO_snprintf"
	"BIO_vprintf"
	"BIO_vsnprintf"
	"BIO_write_ex"
	"BN_security_bits"
	"BUF_MEM_grow"
	"BUF_MEM_grow_clean"
	"CRYPTO_atomic_read"
	"CRYPTO_atomic_write"
	"CRYPTO_get_alloc_counts"
	"CRYPTO_mem_leaks_cb"
	"CRYPTO_secure_clear_free"
	"CRYPTO_secure_used"
	"CT_POLICY_EVAL_CTX_get_time"
	"CT_POLICY_EVAL_CTX_set_time"
	"EVP_DigestFinalXOF"
	"EVP_DigestSign"
	"EVP_DigestVerify"
	"EVP_MD_CTX_ctrl"
	"EVP_PKEY_CTX_add1_tls1_prf_seed"
	"EVP_PKEY_CTX_hkdf_mode"
	"EVP_PKEY_CTX_set1_tls1_prf_secret"
	"EVP_PKEY_CTX_set_dh_nid"
	"EVP_PKEY_CTX_set_dh_pad"
	"EVP_PKEY_CTX_set_rsa_keygen_bits"
	"EVP_PKEY_CTX_set_tls1_prf_md"
	"EVP_PKEY_METHOD"
	"EVP_PKEY_asn1_add0"
	"EVP_PKEY_asn1_add_alias"
	"EVP_PKEY_asn1_copy"
	"EVP_PKEY_asn1_find"
	"EVP_PKEY_asn1_find_str"
	"EVP_PKEY_asn1_free"
	"EVP_PKEY_asn1_get0"
	"EVP_PKEY_asn1_get0_info"
	"EVP_PKEY_asn1_get_count"
	"EVP_PKEY_asn1_new"
	"EVP_PKEY_asn1_set_check"
	"EVP_PKEY_asn1_set_ctrl"
	"EVP_PKEY_asn1_set_free"
	"EVP_PKEY_asn1_set_item"
	"EVP_PKEY_asn1_set_param"
	"EVP_PKEY_asn1_set_param_check"
	"EVP_PKEY_asn1_set_private"
	"EVP_PKEY_asn1_set_public"
	"EVP_PKEY_asn1_set_public_check"
	"EVP_PKEY_asn1_set_security_bits"
	"EVP_PKEY_asn1_set_siginf"
	"EVP_PKEY_check"
	"EVP_PKEY_gen_cb"
	"EVP_PKEY_get0_asn1"
	"EVP_PKEY_meth_add0"
	"EVP_PKEY_meth_copy"
	"EVP_PKEY_meth_find"
	"EVP_PKEY_meth_free"
	"EVP_PKEY_meth_get0"
	"EVP_PKEY_meth_get0_info"
	"EVP_PKEY_meth_get_check"
	"EVP_PKEY_meth_get_cleanup"
	"EVP_PKEY_meth_get_copy"
	"EVP_PKEY_meth_get_count"
	"EVP_PKEY_meth_get_ctrl"
	"EVP_PKEY_meth_get_decrypt"
	"EVP_PKEY_meth_get_derive"
	"EVP_PKEY_meth_get_encrypt"
	"EVP_PKEY_meth_get_init"
	"EVP_PKEY_meth_get_keygen"
	"EVP_PKEY_meth_get_param_check"
	"EVP_PKEY_meth_get_paramgen"
	"EVP_PKEY_meth_get_public_check"
	"EVP_PKEY_meth_get_sign"
	"EVP_PKEY_meth_get_signctx"
	"EVP_PKEY_meth_get_verify"
	"EVP_PKEY_meth_get_verify_recover"
	"EVP_PKEY_meth_get_verifyctx"
	"EVP_PKEY_meth_new"
	"EVP_PKEY_meth_remove"
	"EVP_PKEY_meth_set_check"
	"EVP_PKEY_meth_set_cleanup"
	"EVP_PKEY_meth_set_copy"
	"EVP_PKEY_meth_set_ctrl"
	"EVP_PKEY_meth_set_decrypt"
	"EVP_PKEY_meth_set_derive"
	"EVP_PKEY_meth_set_encrypt"
	"EVP_PKEY_meth_set_init"
	"EVP_PKEY_meth_set_keygen"
	"EVP_PKEY_meth_set_param_check"
	"EVP_PKEY_meth_set_paramgen"
	"EVP_PKEY_meth_set_public_check"
	"EVP_PKEY_meth_set_sign"
	"EVP_PKEY_meth_set_signctx"
	"EVP_PKEY_meth_set_verify"
	"EVP_PKEY_meth_set_verify_recover"
	"EVP_PKEY_meth_set_verifyctx"
	"EVP_PKEY_param_check"
	"EVP_PKEY_public_check"
	"EVP_PKEY_security_bits"
	"EVP_PKEY_set1_engine"
	"OCSP_resp_get0_signer"
	"OCSP_resp_get1_id"
	"OPENSSL_MALLOC_FAILURES"
	"OPENSSL_MALLOC_FD"
	"OPENSSL_cipher_name"
	"OPENSSL_fork_child"
	"OPENSSL_fork_parent"
	"OPENSSL_fork_prepare"
	"OPENSSL_init_ssl"
	"OPENSSL_secure_clear_free"
	"OSSL_STORE_CTX"
	"OSSL_STORE_INFO"
	"OSSL_STORE_INFO_free"
	"OSSL_STORE_INFO_get0_CERT"
	"OSSL_STORE_INFO_get0_CRL"
	"OSSL_STORE_INFO_get0_NAME"
	"OSSL_STORE_INFO_get0_NAME_description"
	"OSSL_STORE_INFO_get0_PARAMS"
	"OSSL_STORE_INFO_get0_PKEY"
	"OSSL_STORE_INFO_get1_CERT"
	"OSSL_STORE_INFO_get1_CRL"
	"OSSL_STORE_INFO_get1_NAME"
	"OSSL_STORE_INFO_get1_NAME_description"
	"OSSL_STORE_INFO_get1_PARAMS"
	"OSSL_STORE_INFO_get1_PKEY"
	"OSSL_STORE_INFO_get_type"
	"OSSL_STORE_INFO_new_CERT"
	"OSSL_STORE_INFO_new_CRL"
	"OSSL_STORE_INFO_new_NAME"
	"OSSL_STORE_INFO_new_PARAMS"
	"OSSL_STORE_INFO_new_PKEY"
	"OSSL_STORE_INFO_set0_NAME_description"
	"OSSL_STORE_INFO_type_string"
	"OSSL_STORE_LOADER"
	"OSSL_STORE_LOADER_CTX"
	"OSSL_STORE_LOADER_free"
	"OSSL_STORE_LOADER_get0_engine"
	"OSSL_STORE_LOADER_get0_scheme"
	"OSSL_STORE_LOADER_new"
	"OSSL_STORE_LOADER_set_close"
	"OSSL_STORE_LOADER_set_ctrl"
	"OSSL_STORE_LOADER_set_eof"
	"OSSL_STORE_LOADER_set_error"
	"OSSL_STORE_LOADER_set_load"
	"OSSL_STORE_LOADER_set_open"
	"OSSL_STORE_close"
	"OSSL_STORE_close_fn"
	"OSSL_STORE_ctrl"
	"OSSL_STORE_ctrl_fn"
	"OSSL_STORE_eof"
	"OSSL_STORE_eof_fn"
	"OSSL_STORE_error"
	"OSSL_STORE_error_fn"
	"OSSL_STORE_load"
	"OSSL_STORE_load_fn"
	"OSSL_STORE_open"
	"OSSL_STORE_open_fn"
	"OSSL_STORE_post_process_info_fn"
	"OSSL_STORE_register_loader"
	"OSSL_STORE_unregister_loader"
	"OpenSSL_add_ssl_algorithms"
	"PEM_FLAG_EAY_COMPATIBLE"
	"PEM_FLAG_ONLY_B64"
	"PEM_FLAG_SECURE"
	"PEM_bytes_read_bio"
	"PEM_bytes_read_bio_secmem"
	"PEM_read_bio_ex"
	"PKCS7_ISSUER_AND_SERIAL_digest"
	"SCRYPT_PARAMS_free"
	"SCRYPT_PARAMS_new"
	"bio_info_cb"
	"custom_ext_add_cb"
	"custom_ext_free_cb"
	"custom_ext_parse_cb"
	"d2i_SCRYPT_PARAMS"
	"d2i_SSL_SESSION"
	"i2d_SCRYPT_PARAMS"
	"i2d_SSL_SESSION"
	"sk_TYPE_new_reserve"
	"sk_TYPE_reserve"
	"ssl_ct_validation_cb"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/hash/RIPEMD", "encryption_api_usage":"call", "language":"all"}]
	"EVP_ripemd160"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/symmetric/block-cipher/Camellia", "encryption_api_usage":"call", "language":"all"}]
	"EVP_camellia"
	"EVP_camellia_128_cbc"
	"EVP_camellia_192_cbc"
	"EVP_camellia_256_cbc"
	"EVP_camellia_128_cfb"
	"EVP_camellia_192_cfb"
	"EVP_camellia_256_cfb"
	"EVP_camellia_128_cfb1"
	"EVP_camellia_192_cfb1"
	"EVP_camellia_256_cfb1"
	"EVP_camellia_128_cfb8"
	"EVP_camellia_192_cfb8"
	"EVP_camellia_256_cfb8"
	"EVP_camellia_128_ctr"
	"EVP_camellia_192_ctr"
	"EVP_camellia_256_ctr"
	"EVP_camellia_128_ecb"
	"EVP_camellia_192_ecb"
	"EVP_camellia_256_ecb"
	"EVP_camellia_128_ofb"
	"EVP_camellia_192_ofb"
	"EVP_camellia_256_ofb"

[{"encryption_library":"OpenSSL", "evidence_type":"protocol/ASN1", "encryption_api_usage":"call", "language":"all"}]
	"ASN1_ENUMERATED_get"
	"ASN1_ENUMERATED_get_int64"
	"ASN1_ENUMERATED_set"
	"ASN1_ENUMERATED_set_int64"
	"ASN1_ENUMERATED_to_BN"
	"ASN1_INTEGER_get"
	"ASN1_INTEGER_get_int64"
	"ASN1_INTEGER_get_uint64"
	"ASN1_INTEGER_set"
	"ASN1_INTEGER_set_int64"
	"ASN1_INTEGER_set_uint64"
	"ASN1_INTEGER_to_BN"
	"ASN1_ITEM"
	"ASN1_OBJECT_free"
	"ASN1_OBJECT_new"
	"ASN1_STRING_cmp"
	"ASN1_STRING_data"
	"ASN1_STRING_dup"
	"ASN1_STRING_free"
	"ASN1_STRING_get0_data"
	"ASN1_STRING_length"
	"ASN1_STRING_new"
	"ASN1_STRING_print"
	"ASN1_STRING_print_ex"
	"ASN1_STRING_print_ex_fp"
	"ASN1_STRING_set"
	"ASN1_STRING_to_UTF8"
	"ASN1_STRING_type"
	"ASN1_STRING_type_new"
	"ASN1_TIME_adj"
	"ASN1_TIME_check"
	"ASN1_TIME_diff"
	"ASN1_TIME_print"
	"ASN1_TIME_set"
	"ASN1_TIME_set_string"
	"ASN1_TYPE_cmp"
	"ASN1_TYPE_get"
	"ASN1_TYPE_pack_sequence"
	"ASN1_TYPE_set"
	"ASN1_TYPE_set1"
	"ASN1_TYPE_unpack_sequence"
	"ASN1_add_oid_module"
	"ASN1_generate_nconf"
	"ASN1_generate_v3"
	"d2i_ASN1_BIT_STRING"
	"d2i_ASN1_BMPSTRING"
	"d2i_ASN1_ENUMERATED"
	"d2i_ASN1_GENERALIZEDTIME"
	"d2i_ASN1_GENERALSTRING"
	"d2i_ASN1_IA5STRING"
	"d2i_ASN1_INTEGER"
	"d2i_ASN1_NULL"
	"d2i_ASN1_OBJECT"
	"d2i_ASN1_OCTET_STRING"
	"d2i_ASN1_PRINTABLE"
	"d2i_ASN1_PRINTABLESTRING"
	"d2i_ASN1_SEQUENCE_ANY"
	"d2i_ASN1_SET_ANY"
	"d2i_ASN1_T61STRING"
	"d2i_ASN1_TIME"
	"d2i_ASN1_TYPE"
	"d2i_ASN1_UINTEGER"
	"d2i_ASN1_UNIVERSALSTRING"
	"d2i_ASN1_UTCTIME"
	"d2i_ASN1_UTF8STRING"
	"d2i_ASN1_VISIBLESTRING"
	"i2d_ASN1_BIT_STRING"
	"i2d_ASN1_BMPSTRING"
	"i2d_ASN1_ENUMERATED"
	"i2d_ASN1_GENERALIZEDTIME"
	"i2d_ASN1_GENERALSTRING"
	"i2d_ASN1_IA5STRING"
	"i2d_ASN1_INTEGER"
	"i2d_ASN1_NULL"
	"i2d_ASN1_OBJECT"
	"i2d_ASN1_OCTET_STRING"
	"i2d_ASN1_PRINTABLE"
	"i2d_ASN1_PRINTABLESTRING"
	"i2d_ASN1_SEQUENCE_ANY"
	"i2d_ASN1_SET_ANY"
	"i2d_ASN1_T61STRING"
	"i2d_ASN1_TIME"
	"i2d_ASN1_TYPE"
	"i2d_ASN1_UNIVERSALSTRING"
	"i2d_ASN1_UTCTIME"
	"i2d_ASN1_UTF8STRING"
	"i2d_ASN1_VISIBLESTRING"
	"i2d_ASN1_bio_stream"
	"ASN1_GENERALIZEDTIME_adj"
	"ASN1_GENERALIZEDTIME_check"
	"ASN1_GENERALIZEDTIME_print"
	"ASN1_GENERALIZEDTIME_set"
	"ASN1_GENERALIZEDTIME_set_string"
	"ASN1_ITEM_get"
	"ASN1_ITEM_lookup"
	"ASN1_STRING_TABLE"
	"ASN1_STRING_TABLE_add"
	"ASN1_STRING_TABLE_cleanup"
	"ASN1_STRING_TABLE_get"
	"ASN1_TIME_cmp_time_t"
	"ASN1_TIME_compare"
	"ASN1_TIME_normalize"
	"ASN1_TIME_set_string_X509"
	"ASN1_TIME_to_generalizedtime"
	"ASN1_TIME_to_tm"
	"ASN1_UTCTIME_adj"
	"ASN1_UTCTIME_check"
	"ASN1_UTCTIME_cmp_time_t"
	"ASN1_UTCTIME_print"
	"ASN1_UTCTIME_set"
	"ASN1_UTCTIME_set_string"
	"ASN1_tag2str"
	"EVP_PKEY_ASN1_METHOD"

[{"encryption_library":"OpenSSL", "evidence_type":"protocol/SSL", "encryption_api_usage":"data_type", "language":"all"}]
	"SSL_R_BAD_DECOMPRESSION"
	"SSL_R_BAD_DH_G_LENGTH"
	"SSL_R_BAD_DH_PUB_KEY_LENGTH"
	"SSL_R_BAD_DH_G_VALUE"
	"SSL_R_BAD_DH_PUB_KEY_VALUE"
	"SSL_R_BAD_DH_P_LENGTH"
	"SSL_R_BAD_DH_P_VALUE"
	"SSL_R_BAD_DIGEST_LENGTH"
	"SSL_R_BAD_DSA_SIGNATURE"
	"SSL_R_BAD_ECC_CERT"
	"SSL_F_SSL3_GET_KEY_EXCHANGE"
	"SSL_CIPHER_description"
	"SSL_CIPHER_find"
	"SSL_CIPHER_get_auth_nid"
	"SSL_CIPHER_get_bits"
	"SSL_CIPHER_get_cipher_nid"
	"SSL_CIPHER_get_digest_nid"
	"SSL_CIPHER_get_handshake_digest"
	"SSL_CIPHER_get_id"
	"SSL_CIPHER_get_kx_nid"
	"SSL_CIPHER_get_name"
	"SSL_CIPHER_get_protocol_id"
	"SSL_CIPHER_get_version"
	"SSL_CIPHER_is_aead"
	"SSL_CIPHER_standard_name"
	"SSL_COMP_add_compression_method"
	"SSL_COMP_free_compression_methods"
	"SSL_COMP_get0_name"
	"SSL_COMP_get_compression_methods"
	"SSL_COMP_get_id"
	"SSL_CONF_CTX_clear_flags"
	"SSL_CONF_CTX_free"
	"SSL_CONF_CTX_new"
	"SSL_CONF_CTX_set1_prefix"
	"SSL_CONF_CTX_set_flags"
	"SSL_CONF_CTX_set_ssl"
	"SSL_CONF_CTX_set_ssl_ctx"
	"SSL_CONF_cmd"
	"SSL_CONF_cmd_argv"
	"SSL_CONF_cmd_value_type"
	"SSL_CTX_add0_chain_cert"
	"SSL_CTX_add1_CA_list"
	"SSL_CTX_add1_chain_cert"
	"SSL_CTX_add_client_CA"
	"SSL_CTX_add_client_custom_ext"
	"SSL_CTX_add_custom_ext"
	"SSL_CTX_add_extra_chain_cert"
	"SSL_CTX_add_server_custom_ext"
	"SSL_CTX_add_session"
	"SSL_CTX_build_cert_chain"
	"SSL_CTX_callback_ctrl"
	"SSL_CTX_check_private_key"
	"SSL_CTX_clear_chain_certs"
	"SSL_CTX_clear_extra_chain_certs"
	"SSL_CTX_clear_options"
	"SSL_CTX_config"
	"SSL_CTX_ct_is_enabled"
	"SSL_CTX_ctrl"
	"SSL_CTX_dane_clear_flags"
	"SSL_CTX_dane_enable"
	"SSL_CTX_dane_mtype_set"
	"SSL_CTX_dane_set_flags"
	"SSL_CTX_disable_ct"
	"SSL_CTX_enable_ct"
	"SSL_CTX_flush_sessions"
	"SSL_CTX_free"
	"SSL_CTX_get0_CA_list"
	"SSL_CTX_get0_chain_certs"
	"SSL_CTX_get0_param"
	"SSL_CTX_get0_security_ex_data"
	"SSL_CTX_get_cert_store"
	"SSL_CTX_get_ciphers"
	"SSL_CTX_get_client_CA_list"
	"SSL_CTX_get_client_cert_cb"
	"SSL_CTX_get_default_passwd_cb"
	"SSL_CTX_get_default_passwd_cb_userdata"
	"SSL_CTX_get_default_read_ahead"
	"SSL_CTX_get_ex_data"
	"SSL_CTX_get_info_callback"
	"SSL_CTX_get_keylog_callback"
	"SSL_CTX_get_max_cert_list"
	"SSL_CTX_get_max_early_data"
	"SSL_CTX_get_max_proto_version"
	"SSL_CTX_get_min_proto_version"
	"SSL_CTX_get_mode"
	"SSL_CTX_get_options"
	"SSL_CTX_get_quiet_shutdown"
	"SSL_CTX_get_read_ahead"
	"SSL_CTX_get_record_padding_callback_arg"
	"SSL_CTX_get_security_callback"
	"SSL_CTX_get_security_level"
	"SSL_CTX_get_session_cache_mode"
	"SSL_CTX_get_timeout"
	"SSL_CTX_get_tlsext_status_arg"
	"SSL_CTX_get_tlsext_status_cb"
	"SSL_CTX_get_tlsext_status_type"
	"SSL_CTX_get_verify_callback"
	"SSL_CTX_get_verify_depth"
	"SSL_CTX_get_verify_mode"
	"SSL_CTX_has_client_custom_ext"
	"SSL_CTX_keylog_cb_func"
	"SSL_CTX_load_verify_locations"
	"SSL_CTX_new"
	"SSL_CTX_remove_session"
	"SSL_CTX_select_current_cert"
	"SSL_CTX_sess_accept"
	"SSL_CTX_sess_accept_good"
	"SSL_CTX_sess_accept_renegotiate"
	"SSL_CTX_sess_cache_full"
	"SSL_CTX_sess_cb_hits"
	"SSL_CTX_sess_connect"
	"SSL_CTX_sess_connect_good"
	"SSL_CTX_sess_connect_renegotiate"
	"SSL_CTX_sess_get_cache_size"
	"SSL_CTX_sess_get_get_cb"
	"SSL_CTX_sess_get_new_cb"
	"SSL_CTX_sess_get_remove_cb"
	"SSL_CTX_sess_hits"
	"SSL_CTX_sess_misses"
	"SSL_CTX_sess_number"
	"SSL_CTX_sess_set_cache_size"
	"SSL_CTX_sess_set_get_cb"
	"SSL_CTX_sess_set_new_cb"
	"SSL_CTX_sess_set_remove_cb"
	"SSL_CTX_sess_timeouts"
	"SSL_CTX_sessions"
	"SSL_CTX_set0_CA_list"
	"SSL_CTX_set0_chain"
	"SSL_CTX_set0_chain_cert_store"
	"SSL_CTX_set0_security_ex_data"
	"SSL_CTX_set0_verify_cert_store"
	"SSL_CTX_set1_cert_store"
	"SSL_CTX_set1_chain"
	"SSL_CTX_set1_chain_cert_store"
	"SSL_CTX_set1_client_sigalgs"
	"SSL_CTX_set1_client_sigalgs_list"
	"SSL_CTX_set1_curves"
	"SSL_CTX_set1_curves_list"
	"SSL_CTX_set1_groups"
	"SSL_CTX_set1_groups_list"
	"SSL_CTX_set1_param"
	"SSL_CTX_set1_sigalgs"
	"SSL_CTX_set1_sigalgs_list"
	"SSL_CTX_set1_verify_cert_store"
	"SSL_CTX_set_alpn_protos"
	"SSL_CTX_set_alpn_select_cb"
	"SSL_CTX_set_block_padding"
	"SSL_CTX_set_cert_cb"
	"SSL_CTX_set_cert_store"
	"SSL_CTX_set_cert_verify_callback"
	"SSL_CTX_set_cipher_list"
	"SSL_CTX_set_client_CA_list"
	"SSL_CTX_set_client_cert_cb"
	"SSL_CTX_set_client_hello_cb"
	"SSL_CTX_set_ct_validation_callback"
	"SSL_CTX_set_ctlog_list_file"
	"SSL_CTX_set_current_cert"
	"SSL_CTX_set_default_ctlog_list_file"
	"SSL_CTX_set_default_passwd_cb"
	"SSL_CTX_set_default_passwd_cb_userdata"
	"SSL_CTX_set_default_read_buffer_len"
	"SSL_CTX_set_default_verify_dir"
	"SSL_CTX_set_default_verify_file"
	"SSL_CTX_set_default_verify_paths"
	"SSL_CTX_set_ex_data"
	"SSL_CTX_set_generate_session_id"
	"SSL_CTX_set_info_callback"
	"SSL_CTX_set_keylog_callback"
	"SSL_CTX_set_max_cert_list"
	"SSL_CTX_set_max_early_data"
	"SSL_CTX_set_max_pipelines"
	"SSL_CTX_set_max_proto_version"
	"SSL_CTX_set_max_send_fragment"
	"SSL_CTX_set_min_proto_version"
	"SSL_CTX_set_mode"
	"SSL_CTX_set_msg_callback"
	"SSL_CTX_set_msg_callback_arg"
	"SSL_CTX_set_next_proto_select_cb"
	"SSL_CTX_set_next_protos_advertised_cb"
	"SSL_CTX_set_options"
	"SSL_CTX_set_psk_client_callback"
	"SSL_CTX_set_psk_find_session_callback"
	"SSL_CTX_set_psk_server_callback"
	"SSL_CTX_set_psk_use_session_callback"
	"SSL_CTX_set_quiet_shutdown"
	"SSL_CTX_set_read_ahead"
	"SSL_CTX_set_record_padding_callback"
	"SSL_CTX_set_record_padding_callback_arg"
	"SSL_CTX_set_security_callback"
	"SSL_CTX_set_security_level"
	"SSL_CTX_set_session_cache_mode"
	"SSL_CTX_set_session_id_context"
	"SSL_CTX_set_split_send_fragment"
	"SSL_CTX_set_ssl_version"
	"SSL_CTX_set_timeout"
	"SSL_CTX_set_tlsext_max_fragment_length"
	"SSL_CTX_set_tlsext_servername_arg"
	"SSL_CTX_set_tlsext_servername_callback"
	"SSL_CTX_set_tlsext_status_arg"
	"SSL_CTX_set_tlsext_status_cb"
	"SSL_CTX_set_tlsext_status_type"
	"SSL_CTX_set_tlsext_ticket_key_cb"
	"SSL_CTX_set_tlsext_use_srtp"
	"SSL_CTX_set_tmp_dh"
	"SSL_CTX_set_tmp_dh_callback"
	"SSL_CTX_set_verify"
	"SSL_CTX_set_verify_depth"
	"SSL_CTX_up_ref"
	"SSL_CTX_use_PrivateKey"
	"SSL_CTX_use_PrivateKey_ASN1"
	"SSL_CTX_use_PrivateKey_file"
	"SSL_CTX_use_RSAPrivateKey"
	"SSL_CTX_use_RSAPrivateKey_ASN1"
	"SSL_CTX_use_RSAPrivateKey_file"
	"SSL_CTX_use_certificate"
	"SSL_CTX_use_certificate_ASN1"
	"SSL_CTX_use_certificate_chain_file"
	"SSL_CTX_use_certificate_file"
	"SSL_CTX_use_psk_identity_hint"
	"SSL_CTX_use_serverinfo"
	"SSL_CTX_use_serverinfo_ex"
	"SSL_CTX_use_serverinfo_file"
	"SSL_SESSION_dup"
	"SSL_SESSION_free"
	"SSL_SESSION_get0_alpn_selected"
	"SSL_SESSION_get0_cipher"
	"SSL_SESSION_get0_hostname"
	"SSL_SESSION_get0_id_context"
	"SSL_SESSION_get0_peer"
	"SSL_SESSION_get0_ticket"
	"SSL_SESSION_get_compress_id"
	"SSL_SESSION_get_ex_data"
	"SSL_SESSION_get_id"
	"SSL_SESSION_get_master_key"
	"SSL_SESSION_get_max_early_data"
	"SSL_SESSION_get_max_fragment_length"
	"SSL_SESSION_get_protocol_version"
	"SSL_SESSION_get_ticket_lifetime_hint"
	"SSL_SESSION_get_time"
	"SSL_SESSION_get_timeout"
	"SSL_SESSION_has_ticket"
	"SSL_SESSION_is_resumable"
	"SSL_SESSION_new"
	"SSL_SESSION_print"
	"SSL_SESSION_print_fp"
	"SSL_SESSION_print_keylog"
	"SSL_SESSION_set1_alpn_selected"
	"SSL_SESSION_set1_hostname"
	"SSL_SESSION_set1_id"
	"SSL_SESSION_set1_id_context"
	"SSL_SESSION_set1_master_key"
	"SSL_SESSION_set_cipher"
	"SSL_SESSION_set_ex_data"
	"SSL_SESSION_set_max_early_data"
	"SSL_SESSION_set_protocol_version"
	"SSL_SESSION_set_time"
	"SSL_SESSION_set_timeout"
	"SSL_SESSION_up_ref"
	"SSL_accept"
	"SSL_add0_chain_cert"
	"SSL_add1_CA_list"
	"SSL_add1_chain_cert"
	"SSL_add1_host"
	"SSL_add_client_CA"
	"SSL_alert_desc_string"
	"SSL_alert_desc_string_long"
	"SSL_alert_type_string"
	"SSL_alert_type_string_long"
	"SSL_alloc_buffers"
	"SSL_build_cert_chain"
	"SSL_bytes_to_cipher_list"
	"SSL_callback_ctrl"
	"SSL_check_chain"
	"SSL_check_private_key"
	"SSL_clear"
	"SSL_clear_chain_certs"
	"SSL_clear_options"
	"SSL_client_hello_cb_fn"
	"SSL_client_hello_get0_ciphers"
	"SSL_client_hello_get0_compression_methods"
	"SSL_client_hello_get0_ext"
	"SSL_client_hello_get0_legacy_version"
	"SSL_client_hello_get0_random"
	"SSL_client_hello_get0_session_id"
	"SSL_client_hello_get1_extensions_present"
	"SSL_client_hello_isv2"
	"SSL_client_version"
	"SSL_config"
	"SSL_connect"
	"SSL_ct_is_enabled"
	"SSL_ctrl"
	"SSL_dane_clear_flags"
	"SSL_dane_enable"
	"SSL_dane_set_flags"
	"SSL_dane_tlsa_add"
	"SSL_disable_ct"
	"SSL_do_handshake"
	"SSL_dup"
	"SSL_enable_ct"
	"SSL_export_keying_material"
	"SSL_extension_supported"
	"SSL_free"
	"SSL_free_buffers"
	"SSL_get0_CA_list"
	"SSL_get0_alpn_selected"
	"SSL_get0_chain_certs"
	"SSL_get0_dane_authority"
	"SSL_get0_dane_tlsa"
	"SSL_get0_next_proto_negotiated"
	"SSL_get0_param"
	"SSL_get0_peer_CA_list"
	"SSL_get0_peer_scts"
	"SSL_get0_peername"
	"SSL_get0_security_ex_data"
	"SSL_get0_session"
	"SSL_get0_verified_chain"
	"SSL_get1_curves"
	"SSL_get1_groups"
	"SSL_get1_session"
	"SSL_get1_supported_ciphers"
	"SSL_get_SSL_CTX"
	"SSL_get_all_async_fds"
	"SSL_get_changed_async_fds"
	"SSL_get_cipher"
	"SSL_get_cipher_bits"
	"SSL_get_cipher_list"
	"SSL_get_cipher_name"
	"SSL_get_cipher_version"
	"SSL_get_ciphers"
	"SSL_get_client_CA_list"
	"SSL_get_client_ciphers"
	"SSL_get_client_random"
	"SSL_get_current_cipher"
	"SSL_get_default_passwd_cb"
	"SSL_get_default_passwd_cb_userdata"
	"SSL_get_default_timeout"
	"SSL_get_early_data_status"
	"SSL_get_error"
	"SSL_get_ex_data"
	"SSL_get_ex_data_X509_STORE_CTX_idx"
	"SSL_get_extms_support"
	"SSL_get_fd"
	"SSL_get_info_callback"
	"SSL_get_key_update_type"
	"SSL_get_max_cert_list"
	"SSL_get_max_early_data"
	"SSL_get_max_proto_version"
	"SSL_get_min_proto_version"
	"SSL_get_mode"
	"SSL_get_options"
	"SSL_get_peer_cert_chain"
	"SSL_get_peer_certificate"
	"SSL_get_peer_signature_nid"
	"SSL_get_peer_signature_type_nid"
	"SSL_get_pending_cipher"
	"SSL_get_psk_identity"
	"SSL_get_psk_identity_hint"
	"SSL_get_quiet_shutdown"
	"SSL_get_rbio"
	"SSL_get_read_ahead"
	"SSL_get_record_padding_callback_arg"
	"SSL_get_rfd"
	"SSL_get_secure_renegotiation_support"
	"SSL_get_security_callback"
	"SSL_get_security_level"
	"SSL_get_selected_srtp_profile"
	"SSL_get_server_random"
	"SSL_get_server_tmp_key"
	"SSL_get_servername"
	"SSL_get_servername_type"
	"SSL_get_session"
	"SSL_get_shared_curve"
	"SSL_get_shared_group"
	"SSL_get_shared_sigalgs"
	"SSL_get_shutdown"
	"SSL_get_sigalgs"
	"SSL_get_srtp_profiles"
	"SSL_get_ssl_method"
	"SSL_get_state"
	"SSL_get_time"
	"SSL_get_timeout"
	"SSL_get_tlsext_status_ocsp_resp"
	"SSL_get_tlsext_status_type"
	"SSL_get_verify_callback"
	"SSL_get_verify_depth"
	"SSL_get_verify_mode"
	"SSL_get_verify_result"
	"SSL_get_version"
	"SSL_get_wbio"
	"SSL_get_wfd"
	"SSL_has_matching_session_id"
	"SSL_has_pending"
	"SSL_in_accept_init"
	"SSL_in_before"
	"SSL_in_connect_init"
	"SSL_in_init"
	"SSL_is_dtls"
	"SSL_is_init_finished"
	"SSL_is_server"
	"SSL_key_update"
	"SSL_library_init"
	"SSL_load_client_CA_file"
	"SSL_new"
	"SSL_peek"
	"SSL_peek_ex"
	"SSL_pending"
	"SSL_psk_client_cb_func"
	"SSL_psk_find_session_cb_func"
	"SSL_psk_server_cb_func"
	"SSL_psk_use_session_cb_func"
	"SSL_read"
	"SSL_read_early_data"
	"SSL_read_ex"
	"SSL_renegotiate"
	"SSL_renegotiate_abbreviated"
	"SSL_renegotiate_pending"
	"SSL_rstate_string"
	"SSL_rstate_string_long"
	"SSL_select_current_cert"
	"SSL_select_next_proto"
	"SSL_session_reused"
	"SSL_set0_CA_list"
	"SSL_set0_chain"
	"SSL_set0_chain_cert_store"
	"SSL_set0_rbio"
	"SSL_set0_security_ex_data"
	"SSL_set0_verify_cert_store"
	"SSL_set0_wbio"
	"SSL_set1_chain"
	"SSL_set1_chain_cert_store"
	"SSL_set1_client_sigalgs"
	"SSL_set1_client_sigalgs_list"
	"SSL_set1_curves"
	"SSL_set1_curves_list"
	"SSL_set1_groups"
	"SSL_set1_groups_list"
	"SSL_set1_host"
	"SSL_set1_param"
	"SSL_set1_sigalgs"
	"SSL_set1_sigalgs_list"
	"SSL_set1_verify_cert_store"
	"SSL_set_accept_state"
	"SSL_set_alpn_protos"
	"SSL_set_bio"
	"SSL_set_block_padding"
	"SSL_set_cert_cb"
	"SSL_set_cipher_list"
	"SSL_set_client_CA_list"
	"SSL_set_connect_state"
	"SSL_set_ct_validation_callback"
	"SSL_set_current_cert"
	"SSL_set_default_passwd_cb"
	"SSL_set_default_passwd_cb_userdata"
	"SSL_set_default_read_buffer_len"
	"SSL_set_ex_data"
	"SSL_set_fd"
	"SSL_set_generate_session_id"
	"SSL_set_hostflags"
	"SSL_set_info_callback"
	"SSL_set_max_cert_list"
	"SSL_set_max_early_data"
	"SSL_set_max_pipelines"
	"SSL_set_max_proto_version"
	"SSL_set_max_send_fragment"
	"SSL_set_min_proto_version"
	"SSL_set_mode"
	"SSL_set_msg_callback"
	"SSL_set_msg_callback_arg"
	"SSL_set_options"
	"SSL_set_psk_client_callback"
	"SSL_set_psk_find_session_callback"
	"SSL_set_psk_server_callback"
	"SSL_set_psk_use_session_callback"
	"SSL_set_quiet_shutdown"
	"SSL_set_read_ahead"
	"SSL_set_record_padding_callback"
	"SSL_set_record_padding_callback_arg"
	"SSL_set_rfd"
	"SSL_set_security_callback"
	"SSL_set_security_level"
	"SSL_set_session"
	"SSL_set_session_id_context"
	"SSL_set_shutdown"
	"SSL_set_split_send_fragment"
	"SSL_set_ssl_method"
	"SSL_set_time"
	"SSL_set_timeout"
	"SSL_set_tlsext_host_name"
	"SSL_set_tlsext_max_fragment_length"
	"SSL_set_tlsext_status_ocsp_resp"
	"SSL_set_tlsext_status_type"
	"SSL_set_tlsext_use_srtp"
	"SSL_set_tmp_dh"
	"SSL_set_tmp_dh_callback"
	"SSL_set_verify"
	"SSL_set_verify_depth"
	"SSL_set_verify_result"
	"SSL_set_wfd"
	"SSL_shutdown"
	"SSL_state_string"
	"SSL_state_string_long"
	"SSL_up_ref"
	"SSL_use_PrivateKey"
	"SSL_use_PrivateKey_ASN1"
	"SSL_use_PrivateKey_file"
	"SSL_use_RSAPrivateKey"
	"SSL_use_RSAPrivateKey_ASN1"
	"SSL_use_RSAPrivateKey_file"
	"SSL_use_certificate"
	"SSL_use_certificate_ASN1"
	"SSL_use_certificate_chain_file"
	"SSL_use_certificate_file"
	"SSL_use_psk_identity_hint"
	"SSL_verify_cb"
	"SSL_version"
	"SSL_waiting_for_async"
	"SSL_want"
	"SSL_want_async"
	"SSL_want_async_job"
	"SSL_want_client_hello_cb"
	"SSL_want_nothing"
	"SSL_want_read"
	"SSL_want_write"
	"SSL_want_x509_lookup"
	"SSL_write"
	"SSL_write_early_data"
	"SSL_write_ex"
	"SSLv23_client_method"
	"SSLv23_method"
	"SSLv23_server_method"
	"SSLv3_client_method"
	"SSLv3_method"
	"SSLv3_server_method"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/symmetric/block-cipher/SEED", "encryption_api_usage":"call", "language":"all"}]
	"EVP_seed_cbc"
	"EVP_seed_cfb"
	"EVP_seed_ecb"
	"EVP_seed_ofb"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/symmetric/block-cipher/SM4", "encryption_api_usage":"call", "language":"all"}]
	"EVP_sm4_cbc"
	"EVP_sm4_cfb"
	"EVP_sm4_ctr"
	"EVP_sm4_ecb"
	"EVP_sm4_ofb"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/hash/Whirlpool", "encryption_api_usage":"call", "language":"all"}]
	"EVP_whirlpool"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/symmetric/block-cipher/AES", "encryption_api_usage":"call", "language":"all"}]
	"EVP_aes_128_cbc"
	"EVP_aes_128_ccm"
	"EVP_aes_128_cfb"
	"EVP_aes_128_ecb"
	"EVP_aes_128_gcm"
	"EVP_aes_128_ofb"
	"EVP_aes_192_cbc"
	"EVP_aes_192_ccm"
	"EVP_aes_192_cfb"
	"EVP_aes_192_ecb"
	"EVP_aes_192_gcm"
	"EVP_aes_192_ofb"
	"EVP_aes_256_cbc"
	"EVP_aes_256_ccm"
	"EVP_aes_256_cfb"
	"EVP_aes_256_ecb"
	"EVP_aes_256_gcm"
	"EVP_aes_256_ofb"
	"EVP_aes"
	"EVP_aes_128_cbc_hmac_sha1"
	"EVP_aes_128_cbc_hmac_sha256"
	"EVP_aes_128_cfb1"
	"EVP_aes_128_cfb8"
	"EVP_aes_128_ctr"
	"EVP_aes_128_ocb"
	"EVP_aes_128_wrap"
	"EVP_aes_128_wrap_pad"
	"EVP_aes_128_xts"
	"EVP_aes_192_cfb1"
	"EVP_aes_192_cfb8"
	"EVP_aes_192_ctr"
	"EVP_aes_192_ocb"
	"EVP_aes_192_wrap"
	"EVP_aes_192_wrap_pad"
	"EVP_aes_256_cbc_hmac_sha1"
	"EVP_aes_256_cbc_hmac_sha256"
	"EVP_aes_256_cfb1"
	"EVP_aes_256_cfb8"
	"EVP_aes_256_ctr"
	"EVP_aes_256_ocb"
	"EVP_aes_256_wrap"
	"EVP_aes_256_wrap_pad"
	"EVP_aes_256_xts"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/symmetric/block-cipher/ARIA", "encryption_api_usage":"call", "language":"all"}]
	"EVP_aria"
	"EVP_aria_128_cbc"
	"EVP_aria_128_ccm"
	"EVP_aria_128_cfb"
	"EVP_aria_128_cfb1"
	"EVP_aria_128_cfb8"
	"EVP_aria_128_ctr"
	"EVP_aria_128_ecb"
	"EVP_aria_128_gcm"
	"EVP_aria_128_ofb"
	"EVP_aria_192_cbc"
	"EVP_aria_192_ccm"
	"EVP_aria_192_cfb"
	"EVP_aria_192_cfb1"
	"EVP_aria_192_cfb8"
	"EVP_aria_192_ctr"
	"EVP_aria_192_ecb"
	"EVP_aria_192_gcm"
	"EVP_aria_192_ofb"
	"EVP_aria_256_cbc"
	"EVP_aria_256_ccm"
	"EVP_aria_256_cfb"
	"EVP_aria_256_cfb1"
	"EVP_aria_256_cfb8"
	"EVP_aria_256_ctr"
	"EVP_aria_256_ecb"
	"EVP_aria_256_gcm"
	"EVP_aria_256_ofb"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/symmetric/block-cipher/Blowfish", "encryption_api_usage":"call", "language":"all"}]
	"BF_cbc_encrypt"
	"BF_cfb64_encrypt"
	"BF_decrypt"
	"BF_ecb_encrypt"
	"BF_encrypt"
	"BF_ofb64_encrypt"
	"BF_options"
	"BF_set_key"
	"EVP_bf_cbc"
	"EVP_bf_cfb"
	"EVP_bf_ecb"
	"EVP_bf_ofb"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/symmetric/block-cipher/DES", "encryption_api_usage":"call", "language":"all"}]
	"des_modes"
	"DES_cbc_cksum"
	"DES_cfb64_encrypt"
	"DES_cfb_encrypt"
	"DES_crypt"
	"DES_ecb2_encrypt"
	"DES_ecb3_encrypt"
	"DES_ecb_encrypt"
	"DES_ede2_cbc_encrypt"
	"DES_ede2_cfb64_encrypt"
	"DES_ede2_ofb64_encrypt"
	"DES_ede3_cbc_encrypt"
	"DES_ede3_cfb64_encrypt"
	"DES_ede3_ofb64_encrypt"
	"DES_fcrypt"
	"DES_is_weak_key"
	"DES_key_sched"
	"DES_ncbc_encrypt"
	"DES_ofb64_encrypt"
	"DES_ofb_encrypt"
	"DES_pcbc_encrypt"
	"DES_quad_cksum"
	"DES_random_key"
	"DES_set_key"
	"DES_set_key_checked"
	"DES_set_key_unchecked"
	"DES_set_odd_parity"
	"DES_string_to_2keys"
	"DES_string_to_key"
	"DES_xcbc_encrypt"
	"EVP_des_cbc"
	"EVP_des_cfb"
	"EVP_des_ecb"
	"EVP_des_ede"
	"EVP_des_ede3"
	"EVP_des_ede3_cbc"
	"EVP_des_ede3_cfb"
	"EVP_des_ede3_ofb"
	"EVP_des_ede_cbc"
	"EVP_des_ede_cfb"
	"EVP_des_ede_ofb"
	"EVP_des_ofb"
	"EVP_desx_cbc"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/symmetric/block-cipher/RC5", "encryption_api_usage":"call", "language":"all"}]
	"EVP_rc5_32_12_16_cbc"
	"EVP_rc5_32_12_16_cfb"
	"EVP_rc5_32_12_16_ecb"
	"EVP_rc5_32_12_16_ofb"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/asymmetric/DiffieHellman", "encryption_api_usage":"call", "language":"all"}]
	"DH_OpenSSL"
	"DH_bits"
	"DH_check"
	"DH_clear_flags"
	"DH_compute_key"
	"DH_free"
	"DH_generate_key"
	"DH_generate_parameters"
	"DH_generate_parameters_ex"
	"DH_get0_engine"
	"DH_get0_key"
	"DH_get0_pqg"
	"DH_get_1024_160"
	"DH_get_2048_224"
	"DH_get_2048_256"
	"DH_get_default_method"
	"DH_get_ex_data"
	"DH_get_ex_new_index"
	"DH_get_length"
	"DH_meth_dup"
	"DH_meth_free"
	"DH_meth_get0_app_data"
	"DH_meth_get0_name"
	"DH_meth_get_bn_mod_exp"
	"DH_meth_get_compute_key"
	"DH_meth_get_finish"
	"DH_meth_get_flags"
	"DH_meth_get_generate_key"
	"DH_meth_get_generate_params"
	"DH_meth_get_init"
	"DH_meth_new"
	"DH_meth_set0_app_data"
	"DH_meth_set1_name"
	"DH_meth_set_bn_mod_exp"
	"DH_meth_set_compute_key"
	"DH_meth_set_finish"
	"DH_meth_set_flags"
	"DH_meth_set_generate_key"
	"DH_meth_set_generate_params"
	"DH_meth_set_init"
	"DH_new"
	"DH_new_method"
	"DH_set0_key"
	"DH_set0_pqg"
	"DH_set_default_method"
	"DH_set_ex_data"
	"DH_set_flags"
	"DH_set_length"
	"DH_set_method"
	"DH_size"
	"DH_test_flags"
	"DHparams_print"
	"DHparams_print_fp"
	"d2i_DHparams"
	"d2i_DHxparams"
	"i2d_DHparams"
	"i2d_DHxparams"
	"ENGINE_get_DH"
	"ENGINE_get_default_DH"
	"ENGINE_register_DH"
	"ENGINE_register_all_DH"
	"ENGINE_set_DH"
	"ENGINE_set_default_DH"
	"ENGINE_unregister_DH"
	"EVP_PKEY_CTX_set_dh_paramgen_generator"
	"EVP_PKEY_CTX_set_dh_paramgen_prime_len"
	"EVP_PKEY_assign_DH"
	"EVP_PKEY_get0_DH"
	"EVP_PKEY_get1_DH"
	"EVP_PKEY_set1_DH"
	"PEM_read_bio_DHparams"
	"PEM_write_DHparams"
	"PEM_write_DHxparams"
	"PEM_write_bio_DHparams"
	"PEM_write_bio_DHxparams"
	"DH_check_ex"
	"DH_check_params"
	"DH_check_params_ex"
	"DH_check_pub_key_ex"
	"DH_get_nid"
	"DH_new_by_nid"
	"DH_security_bits"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/asymmetric/DSA", "encryption_api_usage":"call", "language":"all"}]
	"DSA_OpenSSL"
	"DSA_SIG_free"
	"DSA_SIG_get0"
	"DSA_SIG_new"
	"DSA_SIG_set0"
	"DSA_bits"
	"DSA_clear_flags"
	"DSA_do_sign"
	"DSA_do_verify"
	"DSA_dup_DH"
	"DSA_free"
	"DSA_generate_key"
	"DSA_generate_parameters"
	"DSA_generate_parameters_ex"
	"DSA_get0_engine"
	"DSA_get0_key"
	"DSA_get0_pqg"
	"DSA_get_default_method"
	"DSA_get_ex_data"
	"DSA_get_ex_new_index"
	"DSA_meth_dup"
	"DSA_meth_free"
	"DSA_meth_get0_app_data"
	"DSA_meth_get0_name"
	"DSA_meth_get_bn_mod_exp"
	"DSA_meth_get_finish"
	"DSA_meth_get_flags"
	"DSA_meth_get_init"
	"DSA_meth_get_keygen"
	"DSA_meth_get_mod_exp"
	"DSA_meth_get_paramgen"
	"DSA_meth_get_sign"
	"DSA_meth_get_sign_setup"
	"DSA_meth_get_verify"
	"DSA_meth_new"
	"DSA_meth_set0_app_data"
	"DSA_meth_set1_name"
	"DSA_meth_set_bn_mod_exp"
	"DSA_meth_set_finish"
	"DSA_meth_set_flags"
	"DSA_meth_set_init"
	"DSA_meth_set_keygen"
	"DSA_meth_set_mod_exp"
	"DSA_meth_set_paramgen"
	"DSA_meth_set_sign"
	"DSA_meth_set_sign_setup"
	"DSA_meth_set_verify"
	"DSA_new"
	"DSA_new_method"
	"DSA_print"
	"DSA_print_fp"
	"DSA_set0_key"
	"DSA_set0_pqg"
	"DSA_set_default_method"
	"DSA_set_ex_data"
	"DSA_set_flags"
	"DSA_set_method"
	"DSA_sign"
	"DSA_sign_setup"
	"DSA_size"
	"DSA_test_flags"
	"DSA_verify"
	"DSAparams_dup"
	"DSAparams_print"
	"DSAparams_print_fp"
	"d2i_DSAPrivateKey"
	"d2i_DSAPrivateKey_bio"
	"d2i_DSAPrivateKey_fp"
	"d2i_DSAPublicKey"
	"d2i_DSA_PUBKEY_bio"
	"d2i_DSA_PUBKEY_fp"
	"d2i_DSA_SIG"
	"d2i_DSAparams"
	"i2d_DSAPrivateKey"
	"i2d_DSAPrivateKey_bio"
	"i2d_DSAPrivateKey_fp"
	"i2d_DSAPublicKey"
	"i2d_DSA_PUBKEY_bio"
	"i2d_DSA_PUBKEY_fp"
	"i2d_DSA_SIG"
	"i2d_DSAparams"
	"ENGINE_get_DSA"
	"ENGINE_get_default_DSA"
	"ENGINE_register_DSA"
	"ENGINE_register_all_DSA"
	"ENGINE_set_DSA"
	"ENGINE_set_default_DSA"
	"ENGINE_unregister_DSA"
	"EVP_PKEY_CTX_set_dsa_paramgen_bits"
	"EVP_PKEY_assign_DSA"
	"EVP_PKEY_get0_DSA"
	"EVP_PKEY_get1_DSA"
	"EVP_PKEY_set1_DSA"
	"PEM_read_bio_DSAPrivateKey"
	"PEM_read_bio_DSA_PUBKEY"
	"PEM_read_bio_DSAparams"
	"PEM_write_DSAPrivateKey"
	"PEM_write_DSA_PUBKEY"
	"PEM_write_DSAparams"
	"PEM_write_bio_DSAPrivateKey"
	"PEM_write_bio_DSA_PUBKEY"
	"PEM_write_bio_DSAparams"
	"DSA_security_bits"
	"d2i_DSA_PUBKEY"
	"i2d_DSA_PUBKEY"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/asymmetric/ECC", "encryption_api_usage":"call", "language":"all"}]
	"ECDH_get_ex_data"
	"ECDH_get_ex_new_index"
	"ECDH_set_ex_data"
	"ECDSA_SIG_free"
	"ECDSA_SIG_get0"
	"ECDSA_SIG_new"
	"ECDSA_SIG_set0"
	"ECDSA_do_sign"
	"ECDSA_do_sign_ex"
	"ECDSA_do_verify"
	"ECDSA_get_ex_data"
	"ECDSA_get_ex_new_index"
	"ECDSA_set_ex_data"
	"ECDSA_sign"
	"ECDSA_sign_ex"
	"ECDSA_sign_setup"
	"ECDSA_size"
	"ECDSA_verify"
	"ECPARAMETERS_free"
	"ECPARAMETERS_new"
	"ECPKPARAMETERS_free"
	"ECPKPARAMETERS_new"
	"ECPKParameters_print"
	"ECPKParameters_print_fp"
	"EC_GF2m_simple_method"
	"EC_GFp_mont_method"
	"EC_GFp_nist_method"
	"EC_GFp_nistp224_method"
	"EC_GFp_nistp256_method"
	"EC_GFp_nistp521_method"
	"EC_GFp_simple_method"
	"EC_GROUP_check"
	"EC_GROUP_check_discriminant"
	"EC_GROUP_clear_free"
	"EC_GROUP_cmp"
	"EC_GROUP_copy"
	"EC_GROUP_dup"
	"EC_GROUP_free"
	"EC_GROUP_get0_cofactor"
	"EC_GROUP_get0_generator"
	"EC_GROUP_get0_order"
	"EC_GROUP_get0_seed"
	"EC_GROUP_get_asn1_flag"
	"EC_GROUP_get_basis_type"
	"EC_GROUP_get_cofactor"
	"EC_GROUP_get_curve_GF2m"
	"EC_GROUP_get_curve_GFp"
	"EC_GROUP_get_curve_name"
	"EC_GROUP_get_degree"
	"EC_GROUP_get_ecparameters"
	"EC_GROUP_get_ecpkparameters"
	"EC_GROUP_get_order"
	"EC_GROUP_get_pentanomial_basis"
	"EC_GROUP_get_point_conversion_form"
	"EC_GROUP_get_seed_len"
	"EC_GROUP_get_trinomial_basis"
	"EC_GROUP_have_precompute_mult"
	"EC_GROUP_method_of"
	"EC_GROUP_new"
	"EC_GROUP_new_by_curve_name"
	"EC_GROUP_new_curve_GF2m"
	"EC_GROUP_new_curve_GFp"
	"EC_GROUP_new_from_ecparameters"
	"EC_GROUP_new_from_ecpkparameters"
	"EC_GROUP_order_bits"
	"EC_GROUP_precompute_mult"
	"EC_GROUP_set_asn1_flag"
	"EC_GROUP_set_curve_GF2m"
	"EC_GROUP_set_curve_GFp"
	"EC_GROUP_set_curve_name"
	"EC_GROUP_set_generator"
	"EC_GROUP_set_point_conversion_form"
	"EC_GROUP_set_seed"
	"EC_KEY_check_key"
	"EC_KEY_clear_flags"
	"EC_KEY_copy"
	"EC_KEY_dup"
	"EC_KEY_free"
	"EC_KEY_generate_key"
	"EC_KEY_get0_group"
	"EC_KEY_get0_private_key"
	"EC_KEY_get0_public_key"
	"EC_KEY_get_conv_form"
	"EC_KEY_get_enc_flags"
	"EC_KEY_get_flags"
	"EC_KEY_get_method"
	"EC_KEY_key2buf"
	"EC_KEY_new"
	"EC_KEY_new_by_curve_name"
	"EC_KEY_oct2key"
	"EC_KEY_oct2priv"
	"EC_KEY_precompute_mult"
	"EC_KEY_priv2buf"
	"EC_KEY_priv2oct"
	"EC_KEY_set_asn1_flag"
	"EC_KEY_set_conv_form"
	"EC_KEY_set_enc_flags"
	"EC_KEY_set_flags"
	"EC_KEY_set_group"
	"EC_KEY_set_method"
	"EC_KEY_set_private_key"
	"EC_KEY_set_public_key"
	"EC_KEY_set_public_key_affine_coordinates"
	"EC_KEY_up_ref"
	"EC_METHOD_get_field_type"
	"EC_POINT_add"
	"EC_POINT_bn2point"
	"EC_POINT_clear_free"
	"EC_POINT_cmp"
	"EC_POINT_copy"
	"EC_POINT_dbl"
	"EC_POINT_dup"
	"EC_POINT_free"
	"EC_POINT_get_Jprojective_coordinates_GFp"
	"EC_POINT_get_affine_coordinates_GF2m"
	"EC_POINT_get_affine_coordinates_GFp"
	"EC_POINT_hex2point"
	"EC_POINT_invert"
	"EC_POINT_is_at_infinity"
	"EC_POINT_is_on_curve"
	"EC_POINT_make_affine"
	"EC_POINT_method_of"
	"EC_POINT_mul"
	"EC_POINT_new"
	"EC_POINT_oct2point"
	"EC_POINT_point2bn"
	"EC_POINT_point2buf"
	"EC_POINT_point2hex"
	"EC_POINT_point2oct"
	"EC_POINT_set_Jprojective_coordinates_GFp"
	"EC_POINT_set_affine_coordinates_GF2m"
	"EC_POINT_set_affine_coordinates_GFp"
	"EC_POINT_set_compressed_coordinates_GF2m"
	"EC_POINT_set_compressed_coordinates_GFp"
	"EC_POINT_set_to_infinity"
	"EC_POINTs_make_affine"
	"EC_POINTs_mul"
	"EC_get_builtin_curves"
	"d2i_ECDSA_SIG"
	"d2i_ECPKParameters"
	"d2i_ECParameters"
	"d2i_ECPrivateKey"
	"d2i_ECPrivateKey_bio"
	"d2i_ECPrivateKey_fp"
	"d2i_EC_PUBKEY"
	"d2i_EC_PUBKEY_bio"
	"d2i_EC_PUBKEY_fp"
	"i2d_ECDSA_SIG"
	"i2d_ECPKParameters"
	"i2d_ECParameters"
	"i2d_ECPrivateKey"
	"i2d_ECPrivateKey_bio"
	"i2d_ECPrivateKey_fp"
	"i2d_EC_PUBKEY"
	"i2d_EC_PUBKEY_bio"
	"i2d_EC_PUBKEY_fp"
	"ENGINE_get_ECDH"
	"ENGINE_get_ECDSA"
	"ENGINE_get_default_ECDH"
	"ENGINE_get_default_ECDSA"
	"ENGINE_register_ECDH"
	"ENGINE_register_ECDSA"
	"ENGINE_register_all_ECDH"
	"ENGINE_register_all_ECDSA"
	"ENGINE_set_ECDH"
	"ENGINE_set_ECDSA"
	"ENGINE_set_default_ECDH"
	"ENGINE_set_default_ECDSA"
	"ENGINE_unregister_ECDH"
	"ENGINE_unregister_ECDSA"
	"EVP_PKEY_assign_EC_KEY"
	"EVP_PKEY_get0_EC_KEY"
	"EVP_PKEY_get1_EC_KEY"
	"EVP_PKEY_set1_EC_KEY"
	"PEM_read_bio_ECPKParameters"
	"PEM_read_bio_EC_PUBKEY"
	"PEM_write_ECPKParameters"
	"PEM_write_ECPrivateKey"
	"PEM_write_EC_PUBKEY"
	"PEM_write_bio_ECPKParameters"
	"PEM_write_bio_ECPrivateKey"
	"PEM_write_bio_EC_PUBKEY"
	"EC_KEY_get0_engine"
	"EC_KEY_get_ex_data"
	"EC_KEY_get_ex_new_index"
	"EC_KEY_set_ex_data"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/hash/HMAC", "encryption_api_usage":"call", "language":"all"}]
	"HMAC_CTX_copy"
	"HMAC_CTX_free"
	"HMAC_CTX_get_md"
	"HMAC_CTX_new"
	"HMAC_CTX_reset"
	"HMAC_CTX_set_flags"
	"HMAC_Final"
	"HMAC_Init"
	"HMAC_Init_ex"
	"HMAC_Update"
	"EVP_PKEY_get0_hmac"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/hash/MD2", "encryption_api_usage":"call", "language":"all"}]
	"MD2_Final"
	"MD2_Init"
	"MD2_Update"
	"EVP_md2"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/hash/MD4", "encryption_api_usage":"call", "language":"all"}]
	"MD4_Final"
	"MD4_Init"
	"MD4_Update"
	"EVP_md4"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/hash/MD5", "encryption_api_usage":"call", "language":"all"}]
	"MD5_Final"
	"MD5_Init"
	"MD5_Update"
	"EVP_md5"
	"EVP_MD"
	"EVP_md_null"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/hash/MDC-2", "encryption_api_usage":"call", "language":"all"}]
	"EVP_mdc2"
	"MDC2_Final"
	"MDC2_Init"
	"MDC2_Update"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/symmetric/stream-cipher/ChaCha20", "encryption_api_usage":"call", "language":"all"}]
	"EVP_chacha20"
	"EVP_chacha20_poly1305"

[{"encryption_library":"OpenSSL", "evidence_type":"protocol/PKCS", "encryption_api_usage":"call", "language":"all"}]
	"PKCS12_BAGS_free"
	"PKCS12_BAGS_new"
	"PKCS12_MAC_DATA_free"
	"PKCS12_MAC_DATA_new"
	"PKCS12_SAFEBAG_free"
	"PKCS12_SAFEBAG_new"
	"PKCS12_create"
	"PKCS12_free"
	"PKCS12_new"
	"PKCS12_newpass"
	"PKCS12_parse"
	"PKCS5_PBKDF2_HMAC_SHA1"
	"PKCS7_DIGEST_free"
	"PKCS7_DIGEST_new"
	"PKCS7_ENCRYPT_free"
	"PKCS7_ENCRYPT_new"
	"PKCS7_ENC_CONTENT_free"
	"PKCS7_ENC_CONTENT_new"
	"PKCS7_ENVELOPE_free"
	"PKCS7_ENVELOPE_new"
	"PKCS7_ISSUER_AND_SERIAL_free"
	"PKCS7_ISSUER_AND_SERIAL_new"
	"PKCS7_RECIP_INFO_free"
	"PKCS7_RECIP_INFO_new"
	"PKCS7_SIGNED_free"
	"PKCS7_SIGNED_new"
	"PKCS7_SIGNER_INFO_free"
	"PKCS7_SIGNER_INFO_new"
	"PKCS7_SIGN_ENVELOPE_free"
	"PKCS7_SIGN_ENVELOPE_new"
	"PKCS7_decrypt"
	"PKCS7_dup"
	"PKCS7_encrypt"
	"PKCS7_free"
	"PKCS7_get0_signers"
	"PKCS7_new"
	"PKCS7_print_ctx"
	"PKCS7_sign"
	"PKCS7_sign_add_signer"
	"PKCS7_verify"
	"PKCS8_PRIV_KEY_INFO_free"
	"PKCS8_PRIV_KEY_INFO_new"
	"PKEY_USAGE_PERIOD_free"
	"PKEY_USAGE_PERIOD_new"
	"X509V3_EXT_d2i"
	"X509V3_EXT_i2d"
	"X509V3_add1_i2d"
	"X509V3_get_d2i"
	"X509_ALGOR_cmp"
	"X509_ALGOR_dup"
	"X509_ALGOR_free"
	"X509_ALGOR_get0"
	"X509_ALGOR_new"
	"X509_ALGOR_set0"
	"X509_ALGOR_set_md"
	"X509_ATTRIBUTE_dup"
	"X509_ATTRIBUTE_free"
	"X509_ATTRIBUTE_new"
	"X509_CERT_AUX_free"
	"X509_CERT_AUX_new"
	"X509_CINF_free"
	"X509_CINF_new"
	"X509_CRL_INFO_free"
	"X509_CRL_INFO_new"
	"X509_CRL_METHOD_free"
	"X509_CRL_METHOD_new"
	"X509_CRL_add0_revoked"
	"X509_CRL_add1_ext_i2d"
	"X509_CRL_add_ext"
	"X509_CRL_delete_ext"
	"X509_CRL_dup"
	"X509_CRL_free"
	"X509_CRL_get0_by_cert"
	"X509_CRL_get0_by_serial"
	"X509_CRL_get0_extensions"
	"X509_CRL_get0_lastUpdate"
	"X509_CRL_get0_nextUpdate"
	"X509_CRL_get0_signature"
	"X509_CRL_get_REVOKED"
	"X509_CRL_get_ext"
	"X509_CRL_get_ext_by_NID"
	"X509_CRL_get_ext_by_OBJ"
	"X509_CRL_get_ext_by_critical"
	"X509_CRL_get_ext_count"
	"X509_CRL_get_ext_d2i"
	"X509_CRL_get_issuer"
	"X509_CRL_get_signature_nid"
	"X509_CRL_get_version"
	"X509_CRL_new"
	"X509_CRL_set1_lastUpdate"
	"X509_CRL_set1_nextUpdate"
	"X509_CRL_set_issuer_name"
	"X509_CRL_set_version"
	"X509_CRL_sign"
	"X509_CRL_sign_ctx"
	"X509_CRL_sort"
	"X509_CRL_verify"
	"X509_EXTENSION_create_by_NID"
	"X509_EXTENSION_create_by_OBJ"
	"X509_EXTENSION_dup"
	"X509_EXTENSION_free"
	"X509_EXTENSION_get_critical"
	"X509_EXTENSION_get_data"
	"X509_EXTENSION_get_object"
	"X509_EXTENSION_new"
	"X509_EXTENSION_set_critical"
	"X509_EXTENSION_set_data"
	"X509_EXTENSION_set_object"
	"X509_LOOKUP_file"
	"X509_LOOKUP_hash_dir"
	"X509_NAME_ENTRY_create_by_NID"
	"X509_NAME_ENTRY_create_by_OBJ"
	"X509_NAME_ENTRY_create_by_txt"
	"X509_NAME_ENTRY_dup"
	"X509_NAME_ENTRY_free"
	"X509_NAME_ENTRY_get_data"
	"X509_NAME_ENTRY_get_object"
	"X509_NAME_ENTRY_new"
	"X509_NAME_ENTRY_set_data"
	"X509_NAME_ENTRY_set_object"
	"X509_NAME_add_entry"
	"X509_NAME_add_entry_by_NID"
	"X509_NAME_add_entry_by_OBJ"
	"X509_NAME_add_entry_by_txt"
	"X509_NAME_delete_entry"
	"X509_NAME_dup"
	"X509_NAME_entry_count"
	"X509_NAME_free"
	"X509_NAME_get0_der"
	"X509_NAME_get_entry"
	"X509_NAME_get_index_by_NID"
	"X509_NAME_get_index_by_OBJ"
	"X509_NAME_get_text_by_NID"
	"X509_NAME_get_text_by_OBJ"
	"X509_NAME_new"
	"X509_NAME_oneline"
	"X509_NAME_print"
	"X509_NAME_print_ex"
	"X509_NAME_print_ex_fp"
	"X509_PUBKEY_free"
	"X509_PUBKEY_get"
	"X509_PUBKEY_get0"
	"X509_PUBKEY_get0_param"
	"X509_PUBKEY_new"
	"X509_PUBKEY_set"
	"X509_PUBKEY_set0_param"
	"X509_REQ_INFO_free"
	"X509_REQ_INFO_new"
	"X509_REQ_dup"
	"X509_REQ_free"
	"X509_REQ_get0_pubkey"
	"X509_REQ_get0_signature"
	"X509_REQ_get_X509_PUBKEY"
	"X509_REQ_get_pubkey"
	"X509_REQ_get_signature_nid"
	"X509_REQ_get_subject_name"
	"X509_REQ_get_version"
	"X509_REQ_new"
	"X509_REQ_set_pubkey"
	"X509_REQ_set_subject_name"
	"X509_REQ_set_version"
	"X509_REQ_sign"
	"X509_REQ_sign_ctx"
	"X509_REQ_verify"
	"X509_REVOKED_add1_ext_i2d"
	"X509_REVOKED_add_ext"
	"X509_REVOKED_delete_ext"
	"X509_REVOKED_dup"
	"X509_REVOKED_free"
	"X509_REVOKED_get0_extensions"
	"X509_REVOKED_get0_revocationDate"
	"X509_REVOKED_get0_serialNumber"
	"X509_REVOKED_get_ext"
	"X509_REVOKED_get_ext_by_NID"
	"X509_REVOKED_get_ext_by_OBJ"
	"X509_REVOKED_get_ext_by_critical"
	"X509_REVOKED_get_ext_count"
	"X509_REVOKED_get_ext_d2i"
	"X509_REVOKED_new"
	"X509_REVOKED_set_revocationDate"
	"X509_REVOKED_set_serialNumber"
	"X509_SIG_free"
	"X509_SIG_get0"
	"X509_SIG_getm"
	"X509_SIG_new"
	"X509_STORE_CTX_cleanup"
	"X509_STORE_CTX_free"
	"X509_STORE_CTX_get0_cert"
	"X509_STORE_CTX_get0_chain"
	"X509_STORE_CTX_get0_param"
	"X509_STORE_CTX_get0_untrusted"
	"X509_STORE_CTX_get1_chain"
	"X509_STORE_CTX_get_cert_crl"
	"X509_STORE_CTX_get_check_crl"
	"X509_STORE_CTX_get_check_issued"
	"X509_STORE_CTX_get_check_policy"
	"X509_STORE_CTX_get_check_revocation"
	"X509_STORE_CTX_get_cleanup"
	"X509_STORE_CTX_get_current_cert"
	"X509_STORE_CTX_get_error"
	"X509_STORE_CTX_get_error_depth"
	"X509_STORE_CTX_get_ex_data"
	"X509_STORE_CTX_get_ex_new_index"
	"X509_STORE_CTX_get_get_crl"
	"X509_STORE_CTX_get_get_issuer"
	"X509_STORE_CTX_get_lookup_certs"
	"X509_STORE_CTX_get_lookup_crls"
	"X509_STORE_CTX_get_num_untrusted"
	"X509_STORE_CTX_get_verify"
	"X509_STORE_CTX_get_verify_cb"
	"X509_STORE_CTX_init"
	"X509_STORE_CTX_new"
	"X509_STORE_CTX_set0_crls"
	"X509_STORE_CTX_set0_param"
	"X509_STORE_CTX_set0_trusted_stack"
	"X509_STORE_CTX_set0_untrusted"
	"X509_STORE_CTX_set0_verified_chain"
	"X509_STORE_CTX_set_cert"
	"X509_STORE_CTX_set_current_cert"
	"X509_STORE_CTX_set_default"
	"X509_STORE_CTX_set_error"
	"X509_STORE_CTX_set_error_depth"
	"X509_STORE_CTX_set_ex_data"
	"X509_STORE_CTX_set_verify"
	"X509_STORE_CTX_set_verify_cb"
	"X509_STORE_free"
	"X509_STORE_get0_objects"
	"X509_STORE_get0_param"
	"X509_STORE_get_cert_crl"
	"X509_STORE_get_check_crl"
	"X509_STORE_get_check_issued"
	"X509_STORE_get_check_policy"
	"X509_STORE_get_check_revocation"
	"X509_STORE_get_cleanup"
	"X509_STORE_get_ex_data"
	"X509_STORE_get_ex_new_index"
	"X509_STORE_get_get_crl"
	"X509_STORE_get_get_issuer"
	"X509_STORE_get_lookup_certs"
	"X509_STORE_get_lookup_crls"
	"X509_STORE_get_verify_cb"
	"X509_STORE_lock"
	"X509_STORE_new"
	"X509_STORE_set1_param"
	"X509_STORE_set_cert_crl"
	"X509_STORE_set_check_crl"
	"X509_STORE_set_check_issued"
	"X509_STORE_set_check_policy"
	"X509_STORE_set_check_revocation"
	"X509_STORE_set_cleanup"
	"X509_STORE_set_ex_data"
	"X509_STORE_set_get_crl"
	"X509_STORE_set_get_issuer"
	"X509_STORE_set_lookup_certs"
	"X509_STORE_set_lookup_crls"
	"X509_STORE_set_lookup_crls_cb"
	"X509_STORE_set_verify"
	"X509_STORE_set_verify_cb"
	"X509_STORE_set_verify_cb_func"
	"X509_STORE_set_verify_func"
	"X509_STORE_unlock"
	"X509_STORE_up_ref"
	"X509_VAL_free"
	"X509_VAL_new"
	"X509_VERIFY_PARAM_add0_policy"
	"X509_VERIFY_PARAM_add1_host"
	"X509_VERIFY_PARAM_clear_flags"
	"X509_VERIFY_PARAM_get0_peername"
	"X509_VERIFY_PARAM_get_auth_level"
	"X509_VERIFY_PARAM_get_depth"
	"X509_VERIFY_PARAM_get_flags"
	"X509_VERIFY_PARAM_set1_email"
	"X509_VERIFY_PARAM_set1_host"
	"X509_VERIFY_PARAM_set1_ip"
	"X509_VERIFY_PARAM_set1_ip_asc"
	"X509_VERIFY_PARAM_set1_policies"
	"X509_VERIFY_PARAM_set_auth_level"
	"X509_VERIFY_PARAM_set_depth"
	"X509_VERIFY_PARAM_set_flags"
	"X509_VERIFY_PARAM_set_hostflags"
	"X509_VERIFY_PARAM_set_purpose"
	"X509_VERIFY_PARAM_set_time"
	"X509_VERIFY_PARAM_set_trust"
	"X509_add1_ext_i2d"
	"X509_add_ext"
	"X509_chain_up_ref"
	"X509_check_ca"
	"X509_check_email"
	"X509_check_host"
	"X509_check_ip"
	"X509_check_ip_asc"
	"X509_check_issued"
	"X509_delete_ext"
	"X509_dup"
	"X509_free"
	"X509_get0_extensions"
	"X509_get0_notAfter"
	"X509_get0_notBefore"
	"X509_get0_pubkey"
	"X509_get0_serialNumber"
	"X509_get0_signature"
	"X509_get0_subject_key_id"
	"X509_get0_tbs_sigalg"
	"X509_get0_uids"
	"X509_get_X509_PUBKEY"
	"X509_get_ex_data"
	"X509_get_ex_new_index"
	"X509_get_ext"
	"X509_get_ext_by_NID"
	"X509_get_ext_by_OBJ"
	"X509_get_ext_by_critical"
	"X509_get_ext_count"
	"X509_get_ext_d2i"
	"X509_get_extended_key_usage"
	"X509_get_extension_flags"
	"X509_get_issuer_name"
	"X509_get_key_usage"
	"X509_get_notBefore"
	"X509_get_pathlen"
	"X509_get_proxy_pathlen"
	"X509_get_pubkey"
	"X509_get_serialNumber"
	"X509_get_signature_nid"
	"X509_get_subject_name"
	"X509_get_version"
	"X509_getm_notAfter"
	"X509_getm_notBefore"
	"X509_load_cert_crl_file"
	"X509_load_cert_file"
	"X509_load_crl_file"
	"X509_new"
	"X509_set1_notAfter"
	"X509_set1_notBefore"
	"X509_set_ex_data"
	"X509_set_issuer_name"
	"X509_set_proxy_flag"
	"X509_set_proxy_pathlen"
	"X509_set_pubkey"
	"X509_set_serialNumber"
	"X509_set_subject_name"
	"X509_set_version"
	"X509_sign"
	"X509_sign_ctx"
	"X509_up_ref"
	"X509_verify"
	"X509_verify_cert"
	"X509_verify_cert_error_string"
	"X509v3_add_ext"
	"X509v3_delete_ext"
	"X509v3_get_ext"
	"X509v3_get_ext_by_NID"
	"X509v3_get_ext_by_OBJ"
	"X509v3_get_ext_by_critical"
	"X509v3_get_ext_count"
	"d2i_PKCS12"
	"d2i_PKCS12_BAGS"
	"d2i_PKCS12_MAC_DATA"
	"d2i_PKCS12_SAFEBAG"
	"d2i_PKCS12_bio"
	"d2i_PKCS12_fp"
	"d2i_PKCS7"
	"d2i_PKCS7_DIGEST"
	"d2i_PKCS7_ENCRYPT"
	"d2i_PKCS7_ENC_CONTENT"
	"d2i_PKCS7_ENVELOPE"
	"d2i_PKCS7_ISSUER_AND_SERIAL"
	"d2i_PKCS7_RECIP_INFO"
	"d2i_PKCS7_SIGNED"
	"d2i_PKCS7_SIGNER_INFO"
	"d2i_PKCS7_SIGN_ENVELOPE"
	"d2i_PKCS7_bio"
	"d2i_PKCS7_fp"
	"d2i_PKCS8PrivateKey_bio"
	"d2i_PKCS8PrivateKey_fp"
	"d2i_PKCS8_PRIV_KEY_INFO"
	"d2i_PKCS8_PRIV_KEY_INFO_bio"
	"d2i_PKCS8_PRIV_KEY_INFO_fp"
	"d2i_PKCS8_bio"
	"d2i_PKCS8_fp"
	"d2i_PKEY_USAGE_PERIOD"
	"d2i_PUBKEY"
	"d2i_PUBKEY_bio"
	"d2i_PUBKEY_fp"
	"d2i_PrivateKey"
	"d2i_PrivateKey_bio"
	"d2i_PrivateKey_fp"
	"d2i_PublicKey"
	"d2i_X509"
	"d2i_X509_ALGOR"
	"d2i_X509_ALGORS"
	"d2i_X509_ATTRIBUTE"
	"d2i_X509_AUX"
	"d2i_X509_CERT_AUX"
	"d2i_X509_CINF"
	"d2i_X509_CRL"
	"d2i_X509_CRL_INFO"
	"d2i_X509_CRL_bio"
	"d2i_X509_CRL_fp"
	"d2i_X509_EXTENSION"
	"d2i_X509_EXTENSIONS"
	"d2i_X509_NAME"
	"d2i_X509_NAME_ENTRY"
	"d2i_X509_PUBKEY"
	"d2i_X509_REQ"
	"d2i_X509_REQ_INFO"
	"d2i_X509_REQ_bio"
	"d2i_X509_REQ_fp"
	"d2i_X509_REVOKED"
	"d2i_X509_SIG"
	"d2i_X509_VAL"
	"i2d_PKCS12"
	"i2d_PKCS12_BAGS"
	"i2d_PKCS12_MAC_DATA"
	"i2d_PKCS12_SAFEBAG"
	"i2d_PKCS12_bio"
	"i2d_PKCS12_fp"
	"i2d_PKCS7"
	"i2d_PKCS7_DIGEST"
	"i2d_PKCS7_ENCRYPT"
	"i2d_PKCS7_ENC_CONTENT"
	"i2d_PKCS7_ENVELOPE"
	"i2d_PKCS7_ISSUER_AND_SERIAL"
	"i2d_PKCS7_NDEF"
	"i2d_PKCS7_RECIP_INFO"
	"i2d_PKCS7_SIGNED"
	"i2d_PKCS7_SIGNER_INFO"
	"i2d_PKCS7_SIGN_ENVELOPE"
	"i2d_PKCS7_bio"
	"i2d_PKCS7_bio_stream"
	"i2d_PKCS7_fp"
	"i2d_PKCS8PrivateKeyInfo_bio"
	"i2d_PKCS8PrivateKeyInfo_fp"
	"i2d_PKCS8PrivateKey_bio"
	"i2d_PKCS8PrivateKey_fp"
	"i2d_PKCS8PrivateKey_nid_bio"
	"i2d_PKCS8PrivateKey_nid_fp"
	"i2d_PKCS8_PRIV_KEY_INFO"
	"i2d_PKCS8_PRIV_KEY_INFO_bio"
	"i2d_PKCS8_PRIV_KEY_INFO_fp"
	"i2d_PKCS8_bio"
	"i2d_PKCS8_fp"
	"i2d_PKEY_USAGE_PERIOD"
	"i2d_PUBKEY"
	"i2d_PUBKEY_bio"
	"i2d_PUBKEY_fp"
	"i2d_PrivateKey"
	"i2d_PublicKey"
	"i2d_X509"
	"i2d_X509_ALGOR"
	"i2d_X509_ALGORS"
	"i2d_X509_ATTRIBUTE"
	"i2d_X509_AUX"
	"i2d_X509_CERT_AUX"
	"i2d_X509_CINF"
	"i2d_X509_CRL"
	"i2d_X509_CRL_INFO"
	"i2d_X509_CRL_bio"
	"i2d_X509_CRL_fp"
	"i2d_X509_EXTENSION"
	"i2d_X509_EXTENSIONS"
	"i2d_X509_NAME"
	"i2d_X509_NAME_ENTRY"
	"i2d_X509_PUBKEY"
	"i2d_X509_REQ"
	"i2d_X509_REQ_INFO"
	"i2d_X509_REQ_bio"
	"i2d_X509_REQ_fp"
	"i2d_X509_REVOKED"
	"i2d_X509_SIG"
	"i2d_X509_VAL"
	"i2d_re_X509_CRL_tbs"
	"i2d_re_X509_REQ_tbs"
	"i2d_re_X509_tbs"
	"X509_CRL_digest"
	"X509_NAME_digest"
	"X509_REQ_check_private_key"
	"X509_REQ_digest"
	"X509_SIG_INFO_get"
	"X509_SIG_INFO_set"
	"X509_STORE_CTX_cert_crl_fn"
	"X509_STORE_CTX_check_crl_fn"
	"X509_STORE_CTX_check_issued_fn"
	"X509_STORE_CTX_check_policy_fn"
	"X509_STORE_CTX_check_revocation_fn"
	"X509_STORE_CTX_cleanup_fn"
	"X509_STORE_CTX_get_crl_fn"
	"X509_STORE_CTX_get_issuer_fn"
	"X509_STORE_CTX_lookup_certs_fn"
	"X509_STORE_CTX_lookup_crls_fn"
	"X509_STORE_CTX_verify_cb"
	"X509_STORE_CTX_verify_fn"
	"X509_VERIFY_PARAM_get_inh_flags"
	"X509_VERIFY_PARAM_get_time"
	"X509_VERIFY_PARAM_set_inh_flags"
	"X509_check_private_key"
	"X509_cmp_current_time"
	"X509_cmp_time"
	"X509_digest"
	"X509_get_signature_info"
	"X509_pubkey_digest"
	"X509_time_adj"
	"X509_time_adj_ex"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/RNG", "encryption_api_usage":"call", "language":"all"}]
	"RAND_OpenSSL"
	"RAND_add"
	"RAND_bytes"
	"RAND_cleanup"
	"RAND_egd"
	"RAND_egd_bytes"
	"RAND_event"
	"RAND_file_name"
	"RAND_get_rand_method"
	"RAND_load_file"
	"RAND_pseudo_bytes"
	"RAND_query_egd_bytes"
	"RAND_screen"
	"RAND_seed"
	"RAND_set_rand_method"
	"RAND_status"
	"RAND_write_file"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/symmetric/stream-cipher/RC4", "encryption_api_usage":"call", "language":"all"}]
	"RC4_set_key"
	"EVP_rc4"
	"EVP_rc4_40"
	"EVP_rc4_hmac_md5"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/symmetric/block-cipher/CAST5", "encryption_api_usage":"call", "language":"all"}]
	"EVP_cast5_cbc"
	"EVP_cast5_cfb"
	"EVP_cast5_ecb"
	"EVP_cast5_ofb"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/asymmetric/RSA", "encryption_api_usage":"call", "language":"all"}]
	"RSAPrivateKey_dup"
	"RSAPublicKey_dup"
	"RSA_OAEP_PARAMS_free"
	"RSA_OAEP_PARAMS_new"
	"RSA_PKCS1_OpenSSL"
	"RSA_PSS_PARAMS_free"
	"RSA_PSS_PARAMS_new"
	"RSA_bits"
	"RSA_blinding_off"
	"RSA_blinding_on"
	"RSA_check_key"
	"RSA_check_key_ex"
	"RSA_clear_flags"
	"RSA_flags"
	"RSA_free"
	"RSA_generate_key"
	"RSA_generate_key_ex"
	"RSA_get0_crt_params"
	"RSA_get0_engine"
	"RSA_get0_factors"
	"RSA_get0_key"
	"RSA_get_default_method"
	"RSA_get_ex_data"
	"RSA_get_ex_new_index"
	"RSA_get_method"
	"RSA_meth_dup"
	"RSA_meth_free"
	"RSA_meth_get0_app_data"
	"RSA_meth_get0_name"
	"RSA_meth_get_bn_mod_exp"
	"RSA_meth_get_finish"
	"RSA_meth_get_flags"
	"RSA_meth_get_init"
	"RSA_meth_get_keygen"
	"RSA_meth_get_mod_exp"
	"RSA_meth_get_priv_dec"
	"RSA_meth_get_priv_enc"
	"RSA_meth_get_pub_dec"
	"RSA_meth_get_pub_enc"
	"RSA_meth_get_sign"
	"RSA_meth_get_verify"
	"RSA_meth_new"
	"RSA_meth_set0_app_data"
	"RSA_meth_set1_name"
	"RSA_meth_set_bn_mod_exp"
	"RSA_meth_set_finish"
	"RSA_meth_set_flags"
	"RSA_meth_set_init"
	"RSA_meth_set_keygen"
	"RSA_meth_set_mod_exp"
	"RSA_meth_set_priv_dec"
	"RSA_meth_set_priv_enc"
	"RSA_meth_set_pub_dec"
	"RSA_meth_set_pub_enc"
	"RSA_meth_set_sign"
	"RSA_meth_set_verify"
	"RSA_new"
	"RSA_new_method"
	"RSA_null_method"
	"RSA_padding_add_PKCS1_OAEP"
	"RSA_padding_add_PKCS1_type_1"
	"RSA_padding_add_PKCS1_type_2"
	"RSA_padding_add_SSLv23"
	"RSA_padding_add_none"
	"RSA_padding_check_PKCS1_OAEP"
	"RSA_padding_check_PKCS1_type_1"
	"RSA_padding_check_PKCS1_type_2"
	"RSA_padding_check_SSLv23"
	"RSA_padding_check_none"
	"RSA_print"
	"RSA_print_fp"
	"RSA_private_decrypt"
	"RSA_private_encrypt"
	"RSA_public_decrypt"
	"RSA_public_encrypt"
	"RSA_set0_crt_params"
	"RSA_set0_factors"
	"RSA_set0_key"
	"RSA_set_default_method"
	"RSA_set_ex_data"
	"RSA_set_flags"
	"RSA_set_method"
	"RSA_sign"
	"RSA_sign_ASN1_OCTET_STRING"
	"RSA_size"
	"RSA_test_flags"
	"RSA_verify"
	"RSA_verify_ASN1_OCTET_STRING"
	"d2i_RSAPrivateKey"
	"d2i_RSAPrivateKey_bio"
	"d2i_RSAPrivateKey_fp"
	"d2i_RSAPublicKey"
	"d2i_RSAPublicKey_bio"
	"d2i_RSAPublicKey_fp"
	"d2i_RSA_OAEP_PARAMS"
	"d2i_RSA_PSS_PARAMS"
	"d2i_RSA_PUBKEY"
	"d2i_RSA_PUBKEY_bio"
	"d2i_RSA_PUBKEY_fp"
	"i2d_RSAPrivateKey"
	"i2d_RSAPrivateKey_bio"
	"i2d_RSAPrivateKey_fp"
	"i2d_RSAPublicKey"
	"i2d_RSAPublicKey_bio"
	"i2d_RSAPublicKey_fp"
	"i2d_RSA_OAEP_PARAMS"
	"i2d_RSA_PSS_PARAMS"
	"i2d_RSA_PUBKEY"
	"i2d_RSA_PUBKEY_bio"
	"i2d_RSA_PUBKEY_fp"
	"ENGINE_get_RSA"
	"ENGINE_get_default_RSA"
	"ENGINE_register_RSA"
	"ENGINE_register_all_RSA"
	"ENGINE_set_RSA"
	"ENGINE_set_default_RSA"
	"ENGINE_unregister_RSA"
	"EVP_PKEY_CTX_set_rsa_keygen_pubexp"
	"EVP_PKEY_CTX_set_rsa_padding"
	"EVP_PKEY_CTX_set_rsa_pss_saltlen"
	"EVP_PKEY_CTX_set_rsa_rsa_keygen_bits"
	"EVP_PKEY_assign_RSA"
	"EVP_PKEY_get0_RSA"
	"EVP_PKEY_get1_RSA"
	"EVP_PKEY_set1_RSA"
	"PEM_read_RSAPrivateKey"
	"PEM_read_RSAPublicKey"
	"PEM_read_RSA_PUBKEY"
	"PEM_read_bio_RSAPrivateKey"
	"PEM_read_bio_RSAPublicKey"
	"PEM_read_bio_RSA_PUBKEY"
	"PEM_write_RSAPrivateKey"
	"PEM_write_RSAPublicKey"
	"PEM_write_RSA_PUBKEY"
	"PEM_write_bio_RSAPrivateKey"
	"PEM_write_bio_RSAPublicKey"
	"PEM_write_bio_RSA_PUBKEY"
	"d2i_Netscape_RSA"
	"i2d_Netscape_RSA"
	"RSA_generate_multi_prime_key"
	"RSA_get0_multi_prime_crt_params"
	"RSA_get0_multi_prime_factors"
	"RSA_get_multi_prime_extra_count"
	"RSA_get_version"
	"RSA_meth_get_multi_prime_keygen"
	"RSA_meth_set_multi_prime_keygen"
	"RSA_security_bits"
	"RSA_set0_multi_prime_params"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/hash/SHA1", "encryption_api_usage":"call", "language":"all"}]
	"SHA1_Init"
	"SHA1_Update"
	"SHA1_Final"
	"SHA1_Transform"
	"EVP_sha1"
	"SHA_Init"
	"SHA_Update"
	"SHA_Final"
	"SHA_Transform"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/hash/SHA2", "encryption_api_usage":"call", "language":"all"}]
	"SHA224_Init"
	"SHA224_Update"
	"SHA224_Final"
	"SHA256_Init"
	"SHA256_Update"
	"SHA256_Final"
	"SHA256_Transform"
	"SHA384_Init"
	"SHA384_Update"
	"SHA384_Final"
	"SHA512_Init"
	"SHA512_Update"
	"SHA512_Final"
	"SHA512_Transform"
	"EVP_sha224"
	"EVP_sha256"
	"EVP_sha384"
	"EVP_sha512"
	"EVP_sha3_224"
	"EVP_sha3_256"
	"EVP_sha3_384"
	"EVP_sha3_512"
	"EVP_shake128"
	"EVP_shake256"


[{"encryption_library":"OpenSSL", "evidence_type":"protocol/TLS", "encryption_api_usage":"call", "language":"all"}]
	"TLS_FEATURE_free"
	"TLS_FEATURE_new"
	"DTLS_client_method"
	"DTLS_get_data_mtu"
	"DTLS_method"
	"DTLS_server_method"
	"DTLS_set_timer_cb"
	"DTLS_timer_cb"
	"DTLSv1_2_client_method"
	"DTLSv1_2_method"
	"DTLSv1_2_server_method"
	"DTLSv1_client_method"
	"DTLSv1_listen"
	"DTLSv1_method"
	"DTLSv1_server_method"
	"TLS_client_method"
	"TLS_method"
	"TLS_server_method"
	"TLSv1_1_client_method"
	"TLSv1_1_method"
	"TLSv1_1_server_method"
	"TLSv1_2_client_method"
	"TLSv1_2_method"
	"TLSv1_2_server_method"
	"TLSv1_client_method"
	"TLSv1_method"
	"TLSv1_server_method"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/symmetric/block-cipher/RC2", "encryption_api_usage":"call", "language":"all"}]
	"EVP_rc2_40_cbc"
	"EVP_rc2_64_cbc"
	"EVP_rc2_cbc"
	"EVP_rc2_cfb"
	"EVP_rc2_ecb"
	"EVP_rc2_ofb"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/hash/BLAKE", "encryption_api_usage":"data_type", "language":"all"}]
	"EVP_blake2b_512"
	"EVP_blake2s_256"
	"EVP_blake2b512"
	"EVP_blake2s256"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/symmetric/block-cipher/IDEA", "encryption_api_usage":"data_type", "language":"all"}]
	"EVP_idea_cbc"
	"EVP_idea_cfb"
	"EVP_idea_ecb"
	"EVP_idea_ofb"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/asymmetric/DiffieHellman", "encryption_api_usage":"include", "language":"all"}]
	"dh.h"

[{"encryption_library":"OpenSSL", "evidence_type":"algorithm/asymmetric/ECC", "encryption_api_usage":"include", "language":"all"}]
	"ecdsa.h"
	"ecdh.h"

[{"encryption_library":"OpenSSL", "evidence_type":"library/OpenSSL", "encryption_api_usage":"include", "language":"all"}]
	"evp.h"

####################################################################################################
### Crypto++
####################################################################################################

[{"encryption_library":"Crypto++", "evidence_type":"library/Crypto++", "encryption_api_usage":"data_type", "language":"all"}]
	"AbstractEuclideanDomain"
	"AdditiveCipherAbstractPolicy"
	"AdditiveCipherConcretePolicy"
	"AdditiveCipherTemplate"
	"AlignedSecByteBlock"
	"ArrayXorSink"
	"ASN1CryptoMaterial"
	"ASN1Object"
	"ASNOptional"
	"AuthenticatedDecryptionFilter"
	"AuthenticatedEncryptionFilter"
	"AuthenticatedKeyAgreementDomain"
	"AuthenticatedSymmetricCipher"
	"AuthenticatedSymmetricCipherBase"
	"BaseN_Decoder"
	"BaseN_Encoder"
	"BERDecodeErr"
	"BERGeneralDecoder"
	"BERSequenceDecoder"
	"BERSetDecoder"
	"BlockCipher"
	"BlockCipherDocumentation"
	"BlockCipherFinal"
	"BlockCipherImpl"
	"BlockGetAndPut"
	"BlockingRng"
	"BlockOrientedCipherModeBase"
	"BlockPaddingSchemeDef"
	"BlockTransformation"
	"BlumBlumShub"
	"CBC_CTS_Decryption"
	"CBC_CTS_Encryption"
	"CBC_CTS_Mode"
	"CBC_CTS_Mode_ExternalCipher"
	"CBC_Decryption"
	"CBC_Encryption"
	"CBC_MAC"
	"CBC_MAC_Base"
	"CBC_Mode"
	"CBC_Mode_ExternalCipher"
	"CBC_ModeBase"
	"CCM_Base"
	"CCM_Final"
	"CFB_CipherAbstractPolicy"
	"CFB_CipherConcretePolicy"
	"CFB_CipherTemplate"
	"CFB_DecryptionTemplate"
	"CFB_EncryptionTemplate"
	"CFB_FIPS_Mode"
	"CFB_FIPS_Mode_ExternalCipher"
	"CFB_Mode"
	"CFB_Mode_ExternalCipher"
	"CFB_ModePolicy"
	"CFB_RequireFullDataBlocks"
	"ChannelRouteIterator"
	"ChannelSwitch"
	"ChannelSwitchTypedefs"
	"CipherModeBase"
	"CipherModeDocumentation"
	"CipherModeFinalTemplate_CipherHolder"
	"CipherModeFinalTemplate_ExternalCipher"
	"CMAC_Base"
	"ConcretePolicyHolder"
	"CryptoMaterial"
	"CryptoParameters"
	"CTR_Mode"
	"CTR_Mode_ExternalCipher"
	"CTR_ModePolicy"
	"CustomFlushPropagation"
	"CustomSignalPropagation"
	"DefaultDecryptor"
	"DefaultDecryptorWithMAC"
	"DefaultEncryptor"
	"DefaultEncryptorWithMAC"
	"DERGeneralEncoder"
	"DERSequenceEncoder"
	"DERSetEncoder"
	"DigestSizeDoubleWorkaround"
	"DL_Algorithm_LUC_HMP"
	"DL_Algorithm_NR"
	"DL_BadElement"
	"DL_Base"
	"DL_BasePrecomputation_LUC"
	"DL_CryptoKeys_GFP"
	"DL_CryptoKeys_LUC"
	"DL_CryptoSchemeOptions"
	"DL_CryptoSystemBase"
	"DL_DecryptorBase"
	"DL_DecryptorImpl"
	"DL_EncryptionAlgorithm_Xor"
	"DL_EncryptorBase"
	"DL_EncryptorImpl"
	"DL_FixedBasePrecomputation"
	"DL_FixedBasePrecomputationImpl"
	"DL_GroupParameters"
	"DL_GroupParameters_GFP"
	"DL_GroupParameters_GFP_DefaultSafePrime"
	"DL_GroupParameters_IntegerBased"
	"DL_GroupParameters_IntegerBasedImpl"
	"DL_GroupParameters_LUC"
	"DL_GroupParameters_LUC_DefaultSafePrime"
	"DL_GroupParametersImpl"
	"DL_GroupPrecomputation"
	"DL_GroupPrecomputation_LUC"
	"DL_KeyAgreementAlgorithm"
	"DL_KeyAgreementAlgorithm_DH"
	"DL_KeyDerivationAlgorithm"
	"DL_KeyDerivationAlgorithm_P1363"
	"DL_KeyedSchemeOptions"
	"DL_KeyImpl"
	"DL_ObjectImpl"
	"DL_ObjectImplBase"
	"DL_PrivateKey"
	"DL_PrivateKey_GFP"
	"DL_PrivateKey_GFP_OldFormat"
	"DL_PrivateKey_WithSignaturePairwiseConsistencyTest"
	"DL_PrivateKeyImpl"
	"DL_PublicKey"
	"DL_PublicKey_GFP"
	"DL_PublicKey_GFP_OldFormat"
	"DL_PublicKeyImpl"
	"DL_SchemeOptionsBase"
	"DL_SignatureKeys_GFP"
	"DL_SignatureKeys_LUC"
	"DL_SignatureMessageEncodingMethod_NR"
	"DL_SignatureSchemeBase"
	"DL_SignatureSchemeOptions"
	"DL_SignerBase"
	"DL_SignerImpl"
	"DL_SimpleKeyAgreementDomainBase"
	"DL_SymmetricEncryptionAlgorithm"
	"DL_VerifierBase"
	"DL_VerifierImpl"
	"DMAC_Base"
	"EAX_Base"
	"EAX_Final"
	"ECB_Mode"
	"ECB_Mode_ExternalCipher"
	"ECB_OneWay"
	"EMSA2HashId"
	"EMSA2HashIdLookup"
	"EMSA2Pad"
	"EMSA5Pad"
	"EncryptionStandard"
	"ESIGN_Keys"
	"ESIGNFunction"
	"EuclideanDomainOf"
	"FHMQV_Domain"
	"FixedSizeAlignedSecBlock"
	"FixedSizeAllocatorWithCleanup"
	"GCM_Base"
	"GCM_Final"
	"GF2NP"
	"GF2NPP"
	"GF2NT"
	"GFP2_ONB"
	"GFP2Element"
	"HermeticHashFunctionMAC"
	"HMQV_Domain"
	"InvalidCiphertext"
	"InvalidSaltLength"
	"InvertibleESIGNFunction"
	"InvertibleLUCFunction"
	"GeneratableCryptoMaterial"
	"IteratedHashWithStaticTransform"
	"KDF2_RNG"
	"KeyAgreementAlgorithm"
	"KeyDerivationFunction"
	"LC_RNG"
	"LR_Info"
	"LUC_HMP"
	"LUC_IES"
	"LUCFunction"
	"LUCPrimeSelector"
	"MaskGeneratingFunction"
	"MaurerRandomnessTest"
	"MersenneTwister"
	"MessageAuthenticationCode"
	"MessageAuthenticationCodeFinal"
	"MessageAuthenticationCodeImpl"
	"MicrosoftCryptoProvider"
	"ModExpPrecomputation"
	"MontgomeryRepresentation"
	"MQV_Domain"
	"MT19937"
	"MT19937ar"
	"NewFixedDistanceDecoder"
	"NewFixedLiteralDecoder"
	"NewLastSmallPrimeSquared"
	"NewPolynomialMod2"
	"NewPrimeTable"
	"NonblockingRng"
	"NonblockingSink"
	"NonblockingSinkInfo"
	"NonblockingSource"
	"OAEP"
	"OAEP_Base"
	"OFB_Mode"
	"OFB_Mode_ExternalCipher"
	"OFB_ModePolicy"
	"OS_RNG_Err"
	"P1363_EMSA2"
	"P1363_EMSA5"
	"P1363_KDF2"
	"P1363_MGF1"
	"PasswordBasedKeyDerivationFunction"
	"ProcessAndXorBlock"
	"PSSR_MEM"
	"PSSR_MEM_Base"
	"PSSR_MEM_BaseWithHashId"
	"RawIDA"
	"SecBlockWithHint"
	"SecByteBlock"
	"SecWordBlock"
	"SignatureVerificationFilter"
	"SignerFilter"
	"SimpleKeyAgreementDomain"
	"SimpleKeyingInterface"
	"SimpleKeyingInterfaceImpl"
	"SymmetricCipher"
	"SymmetricCipherDocumentation"
	"SymmetricCipherFinal"
	"TF_CryptoSchemeOptions"
	"TF_CryptoSystemBase"
	"TF_DecryptorBase"
	"TF_DecryptorImpl"
	"TF_EncryptorBase"
	"TF_EncryptorImpl"
	"TF_SignatureSchemeBase"
	"TF_SignatureSchemeOptions"
	"TF_SignerBase"
	"TF_SignerImpl"
	"TF_VerifierBase"
	"TF_VerifierImpl"
	"TrapdoorFunction"
	"TrapdoorFunctionBounds"
	"TrapdoorFunctionInverse"
	"TruncatedHashTemplate"
	"TTMAC_Base"
	"VariableKeyLength"
	"VMAC_Base"
	"X509PublicKey"
	"ZlibCompressor"
	"ZlibDecompressor"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/asymmetric/Rabin", "encryption_api_usage":"data_type", "language":"all"}]
	"InvertibleRabinFunction"
	"RabinES"
	"RabinFunction"
	"RabinSS"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/asymmetric/XTR", "encryption_api_usage":"data_type", "language":"all"}]
	"XTR_DH"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/RNG", "encryption_api_usage":"data_type", "language":"all"}]
	"AutoSeededRandomPool"
	"AutoSeededX917RNG"
	"ClassNullRNG"
	"DefaultAutoSeededRNG"
	"PublicBlumBlumShub"
	"RandomizedTrapdoorFunction"
	"RandomizedTrapdoorFunctionInverse"
	"RandomNumberGenerator"
	"RandomNumberSink"
	"RandomNumberSource"
	"RandomNumberStore"
	"RandomPool"
	"RDRAND"
	"RDRAND_Err"
	"RDSEED"
	"RDSEED_Err"
	"X917RNG"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/hash/BLAKE", "encryption_api_usage":"data_type", "language":"all"}]
	"BLAKE2_Base"
	"BLAKE2_Info"
	"BLAKE2_ParameterBlock"
	"BLAKE2_ParameterBlock< false >"
	"BLAKE2_ParameterBlock< true >"
	"BLAKE2_State"
	"BLAKE2b"
	"BLAKE2s"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/Blowfish", "encryption_api_usage":"data_type", "language":"all"}]
	"Blowfish_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/Camellia", "encryption_api_usage":"data_type", "language":"all"}]
	"Camellia_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/CAST5", "encryption_api_usage":"data_type", "language":"all"}]
	"CAST128_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/CAST6", "encryption_api_usage":"data_type", "language":"all"}]
	"CAST256_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/stream-cipher/ChaCha20", "encryption_api_usage":"data_type", "language":"all"}]
	"ChaCha12"
	"ChaCha20"
	"ChaCha8"
	"ChaCha_Info"
	"ChaCha_Policy"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/DES", "encryption_api_usage":"data_type", "language":"all"}]
	"DES_EDE2"
	"DES_EDE2_Info"
	"DES_EDE3"
	"DES_EDE3_Info"
	"DES_Info"
	"DES_XEX3"
	"DES_XEX3_Info"
	"RawDES"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/asymmetric/DiffieHellman", "encryption_api_usage":"data_type", "language":"all"}]
	"DH2("
	"DH_Domain"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/asymmetric/ECC", "encryption_api_usage":"data_type", "language":"all"}]
	"DL_PublicKey_EC"
	"DL_PrivateKey_EC"
	"DL_GroupParameters_EC"
	"DL_Algorithm_ECDSA"
	"DL_Algorithm_ECNR"
	"DL_Keys_EC"
	"DL_Keys_ECDSA"
	"ECPPoint"
	"EcPrecomputation"
	"EcRecommendedParameters"
	"EC2N"
	"EC2NPoint"
	"ECFHMQV"
	"ECHMQV"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/GOST", "encryption_api_usage":"data_type", "language":"all"}]
	"GOST_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/hash/HMAC", "encryption_api_usage":"data_type", "language":"all"}]
	"HMAC_Base"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/IDEA", "encryption_api_usage":"data_type", "language":"all"}]
	"IDEA_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/MARS", "encryption_api_usage":"data_type", "language":"all"}]
	"MARS_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/hash/MDC-2", "encryption_api_usage":"data_type", "language":"all"}]
	"MDC_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/Twofish", "encryption_api_usage":"data_type", "language":"all"}]
	"Twofish_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/Threeway", "encryption_api_usage":"data_type", "language":"all"}]
	"ThreeWay"
	"ThreeWay_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/asymmetric/DSA", "encryption_api_usage":"data_type", "language":"all"}]
	"DL_Algorithm_GDSA"
	"DL_GroupParameters_DSA"
	"DL_Keys_DSA"
	"DL_SignatureMessageEncodingMethod_DSA"
	"DSA2"
	"GDSA"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/asymmetric/ElGamal", "encryption_api_usage":"data_type", "language":"all"}]
	"DL_ElgamalLikeSignatureAlgorithm"
	"ElGamalBase"
	"ElGamalKeys"
	"ElGamalObjectImpl"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/asymmetric/RSA", "encryption_api_usage":"data_type", "language":"all"}]
	"InvertibleRSAFunction"
	"InvertibleRSAFunction_ISO"
	"RSA_ISO"
	"RSAES"
	"RSAES_OAEP_SHA_Decryptor"
	"RSAES_OAEP_SHA_Encryptor"
	"RSAES_PKCS1v15_Decryptor"
	"RSAES_PKCS1v15_Encryptor"
	"RSAFunction"
	"RSAFunction_ISO"
	"RSAPrimeSelector"
	"RSASS"
	"RSASS_ISO"
	"RSASSA_PKCS1v15_SHA_Signer"
	"RSASSA_PKCS1v15_SHA_Verifier"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/hash/SHA3", "encryption_api_usage":"data_type", "language":"all"}]
	"Keccak"
	"Keccak_224"
	"Keccak_256"
	"Keccak_384"
	"Keccak_512"
	"Keccak_Final"
	"SHA3_Final"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/SHACAL", "encryption_api_usage":"data_type", "language":"all"}]
	"SHACAL2"
	"SHACAL2_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/stream-cipher/PANAMA", "encryption_api_usage":"data_type", "language":"all"}]
	"PanamaCipher"
	"PanamaCipherInfo"
	"PanamaCipherPolicy"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/stream-cipher/WAKE", "encryption_api_usage":"data_type", "language":"all"}]
	"WAKE_Base"
	"WAKE_OFB"
	"WAKE_OFB_Info"
	"WAKE_Policy"

[{"encryption_library":"Crypto++", "evidence_type":"protocol/PKCS", "encryption_api_usage":"data_type", "language":"all"}]
	"PK_CryptoSystem"
	"PK_Decryptor"
	"PK_DecryptorFilter"
	"PK_DefaultDecryptionFilter"
	"PK_DefaultEncryptionFilter"
	"PK_DeterministicSignatureMessageEncodingMethod"
	"PK_EncryptionMessageEncodingMethod"
	"PK_Encryptor"
	"PK_EncryptorFilter"
	"PK_FinalTemplate"
	"PK_FixedLengthCryptoSystemImpl"
	"PK_MessageAccumulator"
	"PK_MessageAccumulatorBase"
	"PK_MessageAccumulatorImpl"
	"PK_RecoverableSignatureMessageEncodingMethod"
	"PK_SignatureMessageEncodingMethod"
	"PK_SignatureScheme"
	"PK_Signer"
	"PK_Verifier"
	"PKCS12_PBKDF"
	"PKCS1v15"
	"PKCS1v15_SignatureMessageEncodingMethod"
	"PKCS5_PBKDF1"
	"PKCS5_PBKDF2_HMAC"
	"PKCS8PrivateKey"
	"PKCS_DigestDecoration"
	"PKCS_EncryptionPaddingScheme"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/RC2", "encryption_api_usage":"data_type", "language":"all"}]
	"RC2_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/RC5", "encryption_api_usage":"data_type", "language":"all"}]
	"RC5_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/RC6", "encryption_api_usage":"data_type", "language":"all"}]
	"RC6_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/AES", "encryption_api_usage":"data_type", "language":"all"}]
	"Rijndael_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/asymmetric/RabinWilliams", "encryption_api_usage":"data_type", "language":"all"}]
	"RWFunction"
	"RWSS"
	"InvertibleRWFunction"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/SAFER", "encryption_api_usage":"data_type", "language":"all"}]
	"SAFER("
	"SAFER_Impl"
	"SAFER_K_Info"
	"SAFER_SK_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/stream-cipher/Salsa20", "encryption_api_usage":"data_type", "language":"all"}]
	"Salsa20_Info"
	"Salsa20_Policy"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/stream-cipher/XSalsa20", "encryption_api_usage":"data_type", "language":"all"}]
	"XSalsa20_Info"
	"XSalsa20_Policy"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/stream-cipher/SEAL", "encryption_api_usage":"data_type", "language":"all"}]
	"SEAL_Gamma"
	"SEAL_Info"
	"SEAL_Policy"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/SEED", "encryption_api_usage":"data_type", "language":"all"}]
	"SEED_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/Serpent", "encryption_api_usage":"data_type", "language":"all"}]
	"Serpent_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/SHARK", "encryption_api_usage":"data_type", "language":"all"}]
	"SHARK_Info"
	"SharkProcessAndXorBlock"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/Skipjack", "encryption_api_usage":"data_type", "language":"all"}]
	"SKIPJACK("
	"SKIPJACK_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/stream-cipher/SOSEMANUK", "encryption_api_usage":"data_type", "language":"all"}]
	"SosemanukInfo"
	"SosemanukPolicy"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/TEA", "encryption_api_usage":"data_type", "language":"all"}]
	"TEA_Info"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/XTEA", "encryption_api_usage":"data_type", "language":"all"}]
	"XTEA_Info"

[{"encryption_library":"Crypto++", "evidence_type":"library/Crypto++", "encryption_api_usage":"include", "language":"all"}]
	"cryptlib.h"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/IDEA", "encryption_api_usage":"include", "language":"all"}]
	"idea.h"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/GOST", "encryption_api_usage":"include", "language":"all"}]
	"gost.h"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/Camellia", "encryption_api_usage":"include", "language":"all"}]
	"camellia.h"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/Feistel", "encryption_api_usage":"include", "language":"all"}]
	"lubyrack.h"

[{"encryption_library":"Crypto++", "evidence_type":"algorithm/symmetric/block-cipher/Skipjack", "encryption_api_usage":"include", "language":"all"}]
	"skipjack.h"

####################################################################################################
### libGCrypt
####################################################################################################

[{"encryption_library":"libgcrypt", "evidence_type":"library/libgcrypt", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_CIPHER_MODE_NONE"
	"GCRY_CIPHER_MODE_ECB"
	"GCRY_CIPHER_MODE_CFB"
	"GCRY_CIPHER_MODE_CBC"
	"GCRY_CIPHER_MODE_STREAM"
	"GCRY_CIPHER_MODE_OFB"
	"GCRY_CIPHER_MODE_CTR"
	"GCRY_CIPHER_MODE_AESWRAP"
	"GCRY_CIPHER_MODE_CCM"
	"GCRY_CIPHER_MODE_GCM"
	"GCRY_CIPHER_SECURE"
	"GCRY_CIPHER_ENABLE_SYNC"
	"GCRY_CIPHER_CBC_CTS"
	"GCRY_CIPHER_CBC_MAC"
	"GCRYCTL_GET_KEYLEN"
	"GCRYCTL_GET_BLKLEN"
	"GCRYCTL_TEST_ALGO"
	"GCRY_PK_USAGE_SIGN"
	"GCRY_PK_USAGE_ENCR"
	"GCRYCTL_GET_ALGO_USAGE"
	"GCRYCTL_GET_ALGO_NPKEY"
	"GCRYCTL_GET_ALGO_NSKEY"
	"GCRYCTL_GET_ALGO_NSIGN"
	"GCRYCTL_GET_ALGO_NENC"
	"GCRYCTL_DISABLE_ALGO"
	"gcry_handler_progress_t"
	"gcry_handler_alloc_t"
	"gcry_handler_secure_check_t"
	"gcry_handler_realloc_t"
	"gcry_handler_free_t"
	"gcry_handler_no_mem_t"
	"gcry_handler_error_t"
	"gcry_handler_log_t"
	"GCRYCTL_ENABLE_M_GUARD"
	"GCRYCTL_ENABLE_QUICK_RANDOM"
	"GCRYCTL_DUMP_RANDOM_STATS"
	"GCRYCTL_DUMP_MEMORY_STATS"
	"GCRYCTL_DUMP_SECMEM_STATS"
	"GCRYCTL_DROP_PRIVS"
	"GCRYCTL_DISABLE_SECMEM"
	"GCRYCTL_DISABLE_LOCKED_SECMEM"
	"GCRYCTL_DISABLE_PRIV_DROP"
	"GCRYCTL_INIT_SECMEM"
	"GCRYCTL_TERM_SECMEM"
	"GCRYCTL_DISABLE_SECMEM_WARN"
	"GCRYCTL_SUSPEND_SECMEM_WARN"
	"GCRYCTL_RESUME_SECMEM_WARN"
	"GCRYCTL_USE_SECURE_RNDPOOL"
	"GCRYCTL_SET_RANDOM_SEED_FILE"
	"GCRYCTL_UPDATE_RANDOM_SEED_FILE"
	"GCRYCTL_CLOSE_RANDOM_DEVICE"
	"GCRYCTL_SET_VERBOSITY"
	"GCRYCTL_SET_DEBUG_FLAGS"
	"GCRYCTL_CLEAR_DEBUG_FLAGS"
	"GCRYCTL_DISABLE_INTERNAL_LOCKING"
	"GCRYCTL_ANY_INITIALIZATION_P"
	"GCRYCTL_INITIALIZATION_FINISHED"
	"GCRYCTL_INITIALIZATION_FINISHED_P"
	"GCRYCTL_SET_THREAD_CBS"
	"GCRYCTL_FAST_POLL"
	"GCRYCTL_SET_RNDEGD_SOCKET"
	"GCRYCTL_PRINT_CONFIG"
	"GCRYCTL_OPERATIONAL_P"
	"GCRYCTL_FIPS_MODE_P"
	"GCRYCTL_FORCE_FIPS_MODE"
	"GCRYCTL_SET_ENFORCED_FIPS_FLAG"
	"GCRYCTL_SET_PREFERRED_RNG_TYPE"
	"GCRY_RNG_TYPE_STANDARD"
	"GCRY_RNG_TYPE_FIPS"
	"GCRY_RNG_TYPE_SYSTEM"
	"GCRYCTL_GETT_CURRENT_RNG_TYPE"
	"GCRYCTL_SELFTEST"
	"GCRYCTL_DISABLE_HWF"
	"gcry_err_code_t"
	"gcry_err_source_t"
	"gcry_error_t"
	"gcry_err_code"
	"gcry_err_source"
	"gcry_err_make"
	"gcry_error"
	"gcry_err_make_from_errno"
	"gcry_error_from_errno"
	"gcry_err_code_from_errno"
	"gcry_err_code_to_errno"
	"GCRY_KDF_SIMPLE_S2K"
	"GCRY_KDF_SALTED_S2K"
	"GCRY_KDF_ITERSALTED_S2K"
	"GCRY_KDF_PBKDF2"
	"GCRY_KDF_SCRYPT"
	"gcry_random_level_t"
	"GCRY_WEAK_RANDOM"
	"GCRY_STRONG_RANDOM"
	"GCRY_VERY_STRONG_RANDOM"
	"gcry_sexp_t"
	"gcry_mpi_t"
	"gcry_mpi_point_t"
	"GCRYMPI_FMT_STD"
	"GCRYMPI_FMT_PGP"
	"GCRYMPI_FMT_SSH"
	"GCRYMPI_FMT_HEX"
	"GCRYMPI_FMT_USG"
	"GCRYMPI_FLAG_SECURE"
	"GCRYMPI_FLAG_OPAQUE"
	"GCRYMPI_FLAG_IMMUTABLE"
	"GCRYMPI_FLAG_CONST"
	"gcry_ctx_t"
	"gcry_buffer_t"
	"fast_wipememory_s"
	"gcry_cipher_handle"
	"gcry_cipher_oid_spec"
	"gcry_cipher_spec"
	"gcry_context"
	"gcry_drbg_test_vector"
	"gcry_mac_handle"
	"gcry_mac_spec"
	"gcry_mac_spec_ops"
	"gcry_md_block_ctx"
	"gcry_md_context"
	"gcry_md_list"
	"gcry_md_oid_spec"
	"gcry_md_spec"
	"gcry_mpi"
	"gcry_mpi_point"
	"gcry_pk_spec"
	"gcry_sexp"
	"make_space_ctx"
	"pk_encoding_ctx"
	"primepool_s"
	"gcry_strerror"
	"gcry_strsource"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/MAC/Poly1305", "encryption_api_usage":"data_type", "language":"all"}]
	"poly1305_context_s"
	"poly1305_key_s"
	"poly1305_ops_s"
	"poly1305_state_ref32_s"
	"poly1305mac_context_s"

[{"encryption_library":"libgcrypt", "evidence_type":"library/libgcrypt", "encryption_api_usage":"include", "language":"all"}]
	"gcrypt.h"
	"GCRYPT_NO_MPI_MACROS"
	"GCRYPT_NO_DEPRECATED"

[{"encryption_library":"libgcrypt", "evidence_type":"library/libgcrypt", "encryption_api_usage":"call", "language":"all"}]
	"gcry_cipher_close"
	"gcry_cipher_setkey"
	"gcry_cipher_setiv"
	"gcry_cipher_setctr"
	"gcry_cipher_reset"
	"gcry_cipher_authenticate"
	"gcry_cipher_gettag"
	"gcry_cipher_checktag"
	"gcry_cipher_encrypt"
	"gcry_cipher_decrypt"
	"gcry_cipher_sync"
	"gcry_cipher_ctl"
	"gcry_cipher_info"
	"gcry_cipher_get_algo_keylen"
	"gcry_cipher_get_algo_blklen"
	"gcry_cipher_algo_name"
	"gcry_cipher_map_name"
	"gcry_cipher_mode_from_oid"
	"gcry_pk_encrypt"
	"gcry_pk_decrypt"
	"gcry_pk_sign"
	"gcry_pk_verify"
	"gcry_pk_algo_name"
	"gcry_pk_map_name"
	"gcry_pk_test_algo"
	"gcry_pk_get_nbits"
	"gcry_pk_get_keygrip"
	"gcry_pk_testkey"
	"gcry_pk_algo_info"
	"gcry_pk_genkey"
	"gcry_pubkey_get_sexp"
	"gcry_set_progress_handler"
	"gcry_set_allocation_handler"
	"gcry_set_outofcore_handler"
	"gcry_set_fatalerror_handler"
	"gcry_set_log_handler"
	"gcry_kdf_derive"
	"gcry_randomize"
	"gcry_random_bytes"
	"gcry_random_bytes_secure"
	"gcry_create_nonce"
	"gcry_sexp_new"
	"gcry_sexp_create"
	"gcry_sexp_sscan"
	"gcry_sexp_build"
	"gcry_sexp_release"
	"gcry_sexp_sprint"
	"gcry_sexp_dump"
	"gcry_sexp_canon_len"
	"gcry_sexp_find_token"
	"gcry_sexp_length"
	"gcry_sexp_nth"
	"gcry_sexp_car"
	"gcry_sexp_cdr"
	"gcry_sexp_nth_data"
	"gcry_sexp_nth_buffer"
	"gcry_sexp_nth_string"
	"gcry_sexp_nth_mpi"
	"gcry_sexp_extract_param"
	"gcry_mpi_new"
	"gcry_mpi_snew"
	"gcry_mpi_copy"
	"gcry_mpi_release"
	"gcry_mpi_set"
	"gcry_mpi_set_ui"
	"gcry_mpi_swap"
	"gcry_mpi_snatch"
	"gcry_mpi_neg"
	"gcry_mpi_abs"
	"gcry_prime_generate"
	"gcry_prime_group_generator"
	"gcry_prime_release_factors"
	"gcry_prime_check"
	"gcry_mpi_scan"
	"gcry_mpi_print"
	"gcry_mpi_aprint"
	"gcry_mpi_dump"
	"gcry_mpi_add"
	"gcry_mpi_add_ui"
	"gcry_mpi_addm"
	"gcry_mpi_sub"
	"gcry_mpi_sub_ui"
	"gcry_mpi_subm"
	"gcry_mpi_mul"
	"gcry_mpi_mul_ui"
	"gcry_mpi_mulm"
	"gcry_mpi_mul_2exp"
	"gcry_mpi_div"
	"gcry_mpi_mod"
	"gcry_mpi_powm"
	"gcry_mpi_gcd"
	"gcry_mpi_invm"
	"gcry_mpi_cmp"
	"gcry_mpi_cmp_ui"
	"gcry_mpi_is_neg"
	"gcry_mpi_get_nbits"
	"gcry_mpi_test_bit"
	"gcry_mpi_set_bit"
	"gcry_mpi_clear_bit"
	"gcry_mpi_set_highbit"
	"gcry_mpi_clear_highbit"
	"gcry_mpi_rshift"
	"gcry_mpi_lshift"
	"gcry_mpi_set_opaque"
	"gcry_mpi_set_opaque_copy"
	"gcry_mpi_get_opaque"
	"gcry_mpi_set_flag"
	"gcry_mpi_clear_flag"
	"gcry_mpi_get_flag"
	"gcry_mpi_randomize"
	"gcry_mpi_point_new"
	"gcry_mpi_point_release"
	"gcry_mpi_point_get"
	"gcry_mpi_point_snatch_get"
	"gcry_mpi_point_set"
	"gcry_mpi_point_snatch_set"
	"gcry_malloc"
	"gcry_malloc_secure"
	"gcry_calloc"
	"gcry_calloc_secure"
	"gcry_realloc"
	"gcry_free"
	"gcry_ctx_release"
	"gcry_check_version"
	"gcry_control"

[{"encryption_library":"libgcrypt", "evidence_type":"protocol/MAC", "encryption_api_usage":"call", "language":"all"}]
	"gcry_mac_open"
	"gcry_mac_setkey"
	"gcry_mac_setiv"
	"gcry_mac_close"
	"gcry_mac_reset"
	"gcry_mac_write"
	"gcry_mac_read"
	"gcry_mac_verify"
	"gcry_mac_algo_name"
	"gcry_mac_map_name"
	"gcry_mac_test_algo"
	"gcry_mac_get_algo_maclen"
	"gcry_mac_get_algo_keylen"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/hash/MD5", "encryption_api_usage":"call", "language":"all"}]
	"gcry_md_open"
	"gcry_md_enable"
	"gcry_md_setkey"
	"gcry_md_close"
	"gcry_md_reset"
	"gcry_md_copy"
	"gcry_md_write"
	"gcry_md_putc"
	"gcry_md_final"
	"gcry_md_read"
	"gcry_md_hash_buffers"
	"gcry_md_hash_buffer"
	"gcry_md_algo_name"
	"gcry_md_map_name"
	"gcry_md_get_asnoid"
	"gcry_md_test_algo"
	"gcry_md_get_algo_dlen"
	"gcry_md_get_algo"
	"gcry_md_is_secure"
	"gcry_md_is_enabled"
	"gcry_md_debug"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/hybrid/PGP", "encryption_api_usage":"data_type", "language":"all"}]
	"GPG_ERR_SOURCE_UNKNOWN"
	"GPG_ERR_SOURCE_GPG"
	"GPG_ERR_SOURCE_GPGSM"
	"GPG_ERR_SOURCE_GCRYPT"
	"GPG_ERR_SOURCE_GPGAGENT"
	"GPG_ERR_SOURCE_PINENTRY"
	"GPG_ERR_SOURCE_SCD"
	"GPG_ERR_SOURCE_KEYBOX"
	"GPG_ERR_SOURCE_USER_1"
	"GPG_ERR_SOURCE_USER_2"
	"GPG_ERR_SOURCE_USER_3"
	"GPG_ERR_SOURCE_USER_4"
	"GPG_ERR_EOF"
	"GPG_ERR_NO_ERROR"
	"GPG_ERR_GENERAL"
	"GPG_ERR_ENOMEM"
	"GPG_ERR_INV_VALUE"
	"GPG_ERR_UNUSABLE_PUBKEY"
	"GPG_ERR_UNUSABLE_SECKEY"
	"GPG_ERR_NO_DATA"
	"GPG_ERR_CONFLICT"
	"GPG_ERR_NOT_IMPLEMENTED"
	"GPG_ERR_DECRYPT_FAILED"
	"GPG_ERR_WRONG_KEY_USAGE"
	"GPG_ERR_NO_SECKEY"
	"GPG_ERR_UNSUPPORTED_ALGORITHM"
	"GPG_ERR_BAD_SIGNATURE"
	"GPG_ERR_NO_PUBKEY"
	"GPG_ERR_NOT_OPERATIONAL"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/hash/HMAC", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_MD_FLAG_HMAC"
	"GCRY_MAC_HMAC_MD5"
	"GCRY_MAC_HMAC_MD4"
	"GCRY_MAC_HMAC_RMD160"
	"hmac256_context"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/hash/MD2", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_MD_MD2"
	"MD2_CONTEXT"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/hash/MD4", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_MD_MD4"
	"MD4_CONTEXT"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/hash/MD5", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_MD_NONE"
	"GCRY_MD_RMD160"
	"GCRY_MD_MD5"
	"GCRY_MD_FLAG_SECURE"
	"GCRY_MD_FLAG_BUGEMU1"
	"MD5_CONTEXT"
	"RMD160_CONTEXT"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/hash/Tiger", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_MD_TIGER"
	"GCRY_MD_TIGER1"
	"GCRY_MD_TIGER2"
	"TIGER_CONTEXT"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/hash/HAVAL", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_MD_HAVAL"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/hash/SHA1", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_MD_SHA1"
	"GCRY_MAC_HMAC_SHA1"
	"SHA1_CONTEXT"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/hash/SHA2", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_MD_SHA224"
	"GCRY_MD_SHA256"
	"GCRY_MD_SHA384"
	"GCRY_MD_SHA512"
	"SHA256_CONTEXT"
	"SHA512_CONTEXT"
	"SHA512_STATE"
	"GCRY_MAC_HMAC_SHA256"
	"GCRY_MAC_HMAC_SHA224"
	"GCRY_MAC_HMAC_SHA512"
	"GCRY_MAC_HMAC_SHA384"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/hash/SHA3", "encryption_api_usage":"data_type", "language":"all"}]
	"KECCAK_CONTEXT_S"
	"keccak_ops_t"
	"KECCAK_STATE"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/hash/Whirlpool", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_MD_WHIRLPOOL"
	"GCRY_MAC_HMAC_WHIRLPOOL"
	"whirlpool_context_t"
	"whirlpool_tables_s"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/hash/GOST", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_MD_GOSTR3411_94"
	"GCRY_MAC_HMAC_GOSTR3411_94"
	"GOSTR3411_CONTEXT"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/hash/STRIBOG", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_MD_STRIBOG256"
	"GCRY_MD_STRIBOG512"
	"GCRY_MAC_HMAC_STRIBOG256"
	"STRIBOG_CONTEXT"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/asymmetric/ECC", "encryption_api_usage":"data_type", "language":"all"}]
	"elliptic_curve_t"
	"ecc_domain_parms_t"
	"ECC_public_key"
	"ECC_secret_key"
	"mpi_ec_ctx_s"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/asymmetric/ElGamal", "encryption_api_usage":"data_type", "language":"all"}]
	"ELG_public_key"
	"ELG_secret_key"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/asymmetric/RSA", "encryption_api_usage":"data_type", "language":"all"}]
	"RSA_public_key"
	"RSA_secret_key"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/asymmetric/ECC", "encryption_api_usage":"call", "language":"all"}]
	"gcry_mpi_ec_p_new"
	"gcry_mpi_ec_get_mpi"
	"gcry_mpi_ec_get_point"
	"gcry_mpi_ec_set_mpi"
	"gcry_mpi_ec_set_point"
	"gcry_mpi_ec_get_affine"
	"gcry_mpi_ec_dup"
	"gcry_mpi_ec_add"
	"gcry_mpi_ec_mul"
	"gcry_mpi_ec_curve_point"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/symmetric/block-cipher/IDEA", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_CIPHER_IDEA"
	"GCRY_MAC_CMAC_IDEA"
	"IDEA_context"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/symmetric/block-cipher/DES", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_CIPHER_3DES"
	"GCRY_CIPHER_DES_SK"
	"GCRY_CIPHER_DES"
	"GCRY_MAC_CMAC_3DES"
	"_des_ctx"
	"_tripledes_ctx"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/symmetric/block-cipher/CAST5", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_CIPHER_CAST5"
	"GCRY_MAC_CMAC_CAST5"
	"CAST5_context"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/symmetric/block-cipher/Blowfish", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_CIPHER_BLOWFISH"
	"GCRY_MAC_CMAC_BLOWFISH"
	"BLOWFISH_context"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/symmetric/block-cipher/SAFER", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_CIPHER_SAFER_SK128"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/symmetric/block-cipher/AES", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_CIPHER_AES"
	"GCRY_CIPHER_AES128"
	"GCRY_CIPHER_RIJNDAEL"
	"GCRY_CIPHER_RIJNDAEL128"
	"GCRY_CIPHER_AES192"
	"GCRY_CIPHER_RIJNDAEL192"
	"GCRY_CIPHER_AES256"
	"GCRY_CIPHER_RIJNDAEL256"
	"GCRY_MAC_CMAC_AES"
	"GCRY_MAC_GMAC_AES"
	"RIJNDAEL_context_s"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/asymmetric/DSA", "encryption_api_usage":"data_type", "language":"all"}]
	"dsa_domain_t"
	"DSA_public_key"
	"DSA_secret_key"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/symmetric/stream-cipher/ChaCha20", "encryption_api_usage":"data_type", "language":"all"}]
	"CHACHA20_context_s"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/symmetric/block-cipher/Twofish", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_CIPHER_TWOFISH"
	"GCRY_CIPHER_TWOFISH128"
	"GCRY_MAC_CMAC_TWOFISH"
	"GCRY_MAC_GMAC_TWOFISH"
	"TWOFISH_context"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/symmetric/stream-cipher/RC4", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_CIPHER_ARCFOUR"
	"ARCFOUR_context"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/symmetric/block-cipher/Serpent", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_CIPHER_SERPENT128"
	"GCRY_CIPHER_SERPENT192"
	"GCRY_CIPHER_SERPENT256"
	"GCRY_MAC_CMAC_SERPENT"
	"GCRY_MAC_GMAC_SERPENT"
	"serpent_context"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/symmetric/block-cipher/RC2", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_CIPHER_RFC2268_40"
	"GCRY_CIPHER_RFC2268_128"
	"GCRY_MAC_CMAC_RFC2268"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/symmetric/block-cipher/SEED", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_CIPHER_SEED"
	"GCRY_MAC_CMAC_SEED"
	"GCRY_MAC_GMAC_SEED"
	"SEED_context"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/symmetric/block-cipher/Camellia", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_CIPHER_CAMELLIA128"
	"GCRY_CIPHER_CAMELLIA192"
	"GCRY_CIPHER_CAMELLIA256"
	"GCRY_MAC_CMAC_CAMELLIA"
	"GCRY_MAC_GMAC_CAMELLIA"
	"CAMELLIA_context"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/symmetric/stream-cipher/Salsa20", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_CIPHER_SALSA20"
	"GCRY_CIPHER_SALSA20R12"
	"SALSA20_context_s"

[{"encryption_library":"libgcrypt", "evidence_type":"algorithm/symmetric/block-cipher/GOST", "encryption_api_usage":"data_type", "language":"all"}]
	"GCRY_CIPHER_GOST28147"
	"GCRY_MAC_CMAC_GOST28147"
	"GOST28147_context"
	"gost_sbox"

####################################################################################################
### BOTAN
####################################################################################################

[{"encryption_library":"BOTAN", "evidence_type":"library/Botan", "encryption_api_usage":"include", "language":"all"}]
	"botan.h"
	"define BOTAN BOTAN _H_"

####################################################################################################
### libMD
####################################################################################################

[{"encryption_library":"libMD", "evidence_type":"algorithm/hash/SHA1", "encryption_api_usage":"call", "language":"all"}]
	"SHA1_End"
	"SHA1_Data"
	"SHA1_File"
	"SHA1_FileChunk"
	"SHA_End"
	"SHA_Data"
	"SHA_File"
	"SHA_FileChunk"

[{"encryption_library":"libMD", "evidence_type":"algorithm/hash/SHA2", "encryption_api_usage":"call", "language":"all"}]
	"SHA224_End"
	"SHA224_Data"
	"SHA224_File"
	"SHA224_FileChunk"
	"SHA256_End"
	"SHA256_Data"
	"SHA256_File"
	"SHA256_FileChunk"
	"SHA384_End"
	"SHA384_Data"
	"SHA384_File"
	"SHA384_FileChunk"
	"SHA512_End"
	"SHA512_Data"
	"SHA512_File"
	"SHA512_FileChunk"

[{"encryption_library":"libMD", "evidence_type":"algorithm/hash/MD4", "encryption_api_usage":"call", "language":"all"}]
	"MD4Init"
	"MD4Update"
	"MD4Pad"
	"MD4Final"
	"MD4End"
	"MD4File"
	"MD4FileChunk"
	"MD4Data"

[{"encryption_library":"libMD", "evidence_type":"algorithm/hash/MD5", "encryption_api_usage":"call", "language":"all"}]
	"MD5Init"
	"MD5Update"
	"MD5Pad"
	"MD5Final"
	"MD5End"
	"MD5File"
	"MD5FileChunk"
	"MD5Data"

[{"encryption_library":"libMD", "evidence_type":"algorithm/hash/RIPEMD", "encryption_api_usage":"call", "language":"all"}]
	"RIPEMD160_Init"
	"RIPEMD160_Update"
	"RIPEMD160_Final"
	"RIPEMD160_End"
	"RIPEMD160_File"
	"RIPEMD160_FileChunk"
	"RIPEMD160_Data"

####################################################################################################
### GlibC
####################################################################################################

[{"encryption_library":"glibc", "evidence_type":"algorithm/hash/Hash", "encryption_api_usage":"call", "language":"all"}]
	"g_checksum_type_get_length"
	"g_checksum_new"
	"g_checksum_copy"
	"g_checksum_free"
	"g_checksum_reset"
	"g_checksum_update"
	"g_checksum_get_string"
	"g_checksum_get_digest"
	"g_compute_checksum_for_data"
	"g_compute_checksum_for_string"
	"g_compute_checksum_for_bytes"

####################################################################################################
### QT
####################################################################################################

[{"encryption_library":"QT", "evidence_type":"algorithm/hash/Hash", "encryption_api_usage":"data_type", "language":"all"}]
	"QCryptographicHash"

[{"encryption_library":"QT", "evidence_type":"protocol/SSL", "encryption_api_usage":"data_type", "language":"all"}]
	"QSslSocket"
	"QSslKey"
	"QSslCertificate"
	"QSslCipher"
	"QSslError"

####################################################################################################
### JAVA SE 7
###
###      http://docs.oracle.com/javase/7/docs/api/javax/crypto/package-summary.html
###      https://docs.oracle.com/javase/7/docs/api/java/security/Signature.html
####################################################################################################

[{"encryption_library":"javase7", "evidence_type":"algorithm/asymmetric/DSA", "encryption_api_usage":"call", "language":"all"}]
	"SHA1withDSA"

[{"encryption_library":"javase7", "evidence_type":"algorithm/asymmetric/RSA", "encryption_api_usage":"call", "language":"all"}]
	"SHA1withRSA"
	"SHA256withRSA"
	"MD2withRSA"
	"MD5withRSA"

####################################################################################################
### WinCrypt
###
###     https://msdn.microsoft.com/en-us/library/windows/desktop/aa380244(v=vs.85).aspx
###     https://msdn.microsoft.com/en-us/library/windows/desktop/aa386983(v=vs.85).aspx
####################################################################################################

[{"encryption_library":"wincrypt", "evidence_type":"library/wincrypt", "encryption_api_usage":"include", "language":"all"}]
	"wincrypt.h"

[{"encryption_library":"wincrypt", "evidence_type":"library/wincrypt", "encryption_api_usage":"call", "language":"all"}]
	"CryptAcquireContext"
	"PROV_FORTEZZA"
	"PROV_MS_EXCHANGE"
	"CryptGenRandom"
	"CryptReleaseContext"

[{"encryption_library":"wincrypt", "evidence_type":"algorithm/asymmetric/RSA", "encryption_api_usage":"data_type", "language":"all"}]
	"PROV_RSA_FULL"
	"PROV_RSA_AES"
	"PROV_RSA_SIG"
	"PROV_RSA_SCHANNEL"
	"HCRYPTPROV"
	"CRYPT_VERIFYCONTEXT"

[{"encryption_library":"wincrypt", "evidence_type":"algorithm/asymmetric/DSA", "encryption_api_usage":"data_type", "language":"all"}]
	"PROV_DSS"
	"PROV_DSS_DH"

[{"encryption_library":"wincrypt", "evidence_type":"algorithm/asymmetric/DiffieHellman", "encryption_api_usage":"data_type", "language":"all"}]
	"PROV_DH_SCHANNEL"

[{"encryption_library":"wincrypt", "evidence_type":"protocol/SSL", "encryption_api_usage":"data_type", "language":"all"}]
	"PROV_SSL"
